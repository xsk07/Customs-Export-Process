{"version":3,"sources":["jquery/workportal/desktop/widget/project.dashboard.menu/bizagi.workportal.desktop.widgets.project.dashboard.menu.js","jquery/workportal/desktop/widget/project.dashboard.menu.plan/bizagi.workportal.desktop.widgets.project.dashboard.menu.plan.js","jquery/workportal/desktop/widget/project.plan.sidebar/bizagi.workportal.desktop.widgets.project.plan.sidebar.js","jquery/workportal/desktop/widget/project.plan.action/bizagi.workportal.desktop.widgets.project.plan.action.js","jquery/workportal/desktop/widget/project.plan.state/bizagi.workportal.desktop.widgets.project.plan.state.js","jquery/workportal/desktop/widget/project.plan.progress/bizagi.workportal.desktop.widgets.project.plan.progress.js","jquery/workportal/desktop/widget/project.plan.time/bizagi.workportal.desktop.widgets.project.plan.time.js","jquery/workportal/desktop/widget/project.plan.parent/bizagi.workportal.desktop.widgets.project.plan.parent.js","jquery/workportal/desktop/widget/project.plan.users/bizagi.workportal.desktop.widgets.project.plan.users.js"],"names":["bizagi","workportal","widgets","widget","extend","onDiscussionsMenuStatusChange","ev","params","this","updateDiscussionsIcons","hasDiscussionsOrComment","sub","$","proxy","toggle","clean","unsub","injector","register","project","dashboard","menu","init","workportalFacade","dataService","projectDashboard","_super","loadTemplates","project-dashboard-menu","getTemplate","concat","renderContent","content","postRender","self","contextsLeftSidebarCaseDashboard","forEach","context","updateView","event","args","$content","getContent","empty","template","menuPlanDashboard","menuDashboard","planState","getPlanState","plan","planChild","argsTemplate","showCommentsOptionMenu","showFilesOptionMenu","showTimeLineOptionMenu","isVisibleShowTimeLine","render","appendTo","showContextByMenuDashboard","toUpperCase","addClass","siblings","removeClass","handlerEvents","currentState","extraValidationShowTimeLine","loadContentById","preventDefault","$item","target","closest","data","backParentPlan","hasClass","pub","type","subMenuHandler","$comments","$files","$timeline","on","getLevelNavigator","currentLevelNavigator","parseInt","getParamsByBackFromPlan","typeContext","paramsNotify","off","base","serviceloadDataPlan","supportNav","project-plan-sidebar","when","areTemplatedLoaded","done","idPlan","id","loadData","getDateServer","subscribe","loadedWithDataActivities","loadedWithDataFirstParent","unsubscribe","sidebar","notifier","planTemplateCreate","planPopupEdit","PENDING_PLAN","EXECUTING_PLAN","CLOSED_PLAN","CONTEXT_ACTIVITYPLAN","CONTEXT_ACTIVITYPLANOVERVIEW","CONTEXT_PLANCREATE","CONTEXT_ACTIVITYPLANCREATE","showActionsPlan","plan-action-main","tmpl","plugins","name","stateClosedPlan","currentStatePlan","contextualized","$contentWidget","initilizeActionMenu","onClosePlan","onNotifyLoadInfoSummaryPlan","clearAlertsOnFocus","showSucessMessage","printf","localization","getResource","showErrorMessage","setNamePlan","onNotifyExpandedRightSidebar","setStatePlan","statePlan","show","hide","namePlan","text","util","decodeHtmlEntities","onSelectMenu","ui","currentTarget","find","length","item","onClickMenuOpenEdition","onClickMenuDeletePlan","onClickMenuSaveAsTemplate","planSelected","showPopup","showPopupAddTemplatePlan","showConfirmationBox","callDeletePlan","always","response","status","onSubmitFormPlan","select","focus","parent","focusout","val","deletePlan","action","plan-state-main","renderWidget","append","state","plan-progress-main","valuePercentBarComplete","calculateProgress","progress","colorBar","$barRemainingDate","widthNumberDays","width","css","toString","completedActivities","totalActivities","activities","percentProgress","activity","workItemState","Math","round","datePickerRegional","plan-time-main","dueDate","updateWidget","planDatesToStamp","map","a","estimatedFinishDate","Date","getTime","startDate","finishDate","creationDate","closedDate","getClosedDatePlan","getIntervalOnMinutes","relativeTime","dateFormatter","getRelativeTime","now","minutesToShowTime","messageUnitTimeCalculated","replace","keywordResourceDescriptionDifference","getKeywordDifferenceDates","messageDescripionDifference","valueOfTimeCalculated","auxToDate","getSecondDate","auxPercentBar","getWidthBar","auxColorBar","getColorBarByPercent","fromDate","getFormattedDate","getFirstDate","toDate","percentBar","getLastActivity","JSON","parse","stringify","sort","activityA","activityB","getDifferenceBetweenDates","firstDate","secondDate","defer","Deferred","idUser","currentUser","callGetEffectiveDuration","difference","resolve","minutes","promise","minutesNowToDueDate","minutesCreateToNow","minutesDueDateToCreate","minutesCreateToDueDate","minutesStartToNow","minutesDueDateToNow","minutesStartToDueDate","milliseconds","intervalMinutes","differenceStartDateToCurrentDate","totalInterval","valuePercentInterval","ceil","differenceStartDateToClosedDate","percent","d","getEffectiveDuration","dateObj","monthNames","getMonth","formatDate","time","plan-parent-main","parentWorkItem","getPlanParent","planParent","idParent","radNumber","nameParent","displayName","idCase","idWorkflow","idWorkItem","idTask","processName","process","planName","isEmpty","guidActivity","goToParentCase","paramsDetailActivity","idActivity","getActivity","allowEdition","fail","msg","onClickGoToParentCase","routingExecute","usersMap","usersInformation","globalHandlersService","get","usersAssignees","plan-users-main","auxNoRepeatTypesUser","hashTypesUser","assigned","owner","cvsGuidUsers","activitiesUsers","ownerUserGuid","idUserCreator","ownerUserId","push","userGuid","userType","picture","guid","each","index","userId","userAssigned","userAssignedGuid","isRunning","inArray","filter","user","guidUser","assignee","justAssignees","label","initilizeTooltip","addEventHandlersModal","callGetDataUsers","then","showCreatorInformation","renderUserProfilesAndImages","allUsers","usersAssignee","indexOf","isOwner","isAssignee","usersAdapter","createJsonUserInfo","userCreator","userInfo","username","undefined","email","getInitials","userinformation","i","obj","$li","prop","html","console","log","csvguidUsers","usersGuids","join","height","getUsersData","getUsersAssignees","activityRunning","res_user","getUserAssignee","tasks","types","actUser","not","$target","id_userSelected","attr","task","userParam","usertooltip","click","stopPropagation","publish","widgetName","BIZAGI_WORKPORTAL_WIDGET_USERS_MODAL","closeVisible","maximize","modalParameters","title","refreshInbox","users"],"mappings":"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","sourcesContent":["/**\r\n * Name: BizAgi Desktop Widget Dashboard menu (left sidebar) * \r\n * @author Valeria Vanegas\r\n */\n\n\nbizagi.workportal.widgets.widget.extend(\"bizagi.workportal.widgets.project.dashboard.menu\", {}, {\n\n  /**\r\n                                                                                                   * Handler when discussions menu status change\r\n                                                                                                   * @param {*} ev \r\n                                                                                                   * @param {*} params \r\n                                                                                                   */\n  onDiscussionsMenuStatusChange: function onDiscussionsMenuStatusChange(ev, params) {\n    var self = this;\n    self.updateDiscussionsIcons(params.hasDiscussionsOrComment);\n  },\n\n  /**\r\n      * Update discussions icon on sidebar menu\r\n      * The icon is different when there is other discussion or there are comments\r\n      * @param {*} hasDiscussionsOrComment \r\n      */\n  updateDiscussionsIcons: function updateDiscussionsIcons(hasDiscussionsOrComment) {\n    var self = this;\n\n    self.sub(\"UPDATE_DISCUSSIONS_MENU_STATUS\", $.proxy(self.onDiscussionsMenuStatusChange, self));\n\n    $(\".bz-icon-discussion-comment\").toggle(hasDiscussionsOrComment);\n    $(\".bz-icon-discussion-no-comment\").toggle(!hasDiscussionsOrComment);\n    self.params.hasDiscussionsOrComment = hasDiscussionsOrComment;\n  },\n\n  /**\r\n      * Detach events\r\n      */\n  clean: function clean() {\n    var self = this;\n    self.unsub(\"UPDATE_DISCUSSIONS_MENU_STATUS\", $.proxy(self.onDiscussionsMenuStatusChange, self));\n  } });\n\n\nbizagi.injector.register(\"bizagi.workportal.widgets.project.dashboard.menu\", [\"workportalFacade\", \"dataService\", bizagi.workportal.widgets.project.dashboard.menu], true);","/*\r\n *   Name: Bizagi Workportal project Dashboard Menu Plan\r\n *   Author: Elkin Fernando Siabato Cruz\r\n */\n\nbizagi.workportal.widgets.project.dashboard.menu.extend(\"bizagi.workportal.widgets.project.dashboard.menu.plan\", {}, {\n\n  /*\r\n                                                                                                                        *   Constructor\r\n                                                                                                                        */\n  init: function init(workportalFacade, dataService, projectDashboard, params) {\n    var self = this;\n    self.params = params || {};\n    self.projectDashboard = projectDashboard;\n\n    // Call base\n    self._super(workportalFacade, dataService, params);\n\n    //Load templates\n    self.loadTemplates({\n      \"project-dashboard-menu\": bizagi.getTemplate(\"bizagi.workportal.desktop.widgets.project.dashboard.menu.plan\").concat(\"#project-dashboard-menu\") });\n\n  },\n\n  /**\r\n      * Renders the template defined in the widget\r\n      */\n  renderContent: function renderContent() {\n    var self = this;\n    self.content = $(\"<div></div>\");\n    return self.content;\n\n  },\n\n  /**\r\n      * links events with handlers\r\n      */\n  postRender: function postRender() {\n    var self = this;\n    self._super();\n    //Handlers\n    if (self.params && self.params.contextsLeftSidebarCaseDashboard) {\n      self.params.contextsLeftSidebarCaseDashboard.forEach(function (context) {\n        self.sub(context, $.proxy(self.updateView, self));\n      });\n    }\n  },\n\n\n  updateView: function updateView(event, params) {\n    var self = this;\n    self.params = $.extend(self.params, params.args);\n    self.clean();\n    var $content = self.getContent().empty();\n\n    var template = self.getTemplate(\"project-dashboard-menu\");\n    self.params.menuPlanDashboard = self.params.menuPlanDashboard || {};\n    $.extend(self.params.menuPlanDashboard, self.params.menuDashboard);\n\n    self.planState = self.getPlanState(self.params.plan, self.params.planChild);\n    var argsTemplate = {\n      planState: self.planState,\n      showCommentsOptionMenu: self.params.menuPlanDashboard.showCommentsOptionMenu,\n      showFilesOptionMenu: self.params.menuPlanDashboard.showFilesOptionMenu,\n      showTimeLineOptionMenu: self.params.menuPlanDashboard.showTimeLineOptionMenu && self.isVisibleShowTimeLine(self.planState) };\n\n    template.render(argsTemplate).appendTo($content);\n\n    $(\"li[data-context='\" + self.params.showContextByMenuDashboard.toUpperCase() + \"']\", self.content).addClass(\"active\").siblings().removeClass(\"active\");\n\n    self.updateDiscussionsIcons(self.params.hasDiscussionsOrComment);\n    self.handlerEvents();\n  },\n\n  /**\r\n      * Return planState by plan or planChild\r\n      * @param plan\r\n      * @param planChild\r\n      * @returns {*}\r\n      */\n  getPlanState: function getPlanState(plan, planChild) {\n    var currentState;\n    if (planChild && planChild.currentState) {\n      currentState = planChild.currentState;\n    } else\n    if (plan && plan.currentState) {\n      currentState = plan.currentState;\n    }\n    return currentState;\n  },\n\n  /**\r\n      * Behavior visible timeline option\r\n      */\n  isVisibleShowTimeLine: function isVisibleShowTimeLine(planState) {\n    var self = this;\n    var extraValidationShowTimeLine = true;\n    if (planState === \"PENDING\") {\n      extraValidationShowTimeLine = false;\n    }\n    return extraValidationShowTimeLine;\n  },\n\n  /*\r\n      *   Load Content By Id\r\n      */\n  loadContentById: function loadContentById(event) {\n    var self = this;\n    event.preventDefault();\n    var $item = $(event.target).closest(\"li\");\n\n    if ($item.data(\"context\") === \"PLANBACK\") {\n      self.backParentPlan();\n    } else\n    {\n      if (!$item.hasClass(\"active\")) {\n        var showContextByMenuDashboard = $item.data(\"context\");\n        if (showContextByMenuDashboard) {\n\n          self.pub(\"notify\", {\n            type: showContextByMenuDashboard.toUpperCase(),\n            args: $.extend(self.params, { showContextByMenuDashboard: showContextByMenuDashboard }) });\n\n          $(\"li[data-context='\" + self.params.showContextByMenuDashboard.toUpperCase() + \"']\", self.content).addClass(\"active\").siblings().removeClass(\"active\");\n        }\n      }\n    }\n  },\n\n  subMenuHandler: function subMenuHandler() {\n    var self = this;\n    var content = self.getContent();\n    var $comments = $(\"[data-context='PLANCOMMENTS']\", content);\n    var $files = $(\"[data-context='PLANFILES']\", content);\n    var $timeline = $(\"[data-context='PLANTIMELINE']\", content);\n\n    $(\".ui-bizagi-wp-project-tab-submenu a\", content).on(\"click\", function () {\n      $comments.toggle();\n      $files.toggle();\n      if (self.isVisibleShowTimeLine(self.planState)) {\n        $timeline.toggle();\n      }\n    });\n  },\n\n  backParentPlan: function backParentPlan() {\n    var self = this;\n    //when a plan created from an activity is deleted, not created from a case\n    var getLevelNavigator = self.pub(\"notify\", { type: \"NAVIGATOR_GETLEVEL\" });\n    var currentLevelNavigator = parseInt(getLevelNavigator[0]);\n    var params = self.projectDashboard.getParamsByBackFromPlan(self.params, currentLevelNavigator);\n\n    self.pub(\"notify\", {\n      type: params.typeContext,\n      args: $.extend(self.params, params.paramsNotify) });\n\n\n  },\n\n  handlerEvents: function handlerEvents() {\n    var self = this;\n    var content = self.getContent();\n\n    self.subMenuHandler();\n\n    $(\".ui-bizagi-wp-project-tab-links a\", content).on(\"click\", $.proxy(self.loadContentById, self));\n  },\n\n  clean: function clean() {\n    var self = this;\n    var content = self.getContent();\n\n    self._super();\n\n    $(\".ui-bizagi-wp-project-tab-links a\", content).off();\n\n    if (self.params && self.params.contextsLeftSidebarCaseDashboard) {\n      self.params.contextsLeftSidebarCaseDashboard.forEach(function (context) {\n        self.unsub(context, $.proxy(self.updateView, self));\n      });\n    }\n  } });\n\n\nbizagi.injector.register(\"bizagi.workportal.widgets.project.dashboard.menu.plan\", [\"workportalFacade\", \"dataService\", \"bizagi.workportal.services.behaviors.projectDashboard\", bizagi.workportal.widgets.project.dashboard.menu.plan], true);","/*\r\n *   Name: Bizagi Workportal project Plan Sidebar\r\n *   Author: Elkin Fernando Siabato Cruz\r\n */\n\nbizagi.workportal.widgets.project.base.extend(\"bizagi.workportal.widgets.project.plan.sidebar\", {}, {\n\n  /*\r\n                                                                                                       *   Constructor\r\n                                                                                                       */\n  init: function init(workportalFacade, dataService, serviceloadDataPlan, params) {\n    var self = this;\n\n    // Call base\n    self._super(workportalFacade, dataService, params);\n\n    self.serviceloadDataPlan = serviceloadDataPlan;\n    self.params = params || {};\n    params.supportNav = false;\n\n    //Load templates\n    self.loadTemplates({\n      \"project-plan-sidebar\": bizagi.getTemplate(\"bizagi.workportal.desktop.widget.project.plan.sidebar\").concat(\"#project-plan-sidebar\") });\n\n\n  },\n\n  /*\r\n      * Renders the template defined in the widget\r\n      */\n  renderContent: function renderContent() {\n    var self = this;\n    var template = self.getTemplate(\"project-plan-sidebar\");\n    self.content = template.render({});\n    $.when(self.areTemplatedLoaded()).\n    done(function () {\n      var params = { idPlan: self.params.plan.id };\n      if (self.params.planChild && self.params.planChild.id) {\n        params.idPlan = self.params.planChild.id;\n      }\n      self.serviceloadDataPlan.loadData(params, self.getDateServer, self.params);\n      self.serviceloadDataPlan.subscribe(\"loadedWithDataActivities\", $.proxy(self.loadedWithDataActivities, self));\n      self.serviceloadDataPlan.subscribe(\"loadedWithDataFirstParent\", $.proxy(self.loadedWithDataFirstParent, self));\n    });\n    return self.content;\n  },\n\n  loadedWithDataActivities: function loadedWithDataActivities() {\n    var self = this;\n    self.pub(\"notify\", {\n      type: \"LOADED_ACTIVITIES_PLAN\",\n      args: self.params });\n\n    self.pub(\"notify\", {\n      type: \"UPDATE_INFO_PLAN\",\n      args: self.params });\n\n    self.pub(\"notify\", {\n      type: \"LOAD_INFO_SUMMARY_PROGRESS_PLAN\",\n      args: self.params });\n\n    self.pub(\"notify\", {\n      type: \"LOAD_INFO_ACTIVITIES_PLAN\",\n      args: self.params });\n\n  },\n\n  loadedWithDataFirstParent: function loadedWithDataFirstParent() {\n    var self = this;\n    self.pub(\"notify\", {\n      type: \"LOAD_INFO_SUMMARY_PLAN\",\n      args: self.params });\n\n  },\n\n  clean: function clean() {\n    var self = this;\n    if (self.serviceloadDataPlan) {\n      self.serviceloadDataPlan.unsubscribe(\"loadedWithDataActivities\", $.proxy(self.loadedWithDataActivities, self));\n      self.serviceloadDataPlan.unsubscribe(\"loadedWithDataFirstParent\", $.proxy(self.loadedWithDataFirstParent, self));\n    }\n  } });\n\n\n\nbizagi.injector.register(\"bizagi.workportal.widgets.project.plan.sidebar\", [\"workportalFacade\", \"dataService\", \"bizagi.workportal.services.behaviors.loadDataPlan\", bizagi.workportal.widgets.project.plan.sidebar], true);","/*\r\n *   Name: Bizagi Workportal Desktop Project Plan Action\r\n *   Author: Elkin Fernando Siabato Cruz\r\n */\n\nbizagi.workportal.widgets.project.base.extend(\"bizagi.workportal.widgets.project.plan.action\", {}, {\n\n  /*\r\n                                                                                                      *   Constructor\r\n                                                                                                      */\n  init: function init(workportalFacade, dataService, projectDashboard, notifier, planTemplateCreate, planPopupEdit, params) {\n    var self = this;\n\n    // Call base\n    self._super(workportalFacade, dataService, params);\n\n    self.PENDING_PLAN = \"PENDING\";\n    self.EXECUTING_PLAN = \"EXECUTING\";\n    self.CLOSED_PLAN = \"CLOSED\";\n\n    self.CONTEXT_ACTIVITYPLAN = \"ACTIVITYPLAN\";\n    self.CONTEXT_ACTIVITYPLANOVERVIEW = \"ACTIVITYPLANOVERVIEW\";\n    self.CONTEXT_PLANCREATE = \"PLANCREATE\";\n    self.CONTEXT_ACTIVITYPLANCREATE = \"ACTIVITYPLANCREATE\";\n\n    self.showActionsPlan = false;\n    self.projectDashboard = projectDashboard;\n    self.notifier = notifier;\n    self.planTemplateCreate = planTemplateCreate;\n    self.planPopupEdit = planPopupEdit;\n\n    //Load templates\n    self.loadTemplates({\n      \"plan-action-main\": bizagi.getTemplate(\"bizagi.workportal.desktop.project.plan.action\").concat(\"#project-plan-action\") });\n\n  },\n\n  renderContent: function renderContent() {\n    var self = this;\n    var tmpl = self.getTemplate(\"plan-action-main\");\n\n    self.showActionsPlan = self.params.showContextByMenuDashboard !== self.CONTEXT_ACTIVITYPLAN &&\n    self.params.showContextByMenuDashboard !== self.CONTEXT_ACTIVITYPLANOVERVIEW;\n\n    self.plugins = {};\n    self.content = tmpl.render({\n      plan: self.params.plan.name,\n      stateClosedPlan: self.CLOSED_PLAN,\n      currentStatePlan: self.params.plan.currentState,\n      showActionsPlan: self.showActionsPlan });\n\n\n    if (self.showActionsPlan) {\n      self.params.plan.contextualized = typeof self.params.plan.contextualized == \"undefined\" ? true : self.params.plan.contextualized;\n    }\n\n    return self.content;\n  },\n\n  postRender: function postRender() {\n\n    var self = this;\n    var $contentWidget = self.getContent();\n\n    if (self.showActionsPlan) {\n      self.initilizeActionMenu();\n      $(\"a#to-close-plan\", $contentWidget).on(\"click\", $.proxy(self.onClosePlan, self));\n    }\n\n    self.sub(\"LOAD_INFO_SUMMARY_PLAN\", $.proxy(self.onNotifyLoadInfoSummaryPlan, self));\n    self.clearAlertsOnFocus();\n\n    self.planTemplateCreate.sub('planTemplateCreatedSuccess', function () {\n      self.notifier.showSucessMessage(\n      printf(bizagi.localization.getResource('workportal-project-plan-create-template-success'), ''));\n    });\n    self.planTemplateCreate.sub('planTemplateCreatedFailed', function () {\n      self.notifier.showErrorMessage(\n      printf(bizagi.localization.getResource('workportal-project-plan-create-template-fail'), ''));\n    });\n\n    self.planPopupEdit.sub('planEditedSuccess', function () {\n      self.setNamePlan(self.params.plan.name);\n\n      self.pub(\"notify\", {\n        type: \"UPDATE_INFO_PLAN\" });\n\n\n      self.pub(\"notify\", {\n        type: \"LOAD_INFO_SUMMARY_PLAN\",\n        args: self.params });\n\n\n      self.notifier.showSucessMessage(\n      printf(bizagi.localization.getResource('workportal-project-plan-edit-success'), ''));\n    });\n\n    self.planPopupEdit.sub('planEditedFailed', function () {\n      self.notifier.showErrorMessage(\n      printf(bizagi.localization.getResource('workportal-project-plan-edit-fail'), ''));\n    });\n\n    self.sub(\"EXPANDED_RIGHT_SIDEBAR\", $.proxy(self.onNotifyExpandedRightSidebar, self));\n  },\n\n  onNotifyExpandedRightSidebar: function onNotifyExpandedRightSidebar() {\n    var self = this;\n    if (self.showActionsPlan) {\n      self.initilizeActionMenu();\n    }\n  },\n\n  /**\r\n      * Notifies when an event is raised\r\n      */\n\n  onNotifyLoadInfoSummaryPlan: function onNotifyLoadInfoSummaryPlan() {\n    var self = this;\n    self.setStatePlan(self.params.plan.currentState);\n    self.setNamePlan(self.params.plan.name);\n  },\n\n  /**\r\n      * UI\r\n      */\n\n  setStatePlan: function setStatePlan(statePlan) {\n    var self = this;\n    if (statePlan) {\n      switch (statePlan.toUpperCase()) {\n        case \"PENDING\":\n          $(\".state-pending-plan\", self.content).show().siblings().hide();\n          break;\n        case \"EXECUTING\":\n          $(\".state-executing-plan\", self.content).show().siblings().hide();\n          break;\n        case \"CLOSED\":\n          $(\".state-closed-plan\", self.content).show().siblings().hide();\n          break;}\n\n    }\n  },\n\n  setNamePlan: function setNamePlan(namePlan) {\n    var self = this;\n    $(\".ui-bizagi-wp-project-plan-header .bz-wp-section\", self.content).text(bizagi.util.decodeHtmlEntities(namePlan));\n  },\n\n  /**\r\n      Events\r\n      */\n  onSelectMenu: function onSelectMenu(event, ui) {\n    var self = this;\n    if ($(event.currentTarget).find(\"i\").length === 0) {\n      var item = $(ui.item).data(\"item\");\n\n      switch (item) {\n        case \"edit\":\n          self.onClickMenuOpenEdition();\n          break;\n        case \"delete\":\n          self.onClickMenuDeletePlan();\n          break;\n        case \"saveastmpl\":\n          self.onClickMenuSaveAsTemplate();\n          break;}\n\n    }\n\n  },\n\n  onClickMenuOpenEdition: function onClickMenuOpenEdition() {\n    var self = this;\n    var planSelected = self.params.plan;\n    self.planPopupEdit.showPopup(self.params, self.dataService, planSelected);\n  },\n\n  onClickMenuSaveAsTemplate: function onClickMenuSaveAsTemplate() {\n    var self = this;\n    self.planTemplateCreate.showPopupAddTemplatePlan(self.params,\n    self.dataService, self.params.plan.contextualized, self.params.plan.id);\n  },\n\n  onClickMenuDeletePlan: function onClickMenuDeletePlan() {\n    var self = this;\n\n    $.when(bizagi.showConfirmationBox(bizagi.localization.getResource(\"workportal-project-plan-action-delete-confirmation\"), \"\", \"info\")).done(function () {\n      var params = { id: self.params.plan.id };\n\n      $.when(self.callDeletePlan(params)).always(function (response) {\n        if (response.status === 200 || typeof response.status === \"undefined\") {\n          $.extend(self.params.plan, params);\n          self.notifier.showSucessMessage(\n          printf(bizagi.localization.getResource(\"workportal-project-plan-delete-success\"), \"\"));\n\n          //when a plan created from an activity is deleted, not created from a case\n          var getLevelNavigator = self.pub(\"notify\", { type: \"NAVIGATOR_GETLEVEL\" });\n          var currentLevelNavigator = parseInt(getLevelNavigator[0]);\n          var params = self.projectDashboard.getParamsByBackFromPlan(self.params, currentLevelNavigator, true);\n\n          self.pub(\"notify\", {\n            type: params.typeContext,\n            args: $.extend(self.params, params.paramsNotify) });\n\n        } else\n        {\n          self.notifier.showErrorMessage(\n          printf(bizagi.localization.getResource('workportal-project-plan-delete-fail'), ''));\n        }\n      });\n    });\n  },\n\n  onSubmitFormPlan: function onSubmitFormPlan(event) {\n    event.preventDefault();\n  },\n\n  initilizeActionMenu: function initilizeActionMenu() {\n    var self = this;\n    $(\".ui-bizagi-wp-project-plan-action-menu\", self.content).menu({\n      select: $.proxy(self.onSelectMenu, self) }).\n    removeClass(\"ui-widget-content\");\n  },\n\n\n  /**\r\n      * Initialize edit plugin\r\n      */\n\n  clearAlertsOnFocus: function clearAlertsOnFocus() {\n    $(\".ui-bizagi-wp-project-container-validator-relative input, .ui-bizagi-wp-project-container-validator-relative textarea\").focus(function () {\n      $(this).parent().find(\".k-invalid-msg\").hide();\n    }).focusout(function () {\n      if ($(this).val().length < 1) {\n        $(this).parent().find(\".k-invalid-msg\").show();\n      }\n    });\n  },\n\n  /*activitiesAreCompleted: function(activities){\r\n         var listActivities = activities || [];\r\n         var numActivitiesCompleted =  listActivities.filter(function(activity){\r\n             return activity.finishDate;\r\n         }).length;\r\n         return numActivitiesCompleted == activities.length;\r\n     },*/\n\n  /*getCopyObjectPlan: function(){\r\n              var self = this;\r\n              return {\r\n                  id: self.params.plan.id,\r\n                  name: self.params.plan.name,\r\n                  description: self.params.plan.description,\r\n                  dueDate: self.params.plan.dueDate,\r\n                  waitForCompletion: self.params.plan.waitForCompletion,\r\n                  currentState: self.params.plan.currentState,\r\n                  parentWorkItem: self.params.plan.parentWorkItem,\r\n                  creationDate: self.params.plan.creationDate,\r\n                  startDate: self.params.plan.startDate,\r\n                  idUserCreator: self.params.plan.idUserCreator,\r\n                  contextualized: self.params.plan.contextualized,\r\n                  activities: self.params.plan.activities\r\n              };\r\n          },*/\n\n  /**\r\n                * Call services\r\n                */\n  /*callUpdatePlan: function(params){\r\n                       var self = this;\r\n                       return $.when(self.dataService.updatePlan(params)).done(function () {\r\n                           $.extend(self.params.plan, params);\r\n                         });\r\n                   },\r\n                     callClosePlan: function(params){\r\n                       var self = this;\r\n                       return $.when(self.dataService.closePlan(params)).done(function () {\r\n                           $.extend(self.params.plan, params);\r\n                           self.notifier.showSucessMessage(\r\n                               printf(bizagi.localization.getResource(\"workportal-project-plan-close-success\"), \"\"));\r\n                       });\r\n                   },*/\n\n\n\n  callDeletePlan: function callDeletePlan(params) {\n    var self = this;\n    return $.when(self.dataService.deletePlan(params));\n  },\n\n  clean: function clean() {\n    var self = this;\n    self.planTemplateCreate.unsub(\"planTemplateCreatedSuccess\");\n    self.planTemplateCreate.unsub(\"planTemplateCreatedFailed\");\n    self.planPopupEdit.unsub(\"planEditedSuccess\");\n    self.planPopupEdit.unsub(\"planEditedFailed\");\n\n    self.unsub(\"EXPANDED_RIGHT_SIDEBAR\", $.proxy(self.onNotifyExpandedRightSidebar, self));\n  } });\n\n\nbizagi.injector.register(\"bizagi.workportal.widgets.project.plan.action\", [\"workportalFacade\", \"dataService\",\n\"bizagi.workportal.services.behaviors.projectDashboard\", \"notifier\",\n\"bizagi.workportal.widgets.project.plan.template.create\",\n\"bizagi.workportal.widgets.project.plan.edit\",\nbizagi.workportal.widgets.project.plan.action], true);","/*\r\n *   Name: Bizagi Workportal Desktop Project Plan State\r\n *   Author: Elkin Fernando Siabato Cruz\r\n */\n\nbizagi.workportal.widgets.widget.extend(\"bizagi.workportal.widgets.project.plan.state\", {}, {\n\n  /*\r\n                                                                                               *   Constructor\r\n                                                                                               */\n  init: function init(workportalFacade, dataService, params) {\n    var self = this;\n\n    // Call base\n    self._super(workportalFacade, dataService, params);\n\n    //Load templates\n    self.loadTemplates({\n      \"plan-state-main\": bizagi.getTemplate(\"bizagi.workportal.desktop.project.plan.state\").concat(\"#project-plan-state\") });\n\n  },\n\n  renderContent: function renderContent() {\n    var self = this;\n    self.content = $(\"<div></div>\");\n    return self.content;\n  },\n\n  postRender: function postRender() {\n    var self = this;\n    self.sub(\"LOAD_INFO_SUMMARY_PLAN\", $.proxy(self.onNotifyLoadInfoSummaryPlan, self));\n  },\n\n  /**\r\n      * Notifies when an event is raised\r\n      */\n\n  onNotifyLoadInfoSummaryPlan: function onNotifyLoadInfoSummaryPlan(event, params) {\n    var self = this;\n    var tmpl = self.getTemplate(\"plan-state-main\");\n    var renderWidget = tmpl.render({});\n    self.params = $.extend(self.params, params.args);\n\n    var state = self.params.plan.currentState;\n\n    switch (state.toUpperCase()) {\n      case \"PENDING\":\n        $(\".state-pending\", renderWidget).show().siblings().hide();\n        break;\n      case \"EXECUTING\":\n        $(\".state-executing\", renderWidget).show().siblings().hide();\n        break;\n      case \"CLOSED\":\n        $(\".state-closed\", renderWidget).show().siblings().hide();\n        break;}\n\n    self.content.empty().append(renderWidget);\n\n  } });\n\n\n\nbizagi.injector.register(\"bizagi.workportal.widgets.project.plan.state\", [\"workportalFacade\", \"dataService\", bizagi.workportal.widgets.project.plan.state], true);","/*\r\n *   Name: Bizagi Workportal Desktop Project Plan Progress\r\n *   Author: Elkin Fernando Siabato Cruz\r\n */\n\nbizagi.workportal.widgets.widget.extend(\"bizagi.workportal.widgets.project.plan.progress\", {}, {\n\n  /*\r\n                                                                                                  *   Constructor\r\n                                                                                                  */\n  init: function init(workportalFacade, dataService, params) {\n    var self = this;\n\n    // Call base\n    self._super(workportalFacade, dataService, params);\n\n    //Load templates\n    self.loadTemplates({\n      \"plan-progress-main\": bizagi.getTemplate(\"bizagi.workportal.desktop.project.plan.progress\").concat(\"#project-plan-progress\") });\n\n  },\n\n  renderContent: function renderContent() {\n    var self = this;\n    self.content = $(\"<div></div>\");\n    return self.content;\n  },\n\n  postRender: function postRender() {\n    var self = this;\n\n    self.sub(\"LOAD_INFO_SUMMARY_PROGRESS_PLAN\", $.proxy(self.onNotifyLoadInfoSummaryPlan, self));\n  },\n\n  /**\r\n      * Notifies when an event is raised\r\n      */\n\n  onNotifyLoadInfoSummaryPlan: function onNotifyLoadInfoSummaryPlan(event, params) {\n    var self = this;\n    self.params = $.extend(self.params, params.args);\n\n    var $content = self.getContent().empty();\n\n    var valuePercentBarComplete = self.calculateProgress();\n\n    var argsTemplate = {};\n    argsTemplate.progress = valuePercentBarComplete;\n\n    if (argsTemplate.progress < 33) {\n      argsTemplate.colorBar = \"Red\";\n    } else\n    if (argsTemplate.progress < 66) {\n      argsTemplate.colorBar = \"Yellow\";\n    } else\n    {\n      argsTemplate.colorBar = \"Green\";\n    }\n\n    //Update widget\n    var contentTemplate = self.getTemplate(\"plan-progress-main\");\n    contentTemplate.\n    render(argsTemplate).\n    appendTo($content);\n\n    //Begin Adjust status bar next to the number days\n    var $barRemainingDate = $(\".remaining-days .time-remaining\", $content);\n    var widthNumberDays = $(\".remaining-days .days\", $content).width();\n    $barRemainingDate.css(\"padding-left\", (widthNumberDays + 7).toString() + \"px\");\n    //End Adjust status bar next to the number days\n\n\n  },\n\n  calculateProgress: function calculateProgress() {\n    var self = this;\n\n    var completedActivities = 0;\n    var totalActivities = self.params.plan.activities.length;\n    var percentProgress = 0;\n\n    if (totalActivities !== 0) {\n      self.params.plan.activities.forEach(function (activity) {\n        if (activity.workItemState === \"Completed\") {\n          completedActivities++;\n        }\n      });\n      percentProgress = Math.round(completedActivities / totalActivities * 100);\n    }\n    return percentProgress;\n  } });\n\n\nbizagi.injector.register(\"bizagi.workportal.widgets.project.plan.progress\", [\"workportalFacade\", \"dataService\", bizagi.workportal.widgets.project.plan.progress], true);","/*\r\n *   Name: Bizagi Workportal Desktop Project Plan Time\r\n *   Author: Elkin Fernando Siabato Cruz\r\n */\n\nbizagi.workportal.widgets.widget.extend(\"bizagi.workportal.widgets.project.plan.time\", {}, {\n\n  /*\r\n                                                                                              *   Constructor\r\n                                                                                              */\n  init: function init(workportalFacade, dataService, params) {\n    var self = this;\n\n    // Call base\n    self._super(workportalFacade, dataService, params);\n\n    self.PENDING_PLAN = \"PENDING\";\n    self.EXECUTING_PLAN = \"EXECUTING\";\n    self.CLOSED_PLAN = \"CLOSED\";\n\n    //Regional\n    self.datePickerRegional = bizagi.localization.getResource(\"datePickerRegional\");\n\n    //Load templates\n    self.loadTemplates({\n      \"plan-time-main\": bizagi.getTemplate(\"bizagi.workportal.desktop.project.plan.time\").concat(\"#project-plan-time\") });\n\n  },\n\n  renderContent: function renderContent() {\n    var self = this;\n    self.content = $(\"<div></div>\");\n    return self.content;\n  },\n\n  postRender: function postRender() {\n    var self = this;\n\n    self.sub(\"LOAD_INFO_SUMMARY_PLAN\", $.proxy(self.onNotifyLoadInfoSummaryPlan, self));\n  },\n\n  /**\r\n      * Notifies when an event is raised\r\n      */\n\n  onNotifyLoadInfoSummaryPlan: function onNotifyLoadInfoSummaryPlan(event, params) {\n    var self = this;\n    self.params = $.extend(self.params, params.args);\n\n    if (self.params.plan) {\n      if (self.params.plan.dueDate) {\n        if (self.params.plan.currentState === self.PENDING_PLAN || self.params.plan.currentState === self.EXECUTING_PLAN) {\n          self.updateWidget(event, params);\n        } else\n        {\n          self.sub(\"LOADED_ACTIVITIES_PLAN\", $.proxy(self.updateWidget, self));\n        }\n      } else\n      {\n        self.getContent().empty();\n      }\n    }\n\n  },\n\n  /**\r\n      * change the time properties string to timestamp number\r\n      * @param {*} plan \r\n      */\n  planDatesToStamp: function planDatesToStamp(plan) {\n    if (plan.activities)\n    plan.activities.map(function (a) {\n      if (a.estimatedFinishDate) a.estimatedFinishDate = new Date(a.estimatedFinishDate).getTime();\n      if (a.startDate) a.startDate = new Date(a.startDate).getTime();\n      if (a.finishDate) a.finishDate = new Date(a.finishDate).getTime();\n    });\n    if (plan.dueDate) plan.dueDate = new Date(plan.dueDate).getTime();\n    if (plan.creationDate) plan.creationDate = new Date(plan.creationDate).getTime();\n    if (plan.startDate) plan.startDate = new Date(plan.startDate).getTime();\n    if (plan.closedDate) plan.closedDate = new Date(plan.closedDate).getTime();\n    if (plan.finishDate) plan.finishDate = new Date(plan.finishDate).getTime();\n  },\n  updateWidget: function updateWidget(event, params) {\n    var self = this;\n    self.params = $.extend(self.params, params.args);\n    self.planDatesToStamp(self.params.plan);\n    var $content = self.getContent().empty();\n    if (self.params.plan.currentState === self.CLOSED_PLAN) {\n      self.getClosedDatePlan(self.params.plan);\n    }\n    $.when(self.getIntervalOnMinutes(self.params.plan)).done(function (response) {\n      var relativeTime = bizagi.util.dateFormatter.getRelativeTime(new Date(Date.now() - response.minutesToShowTime * 60 * 1000), null, true);\n\n      var messageUnitTimeCalculated = relativeTime.replace(/\\d/g, \"\");\n      var keywordResourceDescriptionDifference = self.getKeywordDifferenceDates(self.params.plan);\n      var messageDescripionDifference = bizagi.localization.getResource(\"workportal-project-plan-state-\" + keywordResourceDescriptionDifference);\n      messageDescripionDifference = messageDescripionDifference.replace(\"%s\", messageUnitTimeCalculated);\n\n      var valueOfTimeCalculated = relativeTime.replace(/\\D/g, \"\");\n\n      var auxToDate = self.getSecondDate(self.params.plan);\n      var auxPercentBar = self.getWidthBar(self.params.plan, response);\n      var auxColorBar = self.getColorBarByPercent(auxPercentBar);\n      var argsTemplate = {\n        fromDate: self.getFormattedDate(new Date(self.getFirstDate(self.params.plan))),\n        toDate: auxToDate ? self.getFormattedDate(new Date(auxToDate)) : null,\n        valueOfTimeCalculated: valueOfTimeCalculated,\n        messageDescripionDifference: messageDescripionDifference,\n        percentBar: auxPercentBar,\n        colorBar: auxColorBar };\n\n\n      var contentTemplate = self.getTemplate(\"plan-time-main\");\n      contentTemplate.\n      render(argsTemplate).\n      appendTo($content);\n\n    });\n  },\n  getFirstDate: function getFirstDate(plan) {\n    var self = this;\n    switch (plan.currentState) {\n      case self.PENDING_PLAN:\n        if (plan.dueDate) {\n          return plan.dueDate;\n        } else\n        {\n          return plan.creationDate;\n        }\n        break;\n      case self.EXECUTING_PLAN:\n      case self.CLOSED_PLAN:\n        return plan.startDate;}\n\n  },\n  getSecondDate: function getSecondDate(plan) {\n    var self = this;\n    switch (plan.currentState) {\n      case self.PENDING_PLAN:\n        return null;\n      case self.EXECUTING_PLAN:\n        return plan.dueDate;\n      case self.CLOSED_PLAN:\n        return plan.closedDate;}\n\n  },\n  getLastActivity: function getLastActivity(activities) {\n    var copyActivities = JSON.parse(JSON.stringify(activities));\n    return copyActivities.sort(function (activityA, activityB) {\n      return activityA.finishDate < activityB.finishDate ? 1 : -1;\n    })[0];\n  },\n\n  getClosedDatePlan: function getClosedDatePlan(plan) {\n    var self = this;\n    plan.closedDate = self.getLastActivity(plan.activities).finishDate;\n    return plan.closedDate;\n  },\n\n  getDifferenceBetweenDates: function getDifferenceBetweenDates(firstDate, secondDate) {\n    var self = this;\n    var defer = $.Deferred();\n    var params = {\n      idUser: bizagi.currentUser.idUser,\n      fromDate: firstDate,\n      toDate: secondDate };\n\n\n    $.when(self.callGetEffectiveDuration(params)).done(function (difference) {\n      defer.resolve(difference.minutes);\n    });\n    return defer.promise();\n  },\n\n  getIntervalOnMinutes: function getIntervalOnMinutes(plan) {\n    var self = this;\n    var defer = $.Deferred();\n    switch (plan.currentState) {\n      case self.PENDING_PLAN:\n        if (plan.dueDate > Date.now()) {\n          $.when(self.getDifferenceBetweenDates(Date.now(), plan.dueDate)).done(function (minutesNowToDueDate) {\n            $.when(self.getDifferenceBetweenDates(plan.creationDate, Date.now())).done(function (minutesCreateToNow) {\n              defer.resolve({ minutesToShowTime: minutesNowToDueDate, minutesCreateToNow: minutesCreateToNow });\n            });\n          });\n        } else\n        if (plan.dueDate < plan.creationDate) {\n          $.when(self.getDifferenceBetweenDates(plan.dueDate, plan.creationDate)).done(function (minutesDueDateToCreate) {\n            $.when(self.getDifferenceBetweenDates(plan.creationDate, Date.now())).done(function (minutesCreateToNow) {\n              defer.resolve({ minutesToShowTime: minutesDueDateToCreate + minutesCreateToNow, minutesCreateToNow: minutesCreateToNow });\n            });\n          });\n        } else\n        if (plan.dueDate > plan.creationDate) {\n          $.when(self.getDifferenceBetweenDates(plan.creationDate, plan.dueDate)).done(function (minutesCreateToDueDate) {\n            $.when(self.getDifferenceBetweenDates(plan.dueDate, Date.now())).done(function (minutesCreateToNow) {\n              defer.resolve({ minutesToShowTime: minutesCreateToDueDate + minutesCreateToNow, minutesCreateToNow: minutesCreateToNow });\n            });\n          });\n        }\n        break;\n      case self.EXECUTING_PLAN:\n        if (plan.dueDate) {\n          if (plan.dueDate > Date.now()) {\n            $.when(self.getDifferenceBetweenDates(Date.now(), plan.dueDate)).done(function (minutesNowToDueDate) {\n              $.when(self.getDifferenceBetweenDates(plan.startDate, Date.now())).done(function (minutesStartToNow) {\n                defer.resolve({ minutesToShowTime: minutesNowToDueDate, minutesStartToNow: minutesStartToNow });\n              });\n            });\n          } else\n          {\n            $.when(self.getDifferenceBetweenDates(plan.dueDate, Date.now())).done(function (minutesDueDateToNow) {\n              $.when(self.getDifferenceBetweenDates(plan.startDate, plan.dueDate)).done(function (minutesStartToDueDate) {\n                defer.resolve({ minutesToShowTime: minutesDueDateToNow, minutesStartToDueDate: minutesStartToDueDate });\n              });\n            });\n          }\n\n        } else\n        {\n          $.when(self.getDifferenceBetweenDates(plan.startDate, Date.now())).done(function (minutes) {\n            defer.resolve({ minutesToShowTime: minutes });\n          });\n        }\n        break;\n      case self.CLOSED_PLAN:\n        $.when(self.getDifferenceBetweenDates(plan.startDate, plan.closedDate)).done(function (minutes) {\n          defer.resolve({ minutesToShowTime: minutes });\n        });}\n\n\n    return defer.promise();\n  },\n\n  getKeywordDifferenceDates: function getKeywordDifferenceDates(plan) {\n    var self = this;\n    switch (plan.currentState) {\n      case self.PENDING_PLAN:\n        if (plan.dueDate > Date.now()) {\n          return \"remaining\";\n        } else\n        {\n          return \"exceeded\";\n        }\n        break;\n      case self.EXECUTING_PLAN:\n        if (plan.dueDate) {\n          if (plan.dueDate > Date.now()) {\n            return \"remaining\";\n          } else\n          {\n            return \"exceeded\";\n          }\n\n        } else\n        {\n          return \"opened\";\n        }\n        break;\n      case self.CLOSED_PLAN:\n        return \"executed\";}\n\n  },\n\n  getRelativeTime: function getRelativeTime(milliseconds) {\n    return bizagi.util.dateFormatter.getRelativeTime(milliseconds, null, false);\n  },\n\n  getWidthBar: function getWidthBar(plan, intervalMinutes) {\n    var self = this,\n    differenceStartDateToCurrentDate = {};\n    switch (plan.currentState) {\n      case self.PENDING_PLAN:\n        if (plan.dueDate) {\n          if (plan.dueDate < Date.now()) {\n            return 0;\n          } else\n          {\n            var totalInterval = intervalMinutes.minutesCreateToNow + intervalMinutes.minutesToShowTime;\n            valuePercentInterval = intervalMinutes.minutesToShowTime;\n            return Math.ceil(valuePercentInterval * 100 / totalInterval);\n          }\n        } else\n        {\n          return 0;\n        }\n        break;\n      case self.EXECUTING_PLAN:\n        if (plan.dueDate) {\n          if (plan.dueDate > Date.now()) {\n            var totalInterval = intervalMinutes.minutesStartToNow + intervalMinutes.minutesToShowTime;\n            valuePercentInterval = intervalMinutes.minutesToShowTime;\n            return Math.ceil(valuePercentInterval * 100 / totalInterval);\n          } else\n          {\n            return 0;\n          }\n        } else\n        {\n          return 0;\n        }\n        break;\n      case self.CLOSED_PLAN:\n        if (plan.closedDate > Date.now()) {\n          var differenceStartDateToClosedDate = plan.closedDate - plan.startDate;\n          differenceStartDateToCurrentDate = Date.now() - plan.startDate;\n          return Math.ceil(differenceStartDateToCurrentDate * 100 / differenceStartDateToClosedDate);\n        } else\n        {\n          return 100;\n        }}\n\n\n\n  },\n\n  getColorBarByPercent: function getColorBarByPercent(percent) {\n    if (percent < 33) {\n      return \"Red\";\n    } else\n    if (percent < 66) {\n      return \"Yellow\";\n    } else\n    {\n      return \"Green\";\n    }\n  },\n\n  /**\r\n      * Call services\r\n      */\n\n  callGetEffectiveDuration: function callGetEffectiveDuration(params) {\n    var self = this;\n    var d = $.Deferred();\n\n    $.when(\n    self.dataService.getEffectiveDuration(params)).\n    done(function (data) {\n      d.resolve(data);\n    });\n    return d.promise();\n  },\n\n  getFormattedDate: function getFormattedDate(dateObj) {\n    var self = this;\n    var monthsNames = self.datePickerRegional.monthNames;\n    var shortMonth = dateObj.getMonth();\n    return monthsNames[shortMonth] + \" \" + bizagi.util.dateFormatter.formatDate(dateObj, \"dd hh:mm tt\", bizagi.localization.getResource(\"datePickerRegional\"));\n  } });\n\n\nbizagi.injector.register(\"bizagi.workportal.widgets.project.plan.time\", [\"workportalFacade\", \"dataService\", bizagi.workportal.widgets.project.plan.time], true);","/*\r\n *   Name: Bizagi Workportal Desktop Project Plan Parent\r\n *   Author: Elkin Fernando Siabato Cruz\r\n */\n\nbizagi.workportal.widgets.widget.extend(\"bizagi.workportal.widgets.project.plan.parent\", {}, {\n\n  /*\r\n                                                                                                *   Constructor\r\n                                                                                                */\n  init: function init(workportalFacade, dataService, params) {\n    var self = this;\n\n    // Call base\n    self._super(workportalFacade, dataService, params);\n\n    //Load templates\n    self.loadTemplates({\n      \"plan-parent-main\": bizagi.getTemplate(\"bizagi.workportal.desktop.project.plan.parent\").concat(\"#project-plan-parent\") });\n\n  },\n\n  renderContent: function renderContent() {\n\n    var self = this;\n    self.content = $(\"<div></div>\");\n    return self.content;\n  },\n\n  postRender: function postRender() {\n    var self = this;\n    self.sub(\"LOAD_INFO_SUMMARY_PLAN\", $.proxy(self.onNotifyLoadInfoSummaryPlan, self));\n  },\n\n  /**\r\n      * Notifies when an event is raised\r\n      */\n  onNotifyLoadInfoSummaryPlan: function onNotifyLoadInfoSummaryPlan(event, params) {\n    var self = this,\n    $content = self.getContent().empty();\n    self.params = $.extend(self.params, params.args);\n    if (self.params.plan.parentWorkItem) {\n      $.when(self.dataService.getPlanParent({ idPlan: self.params.plan.id })).done(function (planParent) {\n        self.params.plan.parent = planParent;\n\n        if (self.params.plan.parent) {\n          var argsTemplate = {\n            idParent: self.params.plan.parent.radNumber,\n            nameParent: self.params.plan.parent.displayName,\n            idCase: self.params.plan.parent.idCase,\n            idWorkflow: self.params.plan.parent.idWorkflow,\n            idWorkItem: self.params.plan.parent.idWorkItem,\n            idTask: self.params.plan.parent.idTask,\n            processName: self.params.process ? self.params.process : self.params.plan.parent.planName };\n\n\n          if (bizagi.util.isEmpty(self.params.plan.parent.guidActivity)) {\n            self.goToParentCase($content, argsTemplate);\n          } else {\n            var paramsDetailActivity = {\n              idPlan: self.params.plan.id,\n              idActivity: self.params.plan.parent.guidActivity };\n\n            $.when(self.dataService.getActivity(paramsDetailActivity)).done(function (response) {\n              self.params.plan.parent.allowEdition = response.allowEdition;\n              self.goToParentCase($content, argsTemplate);\n            });\n          }\n\n        }\n\n      }).fail(function (msg) {\n\n      });\n    }\n  },\n  goToParentCase: function goToParentCase(content, argsTemplate) {\n    var self = this;\n    //TODO: double call because routing dont release memory and widgets\n    //Test with a breakpoint\n    content.empty();\n\n    //Update widget\n    var contentTemplate = self.getTemplate(\"plan-parent-main\");\n    contentTemplate.\n    render(argsTemplate).\n    appendTo(content);\n    $(\"#go-to-parent-case\", content).on(\"click\", $.proxy(self.onClickGoToParentCase, self));\n  },\n  onClickGoToParentCase: function onClickGoToParentCase(event) {\n    event.preventDefault();\n    var self = this;\n    self.routingExecute($(event.target).closest(\"#go-to-parent-case\"));\n  } });\n\n\nbizagi.injector.register(\"bizagi.workportal.widgets.project.plan.parent\", [\"workportalFacade\", \"dataService\", bizagi.workportal.widgets.project.plan.parent], true);","/*\r\n *   Name: Bizagi Workportal Desktop Project Plan Users\r\n *   Author: Elkin Fernando Siabato Cruz\r\n */\n\nbizagi.workportal.widgets.widget.extend(\"bizagi.workportal.widgets.project.plan.users\", {}, {\n\n  /*\r\n                                                                                               *   Constructor\r\n                                                                                               */\n  init: function init(workportalFacade, dataService, params) {\n    var self = this;\n    self.usersMap = {};\n    self.plugins = {};\n    self.usersInformation = [];\n    self.globalHandlersService = bizagi.injector.get('globalHandlersService');\n    self.usersAssignees = [];\n    // Call base\n    self._super(workportalFacade, dataService, params);\n\n    //Load templates\n    self.loadTemplates({\n      \"plan-users-main\": bizagi.getTemplate(\"bizagi.workportal.desktop.project.plan.users\").concat(\"#project-plan-users\") });\n\n\n    self.auxNoRepeatTypesUser = {};\n    self.hashTypesUser = {\n      \"assigned\": bizagi.localization.getResource(\"workportal-project-user-assigned\"),\n      \"owner\": bizagi.localization.getResource(\"workportal-project-user-owner\") };\n\n  },\n\n  renderContent: function renderContent() {\n\n    var self = this;\n    self.content = $(\"<div></div>\");\n    return self.content;\n  },\n\n  postRender: function postRender() {\n    var self = this;\n    self.sub(\"LOAD_INFO_ACTIVITIES_PLAN\", $.proxy(self.onNotifyLoadInfoSummaryPlan, self));\n  },\n\n  /**\r\n      * Notifies when an event is raised\r\n      */\n  onNotifyLoadInfoSummaryPlan: function onNotifyLoadInfoSummaryPlan(event, params) {\n    var self = this,\n    args = params.args,\n    cvsGuidUsers = [],\n    activitiesUsers = [],\n    $content = self.getContent().empty();\n    var ownerUserGuid = params.args.plan.idUserCreator;\n    var ownerUserId = params.args.plan.idUserCreator;\n    self.params = $.extend(self.params, params.args);\n\n    activitiesUsers.push({ \"idUser\": ownerUserId, 'userGuid': ownerUserGuid, \"userType\": [\"owner\"] });\n    self.usersMap[\"-\" + ownerUserId + \"-\"] = {\n      picture: \"\",\n      id: ownerUserId,\n      guid: ownerUserGuid,\n      name: \"\",\n      userType: [\"owner\"] };\n\n    cvsGuidUsers.push(ownerUserId);\n    $.each(self.params.plan.activities, function (index, activity) {\n      var userId = activity.userAssigned;\n      var userGuid = activity.userAssignedGuid;\n      if (activity.isRunning == true) {\n        if (userId === ownerUserId) {\n          if ($.inArray(\"Assigned\", activitiesUsers[0].userType) === -1) {\n            activitiesUsers[0].userType.push(\"Assigned\");\n            self.usersMap[\"-\" + ownerUserId + \"-\"].userType.push(\"Assigned\");\n          }\n        } else\n        {\n          self.usersMap[\"-\" + userId + \"-\"] = {\n            picture: \"\",\n            id: userId,\n            guid: userGuid,\n            name: \"\",\n            userType: [\"Assigned\"] };\n\n          if (activitiesUsers.filter(function (user) {return user.idUser == userId;}).length === 0) {\n            activitiesUsers.push({ \"idUser\": userId, \"guidUser\": userGuid, \"userType\": [\"Assigned\"] });\n            cvsGuidUsers.push(userId);\n          }\n        }\n      }\n    });\n    self.activitiesUsers = activitiesUsers;\n    self.params = args;\n    //Update widget\n    var contentTemplate = self.getTemplate(\"plan-users-main\");\n    contentTemplate.\n    render({\n      assignee: self.justAssignees(activitiesUsers),\n      label: bizagi.localization.getResource(\"workportal-project-plan-assignee\") }).\n\n    appendTo($content);\n    self.initilizeTooltip();\n    self.addEventHandlersModal();\n    $.when(self.callGetDataUsers(cvsGuidUsers)).then(function () {\n      self.showCreatorInformation(ownerUserId);\n      self.renderUserProfilesAndImages();\n    });\n  },\n\n  /**\r\n      * return standar userAdapter information with only assigned users when the plan has started\r\n      * @param {Array} allUsers \r\n      */\n  justAssignees: function justAssignees(allUsers) {\n    var self = this;\n    var usersAssignee = [];\n    if ([\"CLOSED\", \"PENDING\"].indexOf(self.params.plan.currentState) == -1) {\n      allUsers.map(function (user) {\n        var isOwner = user.userType.indexOf(\"owner\") !== -1;\n        var isAssignee = user.userType.indexOf(\"Assigned\") !== -1;\n        usersAssignee.push(usersAdapter.createJsonUserInfo(user.idUser, \"\", \"\", \"\", \"\", \"\", isAssignee, isOwner, [], []));\n      });\n    }\n    return usersAdapter.justAssignees(usersAssignee);\n  },\n\n  /**\r\n      * show the information of the creator case\r\n      * @param {string} ownerUserId guid user creator\r\n      */\n  showCreatorInformation: function showCreatorInformation(ownerUserId) {\n    var self = this;\n    var userCreator = self.usersInformation.find(function (user) {\n      return user.id == ownerUserId;\n    });\n    var userInfo = usersAdapter.createJsonUserInfo(\n    userCreator.id,\n    userCreator.name,\n    userCreator.username,\n    userCreator.picture ? \"data:image/png;base64,\" + userCreator.picture : undefined,\n    userCreator.email,\n    userCreator.name.getInitials(),\n    false,\n    true,\n    [],\n    []);\n\n    self.content.find(\".ui-bizagi-wp-project-plan-users .ui-bizagi-wp-project-users-creator-info\").userinformation(self, { user: userInfo });\n  },\n\n  /**\r\n      * UI\r\n      */\n  renderUserProfilesAndImages: function renderUserProfilesAndImages() {\n    var self = this;\n    $.each(self.usersMap, function (i, obj) {\n      var $li = $(\".ui-bizagi-wp-userlist li[data-iduser=\" + obj.id + \"]\", self.content);\n\n      if (obj.picture !== \"\") {\n        $li.find(\"img\").prop(\"src\", obj.picture);\n        $(\".bz-wp-avatar-label\", $li).hide();\n      } else\n      {\n        if (obj.name !== undefined) {\n          $(\".bz-wp-avatar-img\", $li).hide();\n          $(\".bz-wp-avatar-label\", $li).html(obj.name.getInitials());\n        } else\n        {\n          console.log(\"obj.name is undefined\");\n        }\n\n      }\n    });\n  },\n\n  /*\r\n      *  Get data for users\r\n      */\n  callGetDataUsers: function callGetDataUsers(csvguidUsers) {\n    var self = this,\n    params = {},\n    defer = $.Deferred();\n    params = {\n      usersGuids: csvguidUsers.join(),\n      width: 50,\n      height: 50 };\n\n    $.when(self.dataService.getUsersData(params)).always(function (response) {\n      self.usersInformation = response;\n      for (var i = 0, length = response.length; i < length; i += 1) {\n        if (typeof response[i].name === \"undefined\") {\n          bizagi.log(response[i] + \" Id Not Found\", response, \"error\");\n        } else {\n          if (self.usersMap[\"-\" + response[i].id + \"-\"]) {\n            self.usersMap[\"-\" + response[i].id + \"-\"].picture += response[i].picture ? \"data:image/png;base64,\" + response[i].picture : \"\";\n            self.usersMap[\"-\" + response[i].id + \"-\"].name = response[i].name || \"\";\n          } else\n          {\n            console.log(\"self.usersMap['-' + response[i].id + '-'] is undefined\");\n          }\n\n        }\n      }\n      self.getUsersAssignees();\n      defer.resolve();\n    });\n    return defer.promise();\n  },\n\n  /*\r\n     * validate if the activity is running\r\n     */\n  activityRunning: function activityRunning(activity) {\n    return activity.startDate !== null && activity.finishDate === null;\n  },\n\n  getUsersAssignees: function getUsersAssignees() {\n    var self = this;\n    for (var i = 0; i < self.usersInformation.length; i++) {\n      var res_user = self.getUserAssignee(self.params.plan.activities, self.usersInformation[i]);\n      if (res_user !== false) {\n        self.usersAssignees.push(res_user);\n      }\n    }\n\n  },\n\n  /**\r\n      * review if the user is assigned to some active activities and return this user, else return false\r\n      * @param {Array} activities all activities of this plan\r\n      * @param {User} user to review\r\n      */\n  getUserAssignee: function getUserAssignee(activities, user) {\n    var self = this;\n    var tasks = activities.filter(function (activity) {\n      return activity.userAssigned === user.id && self.activityRunning(activity);\n    }).map(function (a) {\n      return { \"name\": a.name };\n    });\n    if (tasks.length == 0) return false;\n    user.tasks = tasks;\n    var types = self.activitiesUsers.find(function (actUser) {\n      return actUser.idUser == user.id;\n    });\n    user.types = types === undefined ? [] : types.userType;\n\n    var userAssignees = usersAdapter.createJsonUserInfo(\n    user.id,\n    user.name,\n    user.username,\n    user.picture ? \"data:image/png;base64,\" + user.picture : undefined,\n    user.email,\n    user.name.getInitials(),\n    user.types.indexOf(\"Assigned\") > -1,\n    user.types.indexOf(\"owner\") > -1,\n    user.tasks,\n    []);\n\n    return userAssignees;\n  },\n\n  /*\r\n      *  Tooltips\r\n      */\n  initilizeTooltip: function initilizeTooltip() {\n    var self = this;\n\n    $(\".ui-bizagi-wp-userlist > li\", self.content).not(\".moreUsers\").on('mouseenter', '', function (ev) {\n      var $target = $(ev.target);\n      var id_userSelected = $target.closest(\"[data-iduser]\").attr('data-iduser');\n      var user = self.usersInformation.find(function (user) {\n        return user.id == id_userSelected;\n      });\n      var activities = [];\n\n      if (user.tasks)\n      user.tasks.map(function (task) {\n        activities.push(task.name);\n      });\n\n      var types = self.activitiesUsers.find(function (actUser) {\n        return actUser.idUser == id_userSelected;\n      });\n      user.types = types.userType;\n\n      user.owner = user.types.find(function (type) {\n        return type == \"owner\";\n      });\n      user.isAssignee = user.types.find(function (type) {\n        return type == \"Assigned\";\n      });\n\n      var userParam = usersAdapter.createJsonUserInfo(user.id, user.name, user.username, user.picture ? \"data:image/png;base64,\" + user.picture : undefined, user.email, user.name.getInitials(), user.isAssignee, user.owner, activities, []);\n      $target.parent().usertooltip(self, { target: $target, user: userParam });\n    });\n  },\n  addEventHandlersModal: function addEventHandlersModal() {\n    var self = this;\n    $(\".moreUsers\").click(function (event) {\n      event.preventDefault();\n      event.stopPropagation();\n      var usersAssignees = self.usersAssignees || [];\n      self.globalHandlersService.publish(\"showDialogWidget\", {\n        widgetName: bizagi.workportal.widgets.widget.BIZAGI_WORKPORTAL_WIDGET_USERS_MODAL,\n        closeVisible: true,\n        data: usersAssignees,\n        maximize: true,\n        modalParameters: {\n          title: bizagi.localization.getResource(\"workportal-project-users-title\") + \" (\" + usersAssignees.length + \")\",\n          width: 790,\n          height: 526,\n          refreshInbox: false } });\n\n\n    });\n  } });\n\n\n\n\nbizagi.injector.register(\"bizagi.workportal.widgets.project.plan.users\", [\"workportalFacade\", \"dataService\", bizagi.workportal.widgets.project.plan.users], true);"]}