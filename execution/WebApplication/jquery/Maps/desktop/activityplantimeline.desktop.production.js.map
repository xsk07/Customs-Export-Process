{"version":3,"sources":["jquery/workportal/desktop/widget/project.plan.activity.users/bizagi.workportal.desktop.widgets.project.plan.activity.users.js"],"names":["bizagi","workportal","widgets","widget","extend","init","workportalFacade","dataService","params","this","usersMap","plugins","usersInformation","globalHandlersService","injector","get","usersAssignees","_super","loadTemplates","plan-users-main","getTemplate","concat","renderContent","content","$","postRender","sub","proxy","onNotifyLoadInfoActivityExecution","activityRunning","activity","startDate","finishDate","event","self","cvsGuidUsers","activitiesUsers","$content","getContent","empty","args","ownerUserId","plan","idUserCreator","ownerUserGuid","push","idUser","guidUser","userType","picture","id","guid","name","each","activities","index","userId","userAssigned","userGuid","userAssignedGuid","inArray","filter","user","length","render","assignee","justAssignees","label","localization","getResource","appendTo","addEventHandlersModal","when","callGetDataUsers","then","showCreatorInformation","renderUserProfilesAndImages","allUsers","usersAssignee","map","isOwner","indexOf","isAssignee","usersAdapter","createJsonUserInfo","userCreator","userInfo","username","undefined","email","getInitials","find","userinformation","i","obj","$li","prop","hide","html","console","log","not","on","ev","userSelected","$target","target","data","usersActivities","userParam","getIsAssignee","getIsOwner","parent","usertooltip","defer","Deferred","usersGuids","join","width","height","getUsersData","always","response","getUsersAssignees","resolve","promise","getUserAssignee","tasks","types","actUser","click","preventDefault","stopPropagation","publish","widgetName","BIZAGI_WORKPORTAL_WIDGET_USERS_MODAL","closeVisible","maximize","modalParameters","title","refreshInbox","register","project","users"],"mappings":"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","sourcesContent":["/*\r\n *   Name: Bizagi Workportal Desktop Project Plan Activity Users Controller\r\n *   Author: Elkin Fernando Siabato Cruz\r\n */\n\nbizagi.workportal.widgets.widget.extend(\"bizagi.workportal.widgets.project.plan.activity.users\", {}, {\n  /*\r\n                                                                                                        *   Constructor\r\n                                                                                                        */\n  init: function init(workportalFacade, dataService, params) {\n    var self = this;\n\n    self.usersMap = {};\n    self.plugins = {};\n    self.usersInformation = [];\n    self.globalHandlersService = bizagi.injector.get('globalHandlersService');\n    self.usersAssignees = [];\n\n    // Call base\n    self._super(workportalFacade, dataService, params);\n\n    //Load templates\n    //The load template the users plan because they are the same\n    self.loadTemplates({\n      \"plan-users-main\": bizagi.getTemplate(\"bizagi.workportal.desktop.project.plan.users\").concat(\"#project-plan-users\") });\n\n  },\n\n  /*\r\n      * Renders the template defined in the widget\r\n      */\n  renderContent: function renderContent() {\n    var self = this;\n    self.content = $(\"<div></div>\");\n    return self.content;\n  },\n\n  /*\r\n      * links events with handlers\r\n      */\n  postRender: function postRender() {\n    var self = this;\n    self.sub(\"LOAD_INFO_ACTIVITY_SUMMARY\", $.proxy(self.onNotifyLoadInfoActivityExecution, self));\n  },\n\n  /*\r\n      * validate if the activity is running\r\n      */\n  activityRunning: function activityRunning(activity) {\n    return activity.startDate !== null && activity.finishDate === null;\n  },\n\n  onNotifyLoadInfoActivityExecution: function onNotifyLoadInfoActivityExecution(event, params) {\n    var self = this,\n    cvsGuidUsers = [],\n    activitiesUsers = [],\n    $content = self.getContent().empty();\n    self.params = $.extend(self.params, params.args);\n\n    var ownerUserId = self.params.plan.idUserCreator;\n    var ownerUserGuid = self.params.plan.idUserCreator;\n\n    activitiesUsers.push({ \"idUser\": ownerUserId, \"guidUser\": ownerUserGuid, \"userType\": [\"owner\"] });\n    self.usersMap[\"-\" + ownerUserId + \"-\"] = {\n      picture: \"\",\n      id: ownerUserId,\n      guid: ownerUserGuid,\n      name: \"\",\n      userType: [\"owner\"] };\n\n    cvsGuidUsers.push(ownerUserGuid);\n    $.each(self.params.plan.activities, function (index, activity) {\n      if (self.activityRunning(activity)) {\n        var userId = activity.userAssigned;\n        var userGuid = activity.userAssignedGuid;\n        if (userId === ownerUserId) {\n          if ($.inArray(\"Assigned\", activitiesUsers[0].userType) === -1) {\n            activitiesUsers[0].userType.push(\"Assigned\");\n            self.usersMap[\"-\" + ownerUserId + \"-\"].userType.push(\"Assigned\");\n          }\n        } else\n        {\n          self.usersMap[\"-\" + userId + \"-\"] = {\n            picture: \"\",\n            id: userId,\n            name: \"\",\n            userType: [\"Assigned\"] };\n\n          if (activitiesUsers.filter(function (user) {return user.idUser == userId;}).length === 0) {\n            var id = userGuid ? userGuid : userId;\n            activitiesUsers.push({ \"idUser\": id, \"userGuid\": id, \"userType\": [\"Assigned\"] });\n            cvsGuidUsers.push(id);\n          }\n        }\n      }\n    });\n    self.activitiesUsers = activitiesUsers;\n\n    //Update widget\n    var contentTemplate = self.getTemplate(\"plan-users-main\");\n    contentTemplate.\n    render({\n      assignee: self.justAssignees(activitiesUsers),\n      label: bizagi.localization.getResource(\"workportal-project-plan-assignee\") }).\n\n    appendTo($content);\n    self.addEventHandlersModal();\n    $.when(self.callGetDataUsers(cvsGuidUsers)).then(function () {\n      self.showCreatorInformation(ownerUserId);\n      self.renderUserProfilesAndImages();\n    });\n  },\n\n  /**\r\n      * return standar userAdapter information with only assigned users\r\n      * @param {Array} allUsers \r\n      */\n  justAssignees: function justAssignees(allUsers) {\n    var usersAssignee = [];\n    allUsers.map(function (user) {\n      var isOwner = user.userType.indexOf(\"owner\") !== -1;\n      var isAssignee = user.userType.indexOf(\"Assigned\") !== -1;\n      usersAssignee.push(usersAdapter.createJsonUserInfo(user.idUser, \"\", \"\", \"\", \"\", \"\", isAssignee, isOwner, [], []));\n    });\n    return usersAdapter.justAssignees(usersAssignee);\n  },\n\n  /**\r\n      * show the information of the creator case\r\n      * @param {string} ownerUserId guid user creator\r\n      */\n  showCreatorInformation: function showCreatorInformation(ownerUserId) {\n    var self = this;\n    var userCreator = self.usersMap[\"-\" + ownerUserId + \"-\"];\n    var userInfo = usersAdapter.createJsonUserInfo(\n    userCreator.id,\n    userCreator.name,\n    userCreator.username,\n    userCreator.picture ? userCreator.picture : undefined,\n    userCreator.email,\n    userCreator.name.getInitials(),\n    false,\n    true,\n    [],\n    []);\n\n    self.content.find(\".ui-bizagi-wp-project-plan-users .ui-bizagi-wp-project-users-creator-info\").userinformation(self, { user: userInfo });\n  },\n\n  /**\r\n      * UI\r\n      */\n\n  renderUserProfilesAndImages: function renderUserProfilesAndImages() {\n    var self = this;\n    $.each(self.usersMap, function (i, obj) {\n      var $li = $(\".ui-bizagi-wp-userlist li[data-iduser=\" + obj.id + \"]\", self.content);\n      if (obj.picture !== \"\") {\n        $li.find(\"img\").prop(\"src\", obj.picture);\n      } else\n      {\n        $li.find(\"img\").hide();\n        if (obj.name !== undefined) {\n          $li.find(\"span\").html(obj.name.getInitials());\n        } else\n        {\n          console.log(\"obj.name is undefined\");\n        }\n\n      }\n    });\n    $(\".ui-bizagi-wp-userlist li\", self.content).not(\".moreUsers\").on('mouseenter', function (ev) {\n      var $target = $(ev.target);\n      var userId = $(this).data(\"iduser\");\n      var userSelected;\n      $.each(self.usersMap, function (i, obj) {\n        if (obj.id === userId)\n        userSelected = obj;\n      });\n      var usersActivities = self.usersAssignees.find(function (assignee) {\n        return assignee.userAssigned === userSelected.id;\n      });\n      var activities = [];\n      if (usersActivities)\n      usersActivities.activities.map(function (activity) {\n        activities.push(activity.name);\n      });\n      var userParam = usersAdapter.createJsonUserInfo(userSelected.id, userSelected.name, userSelected.username, userSelected.picture, userSelected.email, userSelected.name.getInitials(), self.getIsAssignee(userSelected), self.getIsOwner(userSelected), activities, undefined);\n\n      $target.parent().usertooltip(self, { target: $target, user: userParam });\n    });\n  },\n\n  getIsAssignee: function getIsAssignee(userSelected) {\n    if (userSelected.userType.indexOf(\"Assigned\") > -1) {\n      return true;\n    }\n    return false;\n  },\n\n  getIsOwner: function getIsOwner(userSelected) {\n    if (userSelected.userType.indexOf(\"owner\") > -1) {\n      return true;\n    }\n    return false;\n  },\n  /*\r\n      *  Get data for users\r\n      */\n  callGetDataUsers: function callGetDataUsers(cvsGuidUsers) {\n    var self = this,\n    params = {},\n    defer = $.Deferred();\n    params = {\n      usersGuids: cvsGuidUsers.join(),\n      width: 50,\n      height: 50 };\n\n    $.when(self.dataService.getUsersData(params)).always(function (response) {\n      self.usersInformation = response;\n      for (var i = 0, length = response.length; i < length; i += 1) {\n        if (typeof response[i].name === \"undefined\") {\n          bizagi.log(response[i] + \" Id Not Found\", response, \"error\");\n        } else {\n          if (self.usersMap[\"-\" + response[i].id + \"-\"]) {\n            self.usersMap[\"-\" + response[i].id + \"-\"].picture += response[i].picture ? \"data:image/png;base64,\" + response[i].picture : \"\";\n            self.usersMap[\"-\" + response[i].id + \"-\"].name = response[i].name || \"\";\n            self.usersMap[\"-\" + response[i].id + \"-\"].username = response[i].username || \"\";\n            self.usersMap[\"-\" + response[i].id + \"-\"].email = response[i].email || \"\";\n          } else\n          {\n            console.log(\"The object is undefined\");\n          }\n        }\n      }\n      self.getUsersAssignees();\n      defer.resolve();\n    });\n    return defer.promise();\n  },\n\n  getUsersAssignees: function getUsersAssignees() {\n    var self = this;\n    for (var i = 0; i < self.usersInformation.length; i++) {\n      self.usersAssignees.push(self.getUserAssignee(self.usersInformation[i]));\n    }\n\n  },\n\n  getUserAssignee: function getUserAssignee(user) {\n    var self = this;\n    var tasks = [];\n    $.each(self.params.plan.activities, function (index, activity) {\n      var userId = activity.userAssigned;\n      if (userId === user.id && self.activityRunning(activity)) {\n        tasks.push({ \"name\": activity.name });\n      }\n    });\n    user.tasks = tasks;\n    var types = self.activitiesUsers.find(function (actUser) {\n      return actUser.idUser == user.id;\n    });\n    user.userType = types.userType;\n\n    var userAssignees = usersAdapter.createJsonUserInfo(\n    user.id,\n    user.name,\n    user.username,\n    user.picture ? \"data:image/png;base64,\" + user.picture : undefined,\n    user.email,\n    user.name.getInitials(),\n    self.getIsAssignee(user),\n    self.getIsOwner(user),\n    user.tasks,\n    []);\n\n    return userAssignees;\n  },\n\n  addEventHandlersModal: function addEventHandlersModal() {\n    var self = this;\n    $(\".moreUsers\").click(function (event) {\n      event.preventDefault();\n      event.stopPropagation();\n      var usersAssignees = self.usersAssignees || [];\n      self.globalHandlersService.publish(\"showDialogWidget\", {\n        widgetName: bizagi.workportal.widgets.widget.BIZAGI_WORKPORTAL_WIDGET_USERS_MODAL,\n        closeVisible: true,\n        data: usersAssignees,\n        maximize: true,\n        modalParameters: {\n          title: bizagi.localization.getResource(\"workportal-project-users-title\") + \" (\" + usersAssignees.length + \")\",\n          width: 790,\n          height: 526,\n          refreshInbox: false } });\n\n\n    });\n  } });\n\n\n\nbizagi.injector.register(\"bizagi.workportal.widgets.project.plan.activity.users\", [\"workportalFacade\", \"dataService\", bizagi.workportal.widgets.project.plan.activity.users], true);"]}