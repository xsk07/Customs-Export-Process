{"version":3,"sources":["jquery/workportal/desktop/widget/project.dashboard.menu/bizagi.workportal.desktop.widgets.project.dashboard.menu.js","jquery/workportal/desktop/widget/project.dashboard.menu.plan/bizagi.workportal.desktop.widgets.project.dashboard.menu.plan.js","jquery/workportal/desktop/widget/project.content.dashboard/bizagi.workportal.desktop.widgets.project.content.dashboard.js","jquery/workportal/desktop/widget/project.plan.activities/bizagi.workportal.desktop.project.plan.activities.js","jquery/workportal/desktop/widget/project.plan.sidebar/bizagi.workportal.desktop.widgets.project.plan.sidebar.js","jquery/workportal/desktop/widget/project.plan.action/bizagi.workportal.desktop.widgets.project.plan.action.js","jquery/workportal/desktop/widget/project.plan.state/bizagi.workportal.desktop.widgets.project.plan.state.js","jquery/workportal/desktop/widget/project.plan.progress/bizagi.workportal.desktop.widgets.project.plan.progress.js","jquery/workportal/desktop/widget/project.plan.time/bizagi.workportal.desktop.widgets.project.plan.time.js","jquery/workportal/desktop/widget/project.plan.parent/bizagi.workportal.desktop.widgets.project.plan.parent.js","jquery/workportal/desktop/widget/project.plan.users/bizagi.workportal.desktop.widgets.project.plan.users.js"],"names":["bizagi","workportal","widgets","widget","extend","onDiscussionsMenuStatusChange","ev","params","this","updateDiscussionsIcons","hasDiscussionsOrComment","sub","$","proxy","toggle","clean","unsub","injector","register","project","dashboard","menu","init","workportalFacade","dataService","projectDashboard","_super","loadTemplates","project-dashboard-menu","getTemplate","concat","renderContent","content","postRender","self","contextsLeftSidebarCaseDashboard","forEach","context","updateView","event","args","$content","getContent","empty","template","menuPlanDashboard","menuDashboard","planState","getPlanState","plan","planChild","argsTemplate","showCommentsOptionMenu","showFilesOptionMenu","showTimeLineOptionMenu","isVisibleShowTimeLine","render","appendTo","showContextByMenuDashboard","toUpperCase","addClass","siblings","removeClass","handlerEvents","currentState","extraValidationShowTimeLine","loadContentById","preventDefault","$item","target","closest","data","backParentPlan","hasClass","pub","type","subMenuHandler","$comments","$files","$timeline","on","getLevelNavigator","currentLevelNavigator","parseInt","getParamsByBackFromPlan","typeContext","paramsNotify","off","project-content-dashboard","setTimeout","window","trigger","base","notifier","serviceOrderActivitiesByTransitions","PENDING_PLAN","EXECUTING_PLAN","CONTEXT_PLANACTIVITIES","CONTEXT_PLANOVERVIEW","CONTEXT_PLANCREATE","plugins","fromIndexEnabledSortingActivities","idActivityEditing","_statePlan","userPictures","refresh","refreshAllWidgets","plan-activities-main","plan-activities-item","onNotifySummaryProgressPlan","onNotifyUpdatePlan","renderWidgetByStatePlan","refreshActivityRow","collapseSidebars","state","isEnableEventsOnActivitiesByCurrentContext","enableEventsOnActivitiesByCurrentContext","auxCountActivitiesFinished","activities","filter","activity","finishDate","length","statePlan","statePendingPlan","stateExecutingPlan","contextPlanActivities","showFormAddActivityByNotFinishedAllActivities","currentUserGuid","currentUser","userGuid","sortablelist","initializeSortableList","addEventHandlers","setContentWrapper","onClickEditActivity","onClickDeleteActivity","onClickWorkonItActivity","onClickChangeParallel","onExecutePlan","onClosePlan","renderActivities","updateTransitions","getCopyObjectPlan","id","name","description","dueDate","waitForCompletion","parentWorkItem","creationDate","startDate","idUserCreator","contextualized","currentContext","text","kendoSortable","hint","element","$clone","clone","width","append","change","onChangePosition","disabled","end","e","newIndex","oldIndex","movePositionActivity","$liActivityGoDown","eq","canChangeToParallelActivity","parallel","defer","Deferred","idPlan","transitions","getActualTransitions","when","changeTransitions","always","response","responseText","xhr","status","showErrorMessage","localization","getResource","orderActivitiesByTransitions","resolve","promise","getActivitiesByTransitions","auxOrderTransitions","getActualTransitionsByActivities","transition","undefined","onCreateActivity","idUserAssigned","val","userAssigned","idUser","replace","progress","duration","allowEdition","estimatedFinishDate","parent","util","isEmpty","guidActivity","paramsDetailActivity","idActivity","getActivity","done","createPlanActivity","reset","responseActivity","activityNew","items","numTotalItems","numResolvedItems","push","$activityList","activityParallel","$wrapperArrow","currentTarget","$liActivitySelected","idActivitySelected","prop","changeActivityProperties","result","idLastParallelActivity","getLastParallelActivityIsRunningOrClose","prev","$target","activityToShow","isEditableFormActivity","workItemState","idActivityToShow","showFormToEditActivity","activityGuid","activityPropertiesToUpdate","iActivity","lengthActivities","focus","$list","tmpl","$element","show","hide","arrayActivities","currentUserId","classEnabledActionActivities","isRunning","runningActivity","map","decodeHtmlEntities","loadAndShowImagesUsers","listActivities","csvguidUsers","a","seen","out","len","j","i","item","removeDuplicateItemsFromArray","join","getDataUsers","then","renderUserProfilesAndImages","iUser","html","getInitials","picture","attr","usersGuids","height","getUsersData","array","splice","arrayUnique","onCancelActivityForm","closeSidebar","$contentWrapper","stopPropagation","css","showConfirmationBox","deleteActivityPlan","next","find","publish","action","actions","BIZAGI_WORKPORTAL_ACTION_ROUTING","idCase","idWorkItem","putExecutePlan","getDateServer","sendNotification","_notifyPlanActivities","callUpdatePlan","radNumber","getCaseByPlan","printf","activitiesAreCompleted","closePlan","callClosePlan","fail","updatePlan","showSucessMessage","lastIndexParallelInExecution","parallelActivitiesInRunning","_getJElementSelectedActivity","_jElementFromId","_jElementSelected","_","$selectedActivity","displayName","assignee","activityEdited","services","preferences","getPreference","serviceloadDataPlan","supportNav","project-plan-sidebar","areTemplatedLoaded","loadData","subscribe","loadedWithDataActivities","loadedWithDataFirstParent","unsubscribe","sidebar","planTemplateCreate","planPopupEdit","CLOSED_PLAN","CONTEXT_ACTIVITYPLAN","CONTEXT_ACTIVITYPLANOVERVIEW","CONTEXT_ACTIVITYPLANCREATE","showActionsPlan","plan-action-main","stateClosedPlan","currentStatePlan","$contentWidget","initilizeActionMenu","onNotifyLoadInfoSummaryPlan","clearAlertsOnFocus","setNamePlan","onNotifyExpandedRightSidebar","setStatePlan","namePlan","onSelectMenu","ui","onClickMenuOpenEdition","onClickMenuDeletePlan","onClickMenuSaveAsTemplate","planSelected","showPopup","showPopupAddTemplatePlan","callDeletePlan","onSubmitFormPlan","select","focusout","deletePlan","plan-state-main","renderWidget","plan-progress-main","valuePercentBarComplete","calculateProgress","colorBar","$barRemainingDate","widthNumberDays","toString","completedActivities","totalActivities","percentProgress","Math","round","datePickerRegional","plan-time-main","updateWidget","planDatesToStamp","Date","getTime","closedDate","getClosedDatePlan","getIntervalOnMinutes","relativeTime","dateFormatter","getRelativeTime","now","minutesToShowTime","messageUnitTimeCalculated","keywordResourceDescriptionDifference","getKeywordDifferenceDates","messageDescripionDifference","valueOfTimeCalculated","auxToDate","getSecondDate","auxPercentBar","getWidthBar","auxColorBar","getColorBarByPercent","fromDate","getFormattedDate","getFirstDate","toDate","percentBar","getLastActivity","JSON","parse","stringify","sort","activityA","activityB","getDifferenceBetweenDates","firstDate","secondDate","callGetEffectiveDuration","difference","minutes","minutesNowToDueDate","minutesCreateToNow","minutesDueDateToCreate","minutesCreateToDueDate","minutesStartToNow","minutesDueDateToNow","minutesStartToDueDate","milliseconds","intervalMinutes","differenceStartDateToCurrentDate","totalInterval","valuePercentInterval","ceil","differenceStartDateToClosedDate","percent","d","getEffectiveDuration","dateObj","monthNames","getMonth","formatDate","time","plan-parent-main","getPlanParent","planParent","idParent","nameParent","idWorkflow","idTask","processName","process","planName","goToParentCase","msg","onClickGoToParentCase","routingExecute","usersMap","usersInformation","globalHandlersService","get","usersAssignees","plan-users-main","auxNoRepeatTypesUser","hashTypesUser","assigned","owner","cvsGuidUsers","activitiesUsers","ownerUserGuid","ownerUserId","userType","guid","each","index","userId","userAssignedGuid","inArray","user","guidUser","justAssignees","label","initilizeTooltip","addEventHandlersModal","callGetDataUsers","showCreatorInformation","allUsers","usersAssignee","indexOf","isOwner","isAssignee","usersAdapter","createJsonUserInfo","userCreator","userInfo","username","email","userinformation","obj","$li","console","log","getUsersAssignees","activityRunning","res_user","getUserAssignee","tasks","types","actUser","not","id_userSelected","task","userParam","usertooltip","click","widgetName","BIZAGI_WORKPORTAL_WIDGET_USERS_MODAL","closeVisible","maximize","modalParameters","title","refreshInbox","users"],"mappings":"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","sourcesContent":["/**\r\n * Name: BizAgi Desktop Widget Dashboard menu (left sidebar) * \r\n * @author Valeria Vanegas\r\n */\n\n\nbizagi.workportal.widgets.widget.extend(\"bizagi.workportal.widgets.project.dashboard.menu\", {}, {\n\n  /**\r\n                                                                                                   * Handler when discussions menu status change\r\n                                                                                                   * @param {*} ev \r\n                                                                                                   * @param {*} params \r\n                                                                                                   */\n  onDiscussionsMenuStatusChange: function onDiscussionsMenuStatusChange(ev, params) {\n    var self = this;\n    self.updateDiscussionsIcons(params.hasDiscussionsOrComment);\n  },\n\n  /**\r\n      * Update discussions icon on sidebar menu\r\n      * The icon is different when there is other discussion or there are comments\r\n      * @param {*} hasDiscussionsOrComment \r\n      */\n  updateDiscussionsIcons: function updateDiscussionsIcons(hasDiscussionsOrComment) {\n    var self = this;\n\n    self.sub(\"UPDATE_DISCUSSIONS_MENU_STATUS\", $.proxy(self.onDiscussionsMenuStatusChange, self));\n\n    $(\".bz-icon-discussion-comment\").toggle(hasDiscussionsOrComment);\n    $(\".bz-icon-discussion-no-comment\").toggle(!hasDiscussionsOrComment);\n    self.params.hasDiscussionsOrComment = hasDiscussionsOrComment;\n  },\n\n  /**\r\n      * Detach events\r\n      */\n  clean: function clean() {\n    var self = this;\n    self.unsub(\"UPDATE_DISCUSSIONS_MENU_STATUS\", $.proxy(self.onDiscussionsMenuStatusChange, self));\n  } });\n\n\nbizagi.injector.register(\"bizagi.workportal.widgets.project.dashboard.menu\", [\"workportalFacade\", \"dataService\", bizagi.workportal.widgets.project.dashboard.menu], true);","/*\r\n *   Name: Bizagi Workportal project Dashboard Menu Plan\r\n *   Author: Elkin Fernando Siabato Cruz\r\n */\n\nbizagi.workportal.widgets.project.dashboard.menu.extend(\"bizagi.workportal.widgets.project.dashboard.menu.plan\", {}, {\n\n  /*\r\n                                                                                                                        *   Constructor\r\n                                                                                                                        */\n  init: function init(workportalFacade, dataService, projectDashboard, params) {\n    var self = this;\n    self.params = params || {};\n    self.projectDashboard = projectDashboard;\n\n    // Call base\n    self._super(workportalFacade, dataService, params);\n\n    //Load templates\n    self.loadTemplates({\n      \"project-dashboard-menu\": bizagi.getTemplate(\"bizagi.workportal.desktop.widgets.project.dashboard.menu.plan\").concat(\"#project-dashboard-menu\") });\n\n  },\n\n  /**\r\n      * Renders the template defined in the widget\r\n      */\n  renderContent: function renderContent() {\n    var self = this;\n    self.content = $(\"<div></div>\");\n    return self.content;\n\n  },\n\n  /**\r\n      * links events with handlers\r\n      */\n  postRender: function postRender() {\n    var self = this;\n    self._super();\n    //Handlers\n    if (self.params && self.params.contextsLeftSidebarCaseDashboard) {\n      self.params.contextsLeftSidebarCaseDashboard.forEach(function (context) {\n        self.sub(context, $.proxy(self.updateView, self));\n      });\n    }\n  },\n\n\n  updateView: function updateView(event, params) {\n    var self = this;\n    self.params = $.extend(self.params, params.args);\n    self.clean();\n    var $content = self.getContent().empty();\n\n    var template = self.getTemplate(\"project-dashboard-menu\");\n    self.params.menuPlanDashboard = self.params.menuPlanDashboard || {};\n    $.extend(self.params.menuPlanDashboard, self.params.menuDashboard);\n\n    self.planState = self.getPlanState(self.params.plan, self.params.planChild);\n    var argsTemplate = {\n      planState: self.planState,\n      showCommentsOptionMenu: self.params.menuPlanDashboard.showCommentsOptionMenu,\n      showFilesOptionMenu: self.params.menuPlanDashboard.showFilesOptionMenu,\n      showTimeLineOptionMenu: self.params.menuPlanDashboard.showTimeLineOptionMenu && self.isVisibleShowTimeLine(self.planState) };\n\n    template.render(argsTemplate).appendTo($content);\n\n    $(\"li[data-context='\" + self.params.showContextByMenuDashboard.toUpperCase() + \"']\", self.content).addClass(\"active\").siblings().removeClass(\"active\");\n\n    self.updateDiscussionsIcons(self.params.hasDiscussionsOrComment);\n    self.handlerEvents();\n  },\n\n  /**\r\n      * Return planState by plan or planChild\r\n      * @param plan\r\n      * @param planChild\r\n      * @returns {*}\r\n      */\n  getPlanState: function getPlanState(plan, planChild) {\n    var currentState;\n    if (planChild && planChild.currentState) {\n      currentState = planChild.currentState;\n    } else\n    if (plan && plan.currentState) {\n      currentState = plan.currentState;\n    }\n    return currentState;\n  },\n\n  /**\r\n      * Behavior visible timeline option\r\n      */\n  isVisibleShowTimeLine: function isVisibleShowTimeLine(planState) {\n    var self = this;\n    var extraValidationShowTimeLine = true;\n    if (planState === \"PENDING\") {\n      extraValidationShowTimeLine = false;\n    }\n    return extraValidationShowTimeLine;\n  },\n\n  /*\r\n      *   Load Content By Id\r\n      */\n  loadContentById: function loadContentById(event) {\n    var self = this;\n    event.preventDefault();\n    var $item = $(event.target).closest(\"li\");\n\n    if ($item.data(\"context\") === \"PLANBACK\") {\n      self.backParentPlan();\n    } else\n    {\n      if (!$item.hasClass(\"active\")) {\n        var showContextByMenuDashboard = $item.data(\"context\");\n        if (showContextByMenuDashboard) {\n\n          self.pub(\"notify\", {\n            type: showContextByMenuDashboard.toUpperCase(),\n            args: $.extend(self.params, { showContextByMenuDashboard: showContextByMenuDashboard }) });\n\n          $(\"li[data-context='\" + self.params.showContextByMenuDashboard.toUpperCase() + \"']\", self.content).addClass(\"active\").siblings().removeClass(\"active\");\n        }\n      }\n    }\n  },\n\n  subMenuHandler: function subMenuHandler() {\n    var self = this;\n    var content = self.getContent();\n    var $comments = $(\"[data-context='PLANCOMMENTS']\", content);\n    var $files = $(\"[data-context='PLANFILES']\", content);\n    var $timeline = $(\"[data-context='PLANTIMELINE']\", content);\n\n    $(\".ui-bizagi-wp-project-tab-submenu a\", content).on(\"click\", function () {\n      $comments.toggle();\n      $files.toggle();\n      if (self.isVisibleShowTimeLine(self.planState)) {\n        $timeline.toggle();\n      }\n    });\n  },\n\n  backParentPlan: function backParentPlan() {\n    var self = this;\n    //when a plan created from an activity is deleted, not created from a case\n    var getLevelNavigator = self.pub(\"notify\", { type: \"NAVIGATOR_GETLEVEL\" });\n    var currentLevelNavigator = parseInt(getLevelNavigator[0]);\n    var params = self.projectDashboard.getParamsByBackFromPlan(self.params, currentLevelNavigator);\n\n    self.pub(\"notify\", {\n      type: params.typeContext,\n      args: $.extend(self.params, params.paramsNotify) });\n\n\n  },\n\n  handlerEvents: function handlerEvents() {\n    var self = this;\n    var content = self.getContent();\n\n    self.subMenuHandler();\n\n    $(\".ui-bizagi-wp-project-tab-links a\", content).on(\"click\", $.proxy(self.loadContentById, self));\n  },\n\n  clean: function clean() {\n    var self = this;\n    var content = self.getContent();\n\n    self._super();\n\n    $(\".ui-bizagi-wp-project-tab-links a\", content).off();\n\n    if (self.params && self.params.contextsLeftSidebarCaseDashboard) {\n      self.params.contextsLeftSidebarCaseDashboard.forEach(function (context) {\n        self.unsub(context, $.proxy(self.updateView, self));\n      });\n    }\n  } });\n\n\nbizagi.injector.register(\"bizagi.workportal.widgets.project.dashboard.menu.plan\", [\"workportalFacade\", \"dataService\", \"bizagi.workportal.services.behaviors.projectDashboard\", bizagi.workportal.widgets.project.dashboard.menu.plan], true);","/*\r\n *   Name: Bizagi Workportal Project Content Dashboard\r\n *   Author: Elkin Fernando Siabato Cruz\r\n */\n\nbizagi.workportal.widgets.widget.extend(\"bizagi.workportal.widgets.project.content.dashboard\", {}, {\n\n  /*\r\n                                                                                                      *   Constructor\r\n                                                                                                      */\n  init: function init(workportalFacade, dataService, params) {\n    var self = this;\n\n    // Call base\n    self._super(workportalFacade, dataService, params);\n\n    //Load templates\n    self.loadTemplates({\n      \"project-content-dashboard\": bizagi.getTemplate(\"bizagi.workportal.desktop.widget.project.content.dashboard\").concat(\"#project-plan-content-dashboard\") });\n\n\n  },\n\n  /*\r\n      * Renders the template defined in the widget\r\n      */\n  renderContent: function renderContent() {\n    var self = this;\n\n    var template = self.getTemplate(\"project-content-dashboard\");\n    self.content = template.render({});\n\n    return self.content;\n  },\n  postRender: function postRender() {\n    var self = this;\n\n    setTimeout(function () {\n      $(window).trigger(\"resize\"); //Simulate resize for fix when load first time.\n    }, 1000);\n\n  } });\n\n\n\nbizagi.injector.register(\"bizagi.workportal.widgets.project.content.dashboard\", [\"workportalFacade\", \"dataService\", bizagi.workportal.widgets.project.content.dashboard], true);","/*\r\n*   Name: Bizagi Workportal Desktop Project Plan Activities\r\n*   Author: David Romero Estrada\r\n*/\n\nbizagi.workportal.widgets.project.base.extend(\"bizagi.workportal.widgets.project.plan.activities\", {}, {\n\n  /*\r\n                                                                                                         *   Constructor\r\n                                                                                                         */\n  init: function init(workportalFacade, dataService, notifier, serviceOrderActivitiesByTransitions, params) {\n    var self = this;\n\n    // Call base\n    self._super(workportalFacade, dataService, params);\n\n    self.serviceOrderActivitiesByTransitions = serviceOrderActivitiesByTransitions;\n\n    // Modes widget: designed plan or execution plan\n    self.PENDING_PLAN = \"PENDING_PLAN\";\n    self.EXECUTING_PLAN = \"EXECUTING_PLAN\";\n    self.CONTEXT_PLANACTIVITIES = \"PLANACTIVITIES\";\n    self.CONTEXT_PLANOVERVIEW = \"PLANOVERVIEW\";\n    self.CONTEXT_PLANCREATE = \"PLANCREATE\";\n\n    self.plugins = {};\n    self.fromIndexEnabledSortingActivities = 0;\n    self.idActivityEditing = \"\";\n    self.plugins.notifier = notifier;\n\n    //private fields\n    self._statePlan = self.PENDING_PLAN;\n\n    self.userPictures = [];\n    self.refresh = params.refreshAllWidgets;\n\n    // Load templates\n    self.loadTemplates({\n      \"plan-activities-main\": bizagi.getTemplate(\"bizagi.workportal.desktop.widgets.project.plan.activities\").concat(\"#project-plan-activities\"),\n      \"plan-activities-item\": bizagi.getTemplate(\"bizagi.workportal.desktop.widgets.project.plan.activities\").concat(\"#project-plan-activities-item\") });\n\n  },\n\n  renderContent: function renderContent() {\n    var self = this;\n    self.content = $(\"<div></div>\");\n    return self.content;\n  },\n\n  postRender: function postRender() {\n    var self = this;\n    self.sub(\"LOAD_INFO_SUMMARY_PROGRESS_PLAN\", $.proxy(self.onNotifySummaryProgressPlan, self));\n    self.sub(\"UPDATE_INFO_PLAN\", $.proxy(self.onNotifyUpdatePlan, self));\n    self.sub(\"UPDATE_LIST_ACTIVITIES\", $.proxy(self.renderWidgetByStatePlan, self));\n    self.sub(\"UPDATE_ACTIVITY_INFO\", $.proxy(self.refreshActivityRow, self));\n    if (!self.refresh) {\n      self.collapseSidebars();\n    }\n  },\n\n  onNotifySummaryProgressPlan: function onNotifySummaryProgressPlan(event, params) {\n    var self = this;\n    self.params = $.extend(self.params, params.args);\n\n    var state = self.params.plan.currentState;\n    self._statePlan = state + \"_PLAN\";\n\n    self.renderWidgetByStatePlan(event.type);\n\n  },\n\n  renderWidgetByStatePlan: function renderWidgetByStatePlan(event) {\n    var self = this;\n    self.idActivityEditing = \"\";\n    var $content = self.getContent().empty();\n\n    var isEnableEventsOnActivitiesByCurrentContext = self.enableEventsOnActivitiesByCurrentContext(self.params.showContextByMenuDashboard);\n\n    var auxCountActivitiesFinished = self.params.plan.activities.filter(function (activity) {\n      return activity.finishDate;\n    }).length;\n\n    var argsTemplate = {\n      showContextByMenuDashboard: self.params.showContextByMenuDashboard,\n      statePlan: self._statePlan,\n      statePendingPlan: self.PENDING_PLAN,\n      stateExecutingPlan: self.EXECUTING_PLAN,\n      contextPlanActivities: self.CONTEXT_PLANACTIVITIES,\n      plan: self.params.plan,\n      showFormAddActivityByNotFinishedAllActivities: auxCountActivitiesFinished !== self.params.plan.activities.length,\n      currentUserGuid: bizagi.currentUser.userGuid };\n\n\n    var contentTemplate = self.getTemplate(\"plan-activities-main\");\n    contentTemplate.\n    render($.extend(self.params, argsTemplate)).\n    appendTo($content);\n\n    if ((self._statePlan === self.PENDING_PLAN || self._statePlan === self.EXECUTING_PLAN) && isEnableEventsOnActivitiesByCurrentContext) {\n      self.plugins.sortablelist = self.initializeSortableList();\n      self.addEventHandlers();\n    }\n\n    self.setContentWrapper($content);\n\n    $(\".project-plan-activity-list\", $content).on(\"click\", \"li\", $.proxy(self.onClickEditActivity, self));\n\n    $(\".project-plan-activity-list\", $content).on(\"click\", \"li .activity-view\", $.proxy(self.onClickEditActivity, self));\n\n    $(\".project-plan-activity-list\", $content).on(\"click\", \"li .bz-icon-trash-outline\", $.proxy(self.onClickDeleteActivity, self));\n\n    $(\".project-plan-activity-list\", $content).on(\"click\", \"li .item-workonit-button\", $.proxy(self.onClickWorkonItActivity, self));\n\n    if (self.params.showContextByMenuDashboard === self.CONTEXT_PLANACTIVITIES) {\n      $(\".project-plan-activity-list\", $content).on(\"click\", \"li .ui-bizagi-wrapper-parallel-icon\", $.proxy(self.onClickChangeParallel, self));\n    }\n\n    if (self._statePlan === self.PENDING_PLAN) {\n      $(\"a#to-execute-plan\", $content).on(\"click\", $.proxy(self.onExecutePlan, self));\n    } else if (self._statePlan !== \"CLOSED_PLAN\") {\n      $(\"a#to-close-plan\", $content).on(\"click\", $.proxy(self.onClosePlan, self));\n    }\n\n    self.renderActivities();\n    if (event) {\n      if (event.type === \"UPDATE_LIST_ACTIVITIES\") {\n        self.updateTransitions();\n      }\n    }\n  },\n\n  getCopyObjectPlan: function getCopyObjectPlan() {\n    var self = this;\n    return {\n      id: self.params.plan.id,\n      name: self.params.plan.name,\n      description: self.params.plan.description,\n      dueDate: self.params.plan.dueDate,\n      waitForCompletion: self.params.plan.waitForCompletion,\n      currentState: self.params.plan.currentState,\n      parentWorkItem: self.params.plan.parentWorkItem,\n      creationDate: self.params.plan.creationDate,\n      startDate: self.params.plan.startDate,\n      idUserCreator: self.params.plan.idUserCreator,\n      contextualized: self.params.plan.contextualized,\n      activities: self.params.plan.activities };\n\n  },\n\n  enableEventsOnActivitiesByCurrentContext: function enableEventsOnActivitiesByCurrentContext(currentContext) {\n    var self = this;\n    return currentContext === self.CONTEXT_PLANACTIVITIES;\n  },\n\n  onNotifyUpdatePlan: function onNotifyUpdatePlan() {\n    var self = this;\n    if (self.params.showContextByMenuDashboard === self.CONTEXT_PLANOVERVIEW) {\n      $(\".ui-bizagi-wp-project-plan-activities-header h3\", self.content).text(self.params.plan.name);\n      $(\".ui-bizagi-wp-project-plan-activities-header p\", self.content).text(self.params.plan.description);\n    }\n\n  },\n\n  initializeSortableList: function initializeSortableList() {\n    var self = this;\n    return $(\".project-plan-activity-list\", self.content).kendoSortable({\n      hint: function hint(element) {\n        var $clone = element.clone().width(element.width());\n        return $(\"<ol class='project-plan-activity-list ui-bizagi-wp-nolist'></ol>\").append($clone);\n      },\n      change: $.proxy(self.onChangePosition, self),\n      disabled: \".disabled\",\n      end: function end(e) {\n        if (e.newIndex < self.fromIndexEnabledSortingActivities) {\n          e.preventDefault();\n        } else\n        {\n          if (e.oldIndex !== e.newIndex) {\n            self.serviceOrderActivitiesByTransitions.movePositionActivity(self.params.plan.activities, e.oldIndex, e.newIndex);\n\n            var $liActivityGoDown = $(\".project-plan-activity-list li\", self.content).eq(e.newIndex);\n\n            if (!self.canChangeToParallelActivity(self.params.plan.activities, $liActivityGoDown)) {var\n\n\n              setSerieActivity = function setSerieActivity() {\n                setTimeout(function () {\n                  //TODO: Update selector when show arrows in all activities\n                  $(\".project-plan-activity-list li .wrapper-arrow-css i\", self.content).eq(0).\n                  removeClass(\"bz-icon-arrow-right-outline\").addClass(\"bz-icon-arrow-down-outline\");\n                }, 50);\n              };self.params.plan.activities[e.newIndex].parallel = false;\n              setSerieActivity(e.newIndex);\n\n\n            }\n\n\n          }\n        }\n      } }).\n    data(\"kendoSortable\");\n  },\n\n  /*initializeNotifier: function(){\r\n         var self = this;\r\n         return $(\"#project-plan-notifier\", self.content).kendoNotification().data(\"kendoNotification\");\r\n     },*/\n\n  updateTransitions: function updateTransitions() {\n    var self = this;\n    var defer = $.Deferred();\n    var params = {\n      idPlan: self.params.plan.id,\n      transitions: self.getActualTransitions() };\n\n\n    $.when(self.dataService.changeTransitions(params)).always(function (response, responseText, xhr) {\n      if (xhr.status === 500) {\n        self.plugins.notifier.showErrorMessage(bizagi.localization.getResource(\"workportal-project-plan-activities-sorterror\"), \"error\");\n      }\n      self.params.plan.activities = self.orderActivitiesByTransitions(self.params.plan.activities, params.transitions);\n      defer.resolve();\n    });\n    return defer.promise();\n  },\n\n  orderActivitiesByTransitions: function orderActivitiesByTransitions(activities, transitions) {\n    var self = this;\n    return self.serviceOrderActivitiesByTransitions.\n    getActivitiesByTransitions(activities, transitions);\n  },\n\n  getActualTransitions: function getActualTransitions() {\n    var self = this;\n    var auxOrderTransitions = self.serviceOrderActivitiesByTransitions.\n    getActualTransitionsByActivities(self.params.plan.activities);\n\n    auxOrderTransitions.forEach(function (transition) {\n      transition.id = undefined;\n      transition.idPlan = self.params.plan.id;\n    });\n\n    return auxOrderTransitions;\n  },\n\n  onChangePosition: function onChangePosition() {\n    var self = this;\n    self.updateTransitions();\n  },\n\n  onCreateActivity: function onCreateActivity(event) {\n    event.preventDefault();\n\n    var self = this;\n    var $input = $(\"#project-plan-activity-create\", $(event.target));\n    var name = $input.val();\n\n    var idUserAssigned;\n    if (self.params.plan.activities.length > 0) {\n      idUserAssigned = self.params.plan.activities[self.params.plan.activities.length - 1].userAssigned;\n    } else\n    {\n      idUserAssigned = bizagi.currentUser.idUser;\n    }\n\n    if (name.replace(/\\s/g, \"\") !== \"\") {\n\n      var params = {\n        progress: 0,\n        id: \"\",\n        startDate: null,\n        duration: null,\n        userAssigned: idUserAssigned,\n        allowEdition: true,\n        description: null,\n        name: name,\n        idPlan: self.params.plan.id,\n        estimatedFinishDate: null,\n        finishDate: null };\n\n\n      if (self.params.plan.parent && !bizagi.util.isEmpty(self.params.plan.parent.guidActivity)) {\n        var paramsDetailActivity = {\n          idPlan: self.params.plan.id,\n          idActivity: self.params.plan.parent.guidActivity };\n\n        $.when(self.dataService.getActivity(paramsDetailActivity)).done(function (response) {\n          params.allowEdition = response.allowEdition;\n          self.createPlanActivity(params);\n\n        });\n      } else {\n        self.createPlanActivity(params);\n      }\n\n\n    }\n\n    event.target.reset();\n\n    event.preventDefault();\n  },\n  createPlanActivity: function createPlanActivity(params) {\n    var self = this;\n    $.when(self.dataService.createPlanActivity(params)).always(function (response, responseText, xhr) {\n\n      if (xhr.status === 201) {\n        var paramsDetailActivity = {\n          idPlan: params.idPlan,\n          idActivity: response.id };\n\n        $.when(self.dataService.getActivity(paramsDetailActivity)).always(function (responseActivity) {\n          var activityNew = $.extend(responseActivity, {\n            id: response.id,\n            items: [],\n            numTotalItems: 0,\n            numResolvedItems: 0,\n            parallel: false });\n\n\n          self.renderActivities([activityNew]);\n          self.params.plan.activities.push(activityNew);\n\n          var $activityList = $(\".project-plan-activity-list\", self.content);\n          $(\"li:last .bz-icon-pencil-outline\", $activityList).trigger(\"click\");\n\n          self.updateTransitions();\n        });\n      } else if (response.status === 500) {\n        self.plugins.notifier.showErrorMessage(bizagi.localization.getResource(\"workportal-project-plan-activities-createarror\"), \"error\");\n      }\n    });\n  },\n  onClickChangeParallel: function onClickChangeParallel(event) {\n    event.preventDefault();\n    var self = this;\n    var $wrapperArrow = $(\".wrapper-arrow-css\", event.currentTarget);\n\n    var $liActivitySelected = $wrapperArrow.closest(\"li\");\n    var idActivitySelected = $liActivitySelected.data(\"id\");\n\n    if (self.canChangeToParallelActivity(self.params.plan.activities, $liActivitySelected)) {\n      /**\r\n                                                                                              * Changes UI\r\n                                                                                              * */\n      var activityParallel;\n      if ($(\"i\", $wrapperArrow).hasClass(\"bz-icon-arrow-down-outline\")) {\n        activityParallel = true;\n        $(\"i\", $wrapperArrow).removeClass(\"bz-icon-arrow-down-outline\").addClass(\"bz-icon-arrow-right-outline\").\n        prop(\"title\", bizagi.localization.getResource(\"workportal-project-plan-activity-parallel\"));\n      } else\n      {\n        activityParallel = false;\n        $(\"i\", $wrapperArrow).removeClass(\"bz-icon-arrow-right-outline\").addClass(\"bz-icon-arrow-down-outline\").\n        prop(\"title\", bizagi.localization.getResource(\"workportal-project-plan-activity-sequential\"));\n      }\n\n      /**\r\n         * Change Activity Data\r\n         */\n      self.changeActivityProperties(idActivitySelected, { parallel: activityParallel });\n\n      self.updateTransitions();\n    }\n  },\n\n  canChangeToParallelActivity: function canChangeToParallelActivity(activities, $liActivitySelected) {\n    var self = this;\n    var result = true;\n    var idLastParallelActivity = self.getLastParallelActivityIsRunningOrClose(activities);\n    if (idLastParallelActivity) {\n      var $liPreviusActivity = $liActivitySelected.prev();\n      var idPreviusActivity = $liPreviusActivity.data(\"id\");\n      if (idLastParallelActivity === idPreviusActivity) {\n        result = false;\n      }\n    }\n    return result;\n  },\n\n  onClickEditActivity: function onClickEditActivity(event) {\n    var self = this;\n    var $target = $(event.currentTarget);\n\n    var idActivitySelected = $target.data(\"id\");\n\n    var activityToShow = self.params.plan.activities.filter(function (activity) {\n      return activity.id === idActivitySelected;\n    })[0];\n\n    var isEditableFormActivity = self._statePlan !== \"CLOSED_PLAN\" && activityToShow.workItemState !== \"Completed\";\n\n    if (self.params.showContextByMenuDashboard === self.CONTEXT_PLANACTIVITIES) {var\n      showFormToEditActivity = function showFormToEditActivity(idActivitySelected) {\n        if (self.idActivityEditing !== idActivitySelected) {\n          self.params.plan.idActivitySelected = idActivitySelected;\n\n          $target.closest(\"li\").addClass(\"selected\").siblings().removeClass(\"selected\");\n          self.idActivityEditing = idActivitySelected;\n          self.pub(\"notify\", {\n            type: \"EDITACTIVITY\",\n            args: $.extend(self.params, {\n              isEditableFormActivity: isEditableFormActivity,\n              idActivityToShow: idActivitySelected }) });\n\n\n          self.pub(\"notify\", {\n            type: \"OPEN_RIGHT_SIDEBAR\" });\n\n        }\n      };\n\n      showFormToEditActivity(idActivitySelected);\n    }\n  },\n\n  changeActivityProperties: function changeActivityProperties(activityGuid, activityPropertiesToUpdate) {\n    var self = this;\n    for (var iActivity = 0, lengthActivities = self.params.plan.activities.length; iActivity < lengthActivities; iActivity += 1) {\n      if (self.params.plan.activities[iActivity].id === activityGuid) {\n        $.extend(self.params.plan.activities[iActivity], activityPropertiesToUpdate);\n        break;\n      }\n    }\n  },\n\n  addEventHandlers: function addEventHandlers() {\n    var self = this;\n\n    $(\"#project-plan-activity-createform\", self.content).on(\"submit\", $.proxy(self.onCreateActivity, self));\n    $(\"#project-plan-activity-create\", self.content).focus();\n  },\n\n  /**\r\n      * UI\r\n      */\n  renderActivities: function renderActivities(activities) {\n    var self = this;\n    var $list = $(\".project-plan-activity-list\", self.content);\n    var tmpl = self.getTemplate(\"plan-activities-item\");\n\n    if (self.params.showContextByMenuDashboard === self.CONTEXT_PLANACTIVITIES) {\n      $list.addClass(\"enabled-actions\");\n    }\n\n    var $element = self.params.plan.currentState === \"PENDING\" ? $(\"a#to-execute-plan\", self.content) : $(\"a#to-close-plan\", self.content);\n    if (activities || self.params.plan.activities.length > 0) {\n      $element.show();\n    } else {\n      $element.hide();\n    }\n\n    var arrayActivities = activities || self.params.plan.activities;\n\n    var argsTemplate = {\n      statePlan: self._statePlan,\n      statePendingPlan: self.PENDING_PLAN,\n      stateExecutingPlan: self.EXECUTING_PLAN,\n      context: self.params.showContextByMenuDashboard,\n      activities: activities || self.params.plan.activities,\n      currentUserId: bizagi.currentUser.idUser };\n\n\n    if (self._statePlan === self.EXECUTING_PLAN) {\n      arrayActivities.forEach(function (activity) {\n        if (activity.startDate) {\n          activity.classEnabledActionActivities = \"disabled\";\n        } else\n        {\n          activity.classEnabledActionActivities = self.params.showContextByMenuDashboard === self.CONTEXT_PLANACTIVITIES ? \"enabled\" : \"disabled\";\n        }\n\n        activity.isRunning = self.runningActivity(activity);\n\n      });\n    }\n\n    // XSS Fix Bug \n    argsTemplate.activities = argsTemplate.activities.map(function (activity) {\n      activity.name = bizagi.util.decodeHtmlEntities(activity.name);\n      activity.description = bizagi.util.decodeHtmlEntities(activity.description);\n      return activity;\n    });\n\n    var $item = tmpl.render(argsTemplate);\n    $list.append($item);\n\n    self.fromIndexEnabledSortingActivities = self.params.plan.activities.filter(function (activity) {\n      return activity.classEnabledActionActivities === \"disabled\";\n    }).length;\n\n    self.loadAndShowImagesUsers(self.params.plan.activities);\n  },\n\n  /**\r\n      * Know if the activity is running\r\n      * @param activity\r\n      * @returns {boolean}\r\n      */\n  runningActivity: function runningActivity(activity) {\n    //Inactive represent created but user dont access yet\n    return activity.workItemState === 'Active' || activity.workItemState === 'Inactive';\n  },\n\n  loadAndShowImagesUsers: function loadAndShowImagesUsers(listActivities) {\n    var self = this;\n\n    var guidUsers = $.map(listActivities, function (element) {\n      return element.userAssigned;\n    });\n\n    function removeDuplicateItemsFromArray(a) {\n      var seen = {};\n      var out = [];\n      var len = a.length;\n      var j = 0;\n      for (var i = 0; i < len; i++) {\n        var item = a[i];\n        if (seen[item] !== 1) {\n          seen[item] = 1;\n          out[j++] = item;\n        }\n      }\n      return out;\n    }\n\n    var csvguidUsers = removeDuplicateItemsFromArray(guidUsers.concat(bizagi.currentUser.userGuid)).join(\",\");\n\n    self.getDataUsers(csvguidUsers).then(function () {\n      self.renderUserProfilesAndImages();\n    });\n  },\n\n  renderUserProfilesAndImages: function renderUserProfilesAndImages() {\n    var self = this;\n\n    var base64Prefix = \"data:image/png;base64,\";\n\n    for (var iUser = 0; iUser < self.userPictures.length; iUser += 1) {\n      $(\"div[data-iduser='\" + self.userPictures[iUser].id + \"']  span.ui-bizagi-user-initials\").html(self.userPictures[iUser].name.getInitials());\n      if (self.userPictures[iUser].picture) {\n        $(\"div[data-iduser='\" + self.userPictures[iUser].id + \"']  img\").show();\n        $(\"div[data-iduser='\" + self.userPictures[iUser].id + \"']  span.ui-bizagi-user-initials\").hide();\n        $(\"div[data-iduser='\" + self.userPictures[iUser].id + \"']  img\").attr(\"src\", base64Prefix + self.userPictures[iUser].picture);\n      }\n    }\n  },\n\n  /**\r\n      * Call services\r\n      */\n\n  /*\r\n          *  Get data for users\r\n          */\n  getDataUsers: function getDataUsers(csvguidUsers) {\n    var self = this,\n    defer = $.Deferred();\n\n    var params = {\n      usersGuids: csvguidUsers,\n      width: 50,\n      height: 50 };\n\n\n    self.dataService.getUsersData(params).always(function (response) {\n\n      function arrayUnique(array) {\n        var a = array.concat();\n        for (var i = 0; i < a.length; ++i) {\n          for (var j = i + 1; j < a.length; ++j) {\n            if (a[i] === a[j]) {\n              a.splice(j -= 1, 1);\n            }\n\n          }\n        }\n        return a;\n      }\n\n      self.userPictures = arrayUnique(self.userPictures.concat(response));\n      defer.resolve(response);\n    });\n\n    return defer.promise();\n  },\n\n  /**\r\n      * When cancel form\r\n      */\n  onCancelActivityForm: function onCancelActivityForm() {\n    var self = this;\n    self.closeSidebar();\n    self.pub(\"notify\", {\n      type: \"PLANSIDEBAR\",\n      args: self.params });\n\n  },\n\n  setContentWrapper: function setContentWrapper(content) {\n    var self = this;\n    var $contentWrapper = $(\".project-plan-content-wrapper\", content);\n    $contentWrapper.on(\"click\", $.proxy(self.onCancelActivityForm, self));\n    var activityArea = $(\"#project-plan-activities-wrapper\", content);\n    activityArea.on(\"click\", function (e) {e.stopPropagation();});\n    var windowHeight = $(window).height();\n    var height = windowHeight - 156;\n    $contentWrapper.css(\"height\", height + \"px\");\n  },\n\n  onClickDeleteActivity: function onClickDeleteActivity(event) {\n    event.stopPropagation();\n    var self = this;\n    var idActivitySelected = $(event.currentTarget).data(\"id\");\n    var params = {\n      idPlan: self.params.plan.id,\n      id: idActivitySelected };\n\n    $.when(bizagi.showConfirmationBox(bizagi.localization.getResource(\"workportal-project-plan-activity-delete-confirmation\"), \"\", \"info\")).done(function () {\n      $.when(self.dataService.deleteActivityPlan(params)).done(function () {\n        self.closeSidebar();\n        //The next activity of the deleted, if its parallel, have to set dont parallel\n        for (var iActivity = 0, lengthActivities = self.params.plan.activities.length; iActivity < lengthActivities; iActivity += 1) {\n          if (self.params.plan.activities[iActivity].id === idActivitySelected) {\n            //activity isn't the first or last activity\n            if (lengthActivities > iActivity + 1 && iActivity > 0) {\n              if (self.params.plan.activities[iActivity + 1].parallel && self.params.plan.activities[iActivity - 1].parallel) {\n                self.params.plan.activities[iActivity + 1].parallel = false;\n                $(\".project-plan-activity-list li[data-id='\" + self.params.plan.activities[iActivity].id + \"']\", self.content).\n                next().find(\".wrapper-arrow-css i\").removeClass(\"bz-icon-arrow-right-outline\").addClass(\"bz-icon-arrow-down-outline\");\n              }\n            }\n          }\n        }\n\n        //Delete activity\n        self.params.plan.activities = self.params.plan.activities.filter(function (activity) {\n          return activity.id !== idActivitySelected;\n        });\n\n        $.when(self.updateTransitions()).done(function () {\n          self.renderWidgetByStatePlan();\n\n          self.pub(\"notify\", {\n            type: \"PLANSIDEBAR\",\n            args: self.params });\n\n        });\n      });\n    });\n  },\n\n  /**\r\n      * Go to activity\r\n      */\n  onClickWorkonItActivity: function onClickWorkonItActivity(event) {\n    event.preventDefault();\n    var self = this;\n    var idActivitySelected = $(event.target).closest(\"li\").data(\"id\");\n    var activity = self.params.plan.activities.filter(function (activity) {\n      return activity.id === idActivitySelected;\n    })[0];\n\n    self.publish(\"executeAction\", {\n      action: bizagi.workportal.actions.action.BIZAGI_WORKPORTAL_ACTION_ROUTING,\n      idCase: activity.idCase,\n      idWorkItem: activity.idWorkItem });\n\n  },\n\n  onExecutePlan: function onExecutePlan(event) {\n    event.preventDefault();\n    var self = this;\n\n    var numberActivitiesCreated = self.params.plan.activities.length;\n\n    if (numberActivitiesCreated > 0) {\n      if (!$(event.target).closest(\"a\").hasClass(\"disabled\")) {\n        self.params.plan.currentState = \"EXECUTING\";\n        $(event.target).closest(\"a\").addClass(\"disabled\");\n        var params = {\n          idPlan: self.params.plan.id };\n\n\n        $.when(self.dataService.putExecutePlan(params)).done(function () {\n          var params = $.extend(self.getCopyObjectPlan(), { startDate: self.getDateServer() });\n          self.callUpdatePlan(params);\n\n          $(event.target).closest(\"a\").removeClass(\"disabled\");\n\n          function sendNotification(params) {\n            if (self.params.planChild) {\n              self.params.planChild.currentState = self.params.plan.currentState;\n            }\n\n            self._notifyPlanActivities(params);\n          }\n\n          if (typeof self.radNumber === \"undefined\") {\n            $.when(self.dataService.getCaseByPlan({ idPlan: self.params.plan.id })).done(function (response) {\n              self.params.idCase = response.id;\n              sendNotification(self.params);\n            });\n          } else\n          {\n            sendNotification(self.params);\n          }\n\n\n\n        });\n      }\n    } else\n    {\n      self.plugins.notifier.showErrorMessage(printf(bizagi.localization.getResource(\"workportal-project-plan-action-execute-message-activities-required\"), \"\"));\n    }\n  },\n\n  /**\r\n      * notify PLANACTIVITIES with refreshAllWidgets false\r\n      * @param {JSON} params \r\n      */\n  _notifyPlanActivities: function _notifyPlanActivities(params) {\n    var self = this;\n    self.pub(\"notify\", {\n      type: \"PLANACTIVITIES\",\n      args: $.extend(params, { refreshAllWidgets: true }) });\n\n  },\n\n  onClosePlan: function onClosePlan(event) {\n    var self = this;\n    event.preventDefault();\n    if (self.activitiesAreCompleted(self.params.plan.activities)) {\n      self.closePlan();\n    } else {\n      $.when(bizagi.showConfirmationBox(bizagi.localization.getResource(\"workportal-project-plan-action-close-message-activities-finished\"), \"\", \"info\")).done(function () {\n        self.closePlan();\n      });\n    }\n  },\n\n  closePlan: function closePlan() {\n    var self = this;\n    var params = $.extend(self.getCopyObjectPlan(), { currentState: \"CLOSED\" });\n    $.when(self.callUpdatePlan(params)).done(function () {\n      $.when(self.callClosePlan({ idPlan: params.id })).done(function () {\n        self.params.plan = params;\n        self.pub(\"notify\", {\n          type: \"LOAD_INFO_SUMMARY_PLAN\",\n          args: self.params });\n\n\n        self.pub(\"notify\", {\n          type: \"LOAD_INFO_SUMMARY_PROGRESS_PLAN\",\n          args: self.params });\n\n      }).fail(function () {\n        self.notifier.showErrorMessage(printf(bizagi.localization.getResource('workportal-project-plan-close-fail'), ''));\n      });\n    }).fail(function () {\n      self.notifier.showErrorMessage(printf(bizagi.localization.getResource('workportal-project-plan-close-fail'), ''));\n    });\n  },\n\n  callUpdatePlan: function callUpdatePlan(params) {\n    var self = this;\n    return $.when(self.dataService.updatePlan(params)).done(function () {\n      $.extend(self.params.plan, params);\n    });\n  },\n\n  callClosePlan: function callClosePlan(params) {\n    var self = this;\n    return $.when(self.dataService.closePlan(params)).done(function () {\n      $.extend(self.params.plan, params);\n      self.plugins.notifier.showSucessMessage(printf(bizagi.localization.getResource(\"workportal-project-plan-close-success\"), \"\"));\n    });\n  },\n\n  activitiesAreCompleted: function activitiesAreCompleted(activities) {\n    var listActivities = activities || [];\n    var numActivitiesCompleted = listActivities.filter(function (activity) {\n      return activity.finishDate;\n    }).length;\n    return numActivitiesCompleted === activities.length;\n  },\n\n  getLastParallelActivityIsRunningOrClose: function getLastParallelActivityIsRunningOrClose(activities) {\n    var lastIndexParallelInExecution = -1;\n    var parallelActivitiesInRunning = activities.filter(function (activity) {\n      if (activity.startDate !== null && activity.parallel) {\n        lastIndexParallelInExecution += 1;\n        return true;\n      }\n    });\n    if (lastIndexParallelInExecution >= 0 && lastIndexParallelInExecution + 1 !== activities.length) {\n      return parallelActivitiesInRunning[parallelActivitiesInRunning.length - 1].id;\n    } else\n    {\n      return null;\n    }\n  },\n\n  /**\r\n      * return JElement from id or selected from class\r\n      * @param {JSON} params \r\n      */\n  _getJElementSelectedActivity: function _getJElementSelectedActivity(params) {\n    var _jElementFromId = $(\".project-plan-activity-list li[data-id='\" + params.args.id + \"']\"),\n    _jElementSelected = $(\".project-plan-activity-list li.selected\");\n    return params.args.id ? _jElementFromId : _jElementSelected;\n  },\n\n  /**\r\n      * update activity information in row activities\r\n      * @param {Event} _ \r\n      * @param {JSON} params \r\n      */\n  refreshActivityRow: function refreshActivityRow(_, params) {\n    var self = this;\n    var $selectedActivity = self._getJElementSelectedActivity(params);\n    if (params.args.displayName) $(\"p>span\", $selectedActivity).text(params.args.displayName);\n    if (params.args.assignee) {\n\n      var idActivitySelected = $($selectedActivity).data(\"id\");\n      var activityEdited = self.params.plan.activities.filter(function (activity) {\n        return activity.id === idActivitySelected;\n      })[0];\n\n      if (params.args.assignee === bizagi.currentUser.idUser && (activityEdited.workItemState === \"Active\" || activityEdited.workItemState === \"Inactive\")) {\n        $(\".item-workonit-button\", $selectedActivity).show();\n      } else\n      {\n        $(\".item-workonit-button\", $selectedActivity).hide();\n      }\n\n      self.getDataUsers([params.args.assignee].join()).then(function (response) {\n        $(\".bz-wp-avatar span.ui-bizagi-user-initials\", $selectedActivity).html(response[0].name.getInitials());\n        $(\"div.ui-bizagi-wp-project-plan-activity-infobox[data-iduser]\", $selectedActivity).attr(\"data-iduser\", params.args.assignee);\n        if (response[0].picture) {\n          var base64Prefix = \"data:image/png;base64,\";\n          $(\".bz-wp-avatar img\", $selectedActivity).show();\n          $(\".bz-wp-avatar  span.ui-bizagi-user-initials\", $selectedActivity).hide();\n          $(\".bz-wp-avatar img\", $selectedActivity).attr(\"src\", base64Prefix + response[0].picture);\n        } else\n        {\n          $(\".bz-wp-avatar img\", $selectedActivity).hide();\n          $(\".bz-wp-avatar  span.ui-bizagi-user-initials\", $selectedActivity).show();\n        }\n      });\n    }\n  },\n\n  closeSidebar: function closeSidebar() {\n    var that = this;\n    if (bizagi.services.preferences().getPreference(\"activityCollapseSidebars\") && $(\".ui-bizagi-wp-project-panel-rowicon-right i.bz-icon-left-outline\").css(\"display\") == \"none\" && $(\"li.clearfix.selected\").length > 0) {\n      that.pub(\"notify\", {\n        type: \"CLOSE_RIGHT_SIDEBAR\" });\n\n    }\n  },\n\n  collapseSidebars: function collapseSidebars() {\n    if (bizagi.services.preferences().getPreference(\"activityCollapseSidebars\")) {\n      $(\"#ui-bizagi-wp-project-homeportal-main\").addClass(\"ui-bizagi-wp-project-collapse-rightpanel\");\n      $(\"#ui-bizagi-wp-project-homeportal-main\").removeClass(\"ui-bizagi-wp-project-open-rightpanel\");\n      $(\"#right-sidebar-wrapper\").addClass(\"always-collpase\");\n\n      $(\"#ui-bizagi-wp-project-homeportal-main\").addClass(\"ui-bizagi-wp-project-collapse-leftpanel\");\n      $(\"#ui-bizagi-wp-project-homeportal-main\").removeClass(\"ui-bizagi-wp-project-open-leftpanel\");\n      $(\"#left-sidebar-wrapper\").addClass(\"always-collpase\");\n    }\n  } });\n\n\n\nbizagi.injector.register(\"bizagi.workportal.widgets.project.plan.activities\", [\"workportalFacade\", \"dataService\", \"notifier\", \"bizagi.workportal.services.behaviors.orderActivitiesByTransitions\", bizagi.workportal.widgets.project.plan.activities], true);","/*\r\n *   Name: Bizagi Workportal project Plan Sidebar\r\n *   Author: Elkin Fernando Siabato Cruz\r\n */\n\nbizagi.workportal.widgets.project.base.extend(\"bizagi.workportal.widgets.project.plan.sidebar\", {}, {\n\n  /*\r\n                                                                                                       *   Constructor\r\n                                                                                                       */\n  init: function init(workportalFacade, dataService, serviceloadDataPlan, params) {\n    var self = this;\n\n    // Call base\n    self._super(workportalFacade, dataService, params);\n\n    self.serviceloadDataPlan = serviceloadDataPlan;\n    self.params = params || {};\n    params.supportNav = false;\n\n    //Load templates\n    self.loadTemplates({\n      \"project-plan-sidebar\": bizagi.getTemplate(\"bizagi.workportal.desktop.widget.project.plan.sidebar\").concat(\"#project-plan-sidebar\") });\n\n\n  },\n\n  /*\r\n      * Renders the template defined in the widget\r\n      */\n  renderContent: function renderContent() {\n    var self = this;\n    var template = self.getTemplate(\"project-plan-sidebar\");\n    self.content = template.render({});\n    $.when(self.areTemplatedLoaded()).\n    done(function () {\n      var params = { idPlan: self.params.plan.id };\n      if (self.params.planChild && self.params.planChild.id) {\n        params.idPlan = self.params.planChild.id;\n      }\n      self.serviceloadDataPlan.loadData(params, self.getDateServer, self.params);\n      self.serviceloadDataPlan.subscribe(\"loadedWithDataActivities\", $.proxy(self.loadedWithDataActivities, self));\n      self.serviceloadDataPlan.subscribe(\"loadedWithDataFirstParent\", $.proxy(self.loadedWithDataFirstParent, self));\n    });\n    return self.content;\n  },\n\n  loadedWithDataActivities: function loadedWithDataActivities() {\n    var self = this;\n    self.pub(\"notify\", {\n      type: \"LOADED_ACTIVITIES_PLAN\",\n      args: self.params });\n\n    self.pub(\"notify\", {\n      type: \"UPDATE_INFO_PLAN\",\n      args: self.params });\n\n    self.pub(\"notify\", {\n      type: \"LOAD_INFO_SUMMARY_PROGRESS_PLAN\",\n      args: self.params });\n\n    self.pub(\"notify\", {\n      type: \"LOAD_INFO_ACTIVITIES_PLAN\",\n      args: self.params });\n\n  },\n\n  loadedWithDataFirstParent: function loadedWithDataFirstParent() {\n    var self = this;\n    self.pub(\"notify\", {\n      type: \"LOAD_INFO_SUMMARY_PLAN\",\n      args: self.params });\n\n  },\n\n  clean: function clean() {\n    var self = this;\n    if (self.serviceloadDataPlan) {\n      self.serviceloadDataPlan.unsubscribe(\"loadedWithDataActivities\", $.proxy(self.loadedWithDataActivities, self));\n      self.serviceloadDataPlan.unsubscribe(\"loadedWithDataFirstParent\", $.proxy(self.loadedWithDataFirstParent, self));\n    }\n  } });\n\n\n\nbizagi.injector.register(\"bizagi.workportal.widgets.project.plan.sidebar\", [\"workportalFacade\", \"dataService\", \"bizagi.workportal.services.behaviors.loadDataPlan\", bizagi.workportal.widgets.project.plan.sidebar], true);","/*\r\n *   Name: Bizagi Workportal Desktop Project Plan Action\r\n *   Author: Elkin Fernando Siabato Cruz\r\n */\n\nbizagi.workportal.widgets.project.base.extend(\"bizagi.workportal.widgets.project.plan.action\", {}, {\n\n  /*\r\n                                                                                                      *   Constructor\r\n                                                                                                      */\n  init: function init(workportalFacade, dataService, projectDashboard, notifier, planTemplateCreate, planPopupEdit, params) {\n    var self = this;\n\n    // Call base\n    self._super(workportalFacade, dataService, params);\n\n    self.PENDING_PLAN = \"PENDING\";\n    self.EXECUTING_PLAN = \"EXECUTING\";\n    self.CLOSED_PLAN = \"CLOSED\";\n\n    self.CONTEXT_ACTIVITYPLAN = \"ACTIVITYPLAN\";\n    self.CONTEXT_ACTIVITYPLANOVERVIEW = \"ACTIVITYPLANOVERVIEW\";\n    self.CONTEXT_PLANCREATE = \"PLANCREATE\";\n    self.CONTEXT_ACTIVITYPLANCREATE = \"ACTIVITYPLANCREATE\";\n\n    self.showActionsPlan = false;\n    self.projectDashboard = projectDashboard;\n    self.notifier = notifier;\n    self.planTemplateCreate = planTemplateCreate;\n    self.planPopupEdit = planPopupEdit;\n\n    //Load templates\n    self.loadTemplates({\n      \"plan-action-main\": bizagi.getTemplate(\"bizagi.workportal.desktop.project.plan.action\").concat(\"#project-plan-action\") });\n\n  },\n\n  renderContent: function renderContent() {\n    var self = this;\n    var tmpl = self.getTemplate(\"plan-action-main\");\n\n    self.showActionsPlan = self.params.showContextByMenuDashboard !== self.CONTEXT_ACTIVITYPLAN &&\n    self.params.showContextByMenuDashboard !== self.CONTEXT_ACTIVITYPLANOVERVIEW;\n\n    self.plugins = {};\n    self.content = tmpl.render({\n      plan: self.params.plan.name,\n      stateClosedPlan: self.CLOSED_PLAN,\n      currentStatePlan: self.params.plan.currentState,\n      showActionsPlan: self.showActionsPlan });\n\n\n    if (self.showActionsPlan) {\n      self.params.plan.contextualized = typeof self.params.plan.contextualized == \"undefined\" ? true : self.params.plan.contextualized;\n    }\n\n    return self.content;\n  },\n\n  postRender: function postRender() {\n\n    var self = this;\n    var $contentWidget = self.getContent();\n\n    if (self.showActionsPlan) {\n      self.initilizeActionMenu();\n      $(\"a#to-close-plan\", $contentWidget).on(\"click\", $.proxy(self.onClosePlan, self));\n    }\n\n    self.sub(\"LOAD_INFO_SUMMARY_PLAN\", $.proxy(self.onNotifyLoadInfoSummaryPlan, self));\n    self.clearAlertsOnFocus();\n\n    self.planTemplateCreate.sub('planTemplateCreatedSuccess', function () {\n      self.notifier.showSucessMessage(\n      printf(bizagi.localization.getResource('workportal-project-plan-create-template-success'), ''));\n    });\n    self.planTemplateCreate.sub('planTemplateCreatedFailed', function () {\n      self.notifier.showErrorMessage(\n      printf(bizagi.localization.getResource('workportal-project-plan-create-template-fail'), ''));\n    });\n\n    self.planPopupEdit.sub('planEditedSuccess', function () {\n      self.setNamePlan(self.params.plan.name);\n\n      self.pub(\"notify\", {\n        type: \"UPDATE_INFO_PLAN\" });\n\n\n      self.pub(\"notify\", {\n        type: \"LOAD_INFO_SUMMARY_PLAN\",\n        args: self.params });\n\n\n      self.notifier.showSucessMessage(\n      printf(bizagi.localization.getResource('workportal-project-plan-edit-success'), ''));\n    });\n\n    self.planPopupEdit.sub('planEditedFailed', function () {\n      self.notifier.showErrorMessage(\n      printf(bizagi.localization.getResource('workportal-project-plan-edit-fail'), ''));\n    });\n\n    self.sub(\"EXPANDED_RIGHT_SIDEBAR\", $.proxy(self.onNotifyExpandedRightSidebar, self));\n  },\n\n  onNotifyExpandedRightSidebar: function onNotifyExpandedRightSidebar() {\n    var self = this;\n    if (self.showActionsPlan) {\n      self.initilizeActionMenu();\n    }\n  },\n\n  /**\r\n      * Notifies when an event is raised\r\n      */\n\n  onNotifyLoadInfoSummaryPlan: function onNotifyLoadInfoSummaryPlan() {\n    var self = this;\n    self.setStatePlan(self.params.plan.currentState);\n    self.setNamePlan(self.params.plan.name);\n  },\n\n  /**\r\n      * UI\r\n      */\n\n  setStatePlan: function setStatePlan(statePlan) {\n    var self = this;\n    if (statePlan) {\n      switch (statePlan.toUpperCase()) {\n        case \"PENDING\":\n          $(\".state-pending-plan\", self.content).show().siblings().hide();\n          break;\n        case \"EXECUTING\":\n          $(\".state-executing-plan\", self.content).show().siblings().hide();\n          break;\n        case \"CLOSED\":\n          $(\".state-closed-plan\", self.content).show().siblings().hide();\n          break;}\n\n    }\n  },\n\n  setNamePlan: function setNamePlan(namePlan) {\n    var self = this;\n    $(\".ui-bizagi-wp-project-plan-header .bz-wp-section\", self.content).text(bizagi.util.decodeHtmlEntities(namePlan));\n  },\n\n  /**\r\n      Events\r\n      */\n  onSelectMenu: function onSelectMenu(event, ui) {\n    var self = this;\n    if ($(event.currentTarget).find(\"i\").length === 0) {\n      var item = $(ui.item).data(\"item\");\n\n      switch (item) {\n        case \"edit\":\n          self.onClickMenuOpenEdition();\n          break;\n        case \"delete\":\n          self.onClickMenuDeletePlan();\n          break;\n        case \"saveastmpl\":\n          self.onClickMenuSaveAsTemplate();\n          break;}\n\n    }\n\n  },\n\n  onClickMenuOpenEdition: function onClickMenuOpenEdition() {\n    var self = this;\n    var planSelected = self.params.plan;\n    self.planPopupEdit.showPopup(self.params, self.dataService, planSelected);\n  },\n\n  onClickMenuSaveAsTemplate: function onClickMenuSaveAsTemplate() {\n    var self = this;\n    self.planTemplateCreate.showPopupAddTemplatePlan(self.params,\n    self.dataService, self.params.plan.contextualized, self.params.plan.id);\n  },\n\n  onClickMenuDeletePlan: function onClickMenuDeletePlan() {\n    var self = this;\n\n    $.when(bizagi.showConfirmationBox(bizagi.localization.getResource(\"workportal-project-plan-action-delete-confirmation\"), \"\", \"info\")).done(function () {\n      var params = { id: self.params.plan.id };\n\n      $.when(self.callDeletePlan(params)).always(function (response) {\n        if (response.status === 200 || typeof response.status === \"undefined\") {\n          $.extend(self.params.plan, params);\n          self.notifier.showSucessMessage(\n          printf(bizagi.localization.getResource(\"workportal-project-plan-delete-success\"), \"\"));\n\n          //when a plan created from an activity is deleted, not created from a case\n          var getLevelNavigator = self.pub(\"notify\", { type: \"NAVIGATOR_GETLEVEL\" });\n          var currentLevelNavigator = parseInt(getLevelNavigator[0]);\n          var params = self.projectDashboard.getParamsByBackFromPlan(self.params, currentLevelNavigator, true);\n\n          self.pub(\"notify\", {\n            type: params.typeContext,\n            args: $.extend(self.params, params.paramsNotify) });\n\n        } else\n        {\n          self.notifier.showErrorMessage(\n          printf(bizagi.localization.getResource('workportal-project-plan-delete-fail'), ''));\n        }\n      });\n    });\n  },\n\n  onSubmitFormPlan: function onSubmitFormPlan(event) {\n    event.preventDefault();\n  },\n\n  initilizeActionMenu: function initilizeActionMenu() {\n    var self = this;\n    $(\".ui-bizagi-wp-project-plan-action-menu\", self.content).menu({\n      select: $.proxy(self.onSelectMenu, self) }).\n    removeClass(\"ui-widget-content\");\n  },\n\n\n  /**\r\n      * Initialize edit plugin\r\n      */\n\n  clearAlertsOnFocus: function clearAlertsOnFocus() {\n    $(\".ui-bizagi-wp-project-container-validator-relative input, .ui-bizagi-wp-project-container-validator-relative textarea\").focus(function () {\n      $(this).parent().find(\".k-invalid-msg\").hide();\n    }).focusout(function () {\n      if ($(this).val().length < 1) {\n        $(this).parent().find(\".k-invalid-msg\").show();\n      }\n    });\n  },\n\n  /*activitiesAreCompleted: function(activities){\r\n         var listActivities = activities || [];\r\n         var numActivitiesCompleted =  listActivities.filter(function(activity){\r\n             return activity.finishDate;\r\n         }).length;\r\n         return numActivitiesCompleted == activities.length;\r\n     },*/\n\n  /*getCopyObjectPlan: function(){\r\n              var self = this;\r\n              return {\r\n                  id: self.params.plan.id,\r\n                  name: self.params.plan.name,\r\n                  description: self.params.plan.description,\r\n                  dueDate: self.params.plan.dueDate,\r\n                  waitForCompletion: self.params.plan.waitForCompletion,\r\n                  currentState: self.params.plan.currentState,\r\n                  parentWorkItem: self.params.plan.parentWorkItem,\r\n                  creationDate: self.params.plan.creationDate,\r\n                  startDate: self.params.plan.startDate,\r\n                  idUserCreator: self.params.plan.idUserCreator,\r\n                  contextualized: self.params.plan.contextualized,\r\n                  activities: self.params.plan.activities\r\n              };\r\n          },*/\n\n  /**\r\n                * Call services\r\n                */\n  /*callUpdatePlan: function(params){\r\n                       var self = this;\r\n                       return $.when(self.dataService.updatePlan(params)).done(function () {\r\n                           $.extend(self.params.plan, params);\r\n                         });\r\n                   },\r\n                     callClosePlan: function(params){\r\n                       var self = this;\r\n                       return $.when(self.dataService.closePlan(params)).done(function () {\r\n                           $.extend(self.params.plan, params);\r\n                           self.notifier.showSucessMessage(\r\n                               printf(bizagi.localization.getResource(\"workportal-project-plan-close-success\"), \"\"));\r\n                       });\r\n                   },*/\n\n\n\n  callDeletePlan: function callDeletePlan(params) {\n    var self = this;\n    return $.when(self.dataService.deletePlan(params));\n  },\n\n  clean: function clean() {\n    var self = this;\n    self.planTemplateCreate.unsub(\"planTemplateCreatedSuccess\");\n    self.planTemplateCreate.unsub(\"planTemplateCreatedFailed\");\n    self.planPopupEdit.unsub(\"planEditedSuccess\");\n    self.planPopupEdit.unsub(\"planEditedFailed\");\n\n    self.unsub(\"EXPANDED_RIGHT_SIDEBAR\", $.proxy(self.onNotifyExpandedRightSidebar, self));\n  } });\n\n\nbizagi.injector.register(\"bizagi.workportal.widgets.project.plan.action\", [\"workportalFacade\", \"dataService\",\n\"bizagi.workportal.services.behaviors.projectDashboard\", \"notifier\",\n\"bizagi.workportal.widgets.project.plan.template.create\",\n\"bizagi.workportal.widgets.project.plan.edit\",\nbizagi.workportal.widgets.project.plan.action], true);","/*\r\n *   Name: Bizagi Workportal Desktop Project Plan State\r\n *   Author: Elkin Fernando Siabato Cruz\r\n */\n\nbizagi.workportal.widgets.widget.extend(\"bizagi.workportal.widgets.project.plan.state\", {}, {\n\n  /*\r\n                                                                                               *   Constructor\r\n                                                                                               */\n  init: function init(workportalFacade, dataService, params) {\n    var self = this;\n\n    // Call base\n    self._super(workportalFacade, dataService, params);\n\n    //Load templates\n    self.loadTemplates({\n      \"plan-state-main\": bizagi.getTemplate(\"bizagi.workportal.desktop.project.plan.state\").concat(\"#project-plan-state\") });\n\n  },\n\n  renderContent: function renderContent() {\n    var self = this;\n    self.content = $(\"<div></div>\");\n    return self.content;\n  },\n\n  postRender: function postRender() {\n    var self = this;\n    self.sub(\"LOAD_INFO_SUMMARY_PLAN\", $.proxy(self.onNotifyLoadInfoSummaryPlan, self));\n  },\n\n  /**\r\n      * Notifies when an event is raised\r\n      */\n\n  onNotifyLoadInfoSummaryPlan: function onNotifyLoadInfoSummaryPlan(event, params) {\n    var self = this;\n    var tmpl = self.getTemplate(\"plan-state-main\");\n    var renderWidget = tmpl.render({});\n    self.params = $.extend(self.params, params.args);\n\n    var state = self.params.plan.currentState;\n\n    switch (state.toUpperCase()) {\n      case \"PENDING\":\n        $(\".state-pending\", renderWidget).show().siblings().hide();\n        break;\n      case \"EXECUTING\":\n        $(\".state-executing\", renderWidget).show().siblings().hide();\n        break;\n      case \"CLOSED\":\n        $(\".state-closed\", renderWidget).show().siblings().hide();\n        break;}\n\n    self.content.empty().append(renderWidget);\n\n  } });\n\n\n\nbizagi.injector.register(\"bizagi.workportal.widgets.project.plan.state\", [\"workportalFacade\", \"dataService\", bizagi.workportal.widgets.project.plan.state], true);","/*\r\n *   Name: Bizagi Workportal Desktop Project Plan Progress\r\n *   Author: Elkin Fernando Siabato Cruz\r\n */\n\nbizagi.workportal.widgets.widget.extend(\"bizagi.workportal.widgets.project.plan.progress\", {}, {\n\n  /*\r\n                                                                                                  *   Constructor\r\n                                                                                                  */\n  init: function init(workportalFacade, dataService, params) {\n    var self = this;\n\n    // Call base\n    self._super(workportalFacade, dataService, params);\n\n    //Load templates\n    self.loadTemplates({\n      \"plan-progress-main\": bizagi.getTemplate(\"bizagi.workportal.desktop.project.plan.progress\").concat(\"#project-plan-progress\") });\n\n  },\n\n  renderContent: function renderContent() {\n    var self = this;\n    self.content = $(\"<div></div>\");\n    return self.content;\n  },\n\n  postRender: function postRender() {\n    var self = this;\n\n    self.sub(\"LOAD_INFO_SUMMARY_PROGRESS_PLAN\", $.proxy(self.onNotifyLoadInfoSummaryPlan, self));\n  },\n\n  /**\r\n      * Notifies when an event is raised\r\n      */\n\n  onNotifyLoadInfoSummaryPlan: function onNotifyLoadInfoSummaryPlan(event, params) {\n    var self = this;\n    self.params = $.extend(self.params, params.args);\n\n    var $content = self.getContent().empty();\n\n    var valuePercentBarComplete = self.calculateProgress();\n\n    var argsTemplate = {};\n    argsTemplate.progress = valuePercentBarComplete;\n\n    if (argsTemplate.progress < 33) {\n      argsTemplate.colorBar = \"Red\";\n    } else\n    if (argsTemplate.progress < 66) {\n      argsTemplate.colorBar = \"Yellow\";\n    } else\n    {\n      argsTemplate.colorBar = \"Green\";\n    }\n\n    //Update widget\n    var contentTemplate = self.getTemplate(\"plan-progress-main\");\n    contentTemplate.\n    render(argsTemplate).\n    appendTo($content);\n\n    //Begin Adjust status bar next to the number days\n    var $barRemainingDate = $(\".remaining-days .time-remaining\", $content);\n    var widthNumberDays = $(\".remaining-days .days\", $content).width();\n    $barRemainingDate.css(\"padding-left\", (widthNumberDays + 7).toString() + \"px\");\n    //End Adjust status bar next to the number days\n\n\n  },\n\n  calculateProgress: function calculateProgress() {\n    var self = this;\n\n    var completedActivities = 0;\n    var totalActivities = self.params.plan.activities.length;\n    var percentProgress = 0;\n\n    if (totalActivities !== 0) {\n      self.params.plan.activities.forEach(function (activity) {\n        if (activity.workItemState === \"Completed\") {\n          completedActivities++;\n        }\n      });\n      percentProgress = Math.round(completedActivities / totalActivities * 100);\n    }\n    return percentProgress;\n  } });\n\n\nbizagi.injector.register(\"bizagi.workportal.widgets.project.plan.progress\", [\"workportalFacade\", \"dataService\", bizagi.workportal.widgets.project.plan.progress], true);","/*\r\n *   Name: Bizagi Workportal Desktop Project Plan Time\r\n *   Author: Elkin Fernando Siabato Cruz\r\n */\n\nbizagi.workportal.widgets.widget.extend(\"bizagi.workportal.widgets.project.plan.time\", {}, {\n\n  /*\r\n                                                                                              *   Constructor\r\n                                                                                              */\n  init: function init(workportalFacade, dataService, params) {\n    var self = this;\n\n    // Call base\n    self._super(workportalFacade, dataService, params);\n\n    self.PENDING_PLAN = \"PENDING\";\n    self.EXECUTING_PLAN = \"EXECUTING\";\n    self.CLOSED_PLAN = \"CLOSED\";\n\n    //Regional\n    self.datePickerRegional = bizagi.localization.getResource(\"datePickerRegional\");\n\n    //Load templates\n    self.loadTemplates({\n      \"plan-time-main\": bizagi.getTemplate(\"bizagi.workportal.desktop.project.plan.time\").concat(\"#project-plan-time\") });\n\n  },\n\n  renderContent: function renderContent() {\n    var self = this;\n    self.content = $(\"<div></div>\");\n    return self.content;\n  },\n\n  postRender: function postRender() {\n    var self = this;\n\n    self.sub(\"LOAD_INFO_SUMMARY_PLAN\", $.proxy(self.onNotifyLoadInfoSummaryPlan, self));\n  },\n\n  /**\r\n      * Notifies when an event is raised\r\n      */\n\n  onNotifyLoadInfoSummaryPlan: function onNotifyLoadInfoSummaryPlan(event, params) {\n    var self = this;\n    self.params = $.extend(self.params, params.args);\n\n    if (self.params.plan) {\n      if (self.params.plan.dueDate) {\n        if (self.params.plan.currentState === self.PENDING_PLAN || self.params.plan.currentState === self.EXECUTING_PLAN) {\n          self.updateWidget(event, params);\n        } else\n        {\n          self.sub(\"LOADED_ACTIVITIES_PLAN\", $.proxy(self.updateWidget, self));\n        }\n      } else\n      {\n        self.getContent().empty();\n      }\n    }\n\n  },\n\n  /**\r\n      * change the time properties string to timestamp number\r\n      * @param {*} plan \r\n      */\n  planDatesToStamp: function planDatesToStamp(plan) {\n    if (plan.activities)\n    plan.activities.map(function (a) {\n      if (a.estimatedFinishDate) a.estimatedFinishDate = new Date(a.estimatedFinishDate).getTime();\n      if (a.startDate) a.startDate = new Date(a.startDate).getTime();\n      if (a.finishDate) a.finishDate = new Date(a.finishDate).getTime();\n    });\n    if (plan.dueDate) plan.dueDate = new Date(plan.dueDate).getTime();\n    if (plan.creationDate) plan.creationDate = new Date(plan.creationDate).getTime();\n    if (plan.startDate) plan.startDate = new Date(plan.startDate).getTime();\n    if (plan.closedDate) plan.closedDate = new Date(plan.closedDate).getTime();\n    if (plan.finishDate) plan.finishDate = new Date(plan.finishDate).getTime();\n  },\n  updateWidget: function updateWidget(event, params) {\n    var self = this;\n    self.params = $.extend(self.params, params.args);\n    self.planDatesToStamp(self.params.plan);\n    var $content = self.getContent().empty();\n    if (self.params.plan.currentState === self.CLOSED_PLAN) {\n      self.getClosedDatePlan(self.params.plan);\n    }\n    $.when(self.getIntervalOnMinutes(self.params.plan)).done(function (response) {\n      var relativeTime = bizagi.util.dateFormatter.getRelativeTime(new Date(Date.now() - response.minutesToShowTime * 60 * 1000), null, true);\n\n      var messageUnitTimeCalculated = relativeTime.replace(/\\d/g, \"\");\n      var keywordResourceDescriptionDifference = self.getKeywordDifferenceDates(self.params.plan);\n      var messageDescripionDifference = bizagi.localization.getResource(\"workportal-project-plan-state-\" + keywordResourceDescriptionDifference);\n      messageDescripionDifference = messageDescripionDifference.replace(\"%s\", messageUnitTimeCalculated);\n\n      var valueOfTimeCalculated = relativeTime.replace(/\\D/g, \"\");\n\n      var auxToDate = self.getSecondDate(self.params.plan);\n      var auxPercentBar = self.getWidthBar(self.params.plan, response);\n      var auxColorBar = self.getColorBarByPercent(auxPercentBar);\n      var argsTemplate = {\n        fromDate: self.getFormattedDate(new Date(self.getFirstDate(self.params.plan))),\n        toDate: auxToDate ? self.getFormattedDate(new Date(auxToDate)) : null,\n        valueOfTimeCalculated: valueOfTimeCalculated,\n        messageDescripionDifference: messageDescripionDifference,\n        percentBar: auxPercentBar,\n        colorBar: auxColorBar };\n\n\n      var contentTemplate = self.getTemplate(\"plan-time-main\");\n      contentTemplate.\n      render(argsTemplate).\n      appendTo($content);\n\n    });\n  },\n  getFirstDate: function getFirstDate(plan) {\n    var self = this;\n    switch (plan.currentState) {\n      case self.PENDING_PLAN:\n        if (plan.dueDate) {\n          return plan.dueDate;\n        } else\n        {\n          return plan.creationDate;\n        }\n        break;\n      case self.EXECUTING_PLAN:\n      case self.CLOSED_PLAN:\n        return plan.startDate;}\n\n  },\n  getSecondDate: function getSecondDate(plan) {\n    var self = this;\n    switch (plan.currentState) {\n      case self.PENDING_PLAN:\n        return null;\n      case self.EXECUTING_PLAN:\n        return plan.dueDate;\n      case self.CLOSED_PLAN:\n        return plan.closedDate;}\n\n  },\n  getLastActivity: function getLastActivity(activities) {\n    var copyActivities = JSON.parse(JSON.stringify(activities));\n    return copyActivities.sort(function (activityA, activityB) {\n      return activityA.finishDate < activityB.finishDate ? 1 : -1;\n    })[0];\n  },\n\n  getClosedDatePlan: function getClosedDatePlan(plan) {\n    var self = this;\n    plan.closedDate = self.getLastActivity(plan.activities).finishDate;\n    return plan.closedDate;\n  },\n\n  getDifferenceBetweenDates: function getDifferenceBetweenDates(firstDate, secondDate) {\n    var self = this;\n    var defer = $.Deferred();\n    var params = {\n      idUser: bizagi.currentUser.idUser,\n      fromDate: firstDate,\n      toDate: secondDate };\n\n\n    $.when(self.callGetEffectiveDuration(params)).done(function (difference) {\n      defer.resolve(difference.minutes);\n    });\n    return defer.promise();\n  },\n\n  getIntervalOnMinutes: function getIntervalOnMinutes(plan) {\n    var self = this;\n    var defer = $.Deferred();\n    switch (plan.currentState) {\n      case self.PENDING_PLAN:\n        if (plan.dueDate > Date.now()) {\n          $.when(self.getDifferenceBetweenDates(Date.now(), plan.dueDate)).done(function (minutesNowToDueDate) {\n            $.when(self.getDifferenceBetweenDates(plan.creationDate, Date.now())).done(function (minutesCreateToNow) {\n              defer.resolve({ minutesToShowTime: minutesNowToDueDate, minutesCreateToNow: minutesCreateToNow });\n            });\n          });\n        } else\n        if (plan.dueDate < plan.creationDate) {\n          $.when(self.getDifferenceBetweenDates(plan.dueDate, plan.creationDate)).done(function (minutesDueDateToCreate) {\n            $.when(self.getDifferenceBetweenDates(plan.creationDate, Date.now())).done(function (minutesCreateToNow) {\n              defer.resolve({ minutesToShowTime: minutesDueDateToCreate + minutesCreateToNow, minutesCreateToNow: minutesCreateToNow });\n            });\n          });\n        } else\n        if (plan.dueDate > plan.creationDate) {\n          $.when(self.getDifferenceBetweenDates(plan.creationDate, plan.dueDate)).done(function (minutesCreateToDueDate) {\n            $.when(self.getDifferenceBetweenDates(plan.dueDate, Date.now())).done(function (minutesCreateToNow) {\n              defer.resolve({ minutesToShowTime: minutesCreateToDueDate + minutesCreateToNow, minutesCreateToNow: minutesCreateToNow });\n            });\n          });\n        }\n        break;\n      case self.EXECUTING_PLAN:\n        if (plan.dueDate) {\n          if (plan.dueDate > Date.now()) {\n            $.when(self.getDifferenceBetweenDates(Date.now(), plan.dueDate)).done(function (minutesNowToDueDate) {\n              $.when(self.getDifferenceBetweenDates(plan.startDate, Date.now())).done(function (minutesStartToNow) {\n                defer.resolve({ minutesToShowTime: minutesNowToDueDate, minutesStartToNow: minutesStartToNow });\n              });\n            });\n          } else\n          {\n            $.when(self.getDifferenceBetweenDates(plan.dueDate, Date.now())).done(function (minutesDueDateToNow) {\n              $.when(self.getDifferenceBetweenDates(plan.startDate, plan.dueDate)).done(function (minutesStartToDueDate) {\n                defer.resolve({ minutesToShowTime: minutesDueDateToNow, minutesStartToDueDate: minutesStartToDueDate });\n              });\n            });\n          }\n\n        } else\n        {\n          $.when(self.getDifferenceBetweenDates(plan.startDate, Date.now())).done(function (minutes) {\n            defer.resolve({ minutesToShowTime: minutes });\n          });\n        }\n        break;\n      case self.CLOSED_PLAN:\n        $.when(self.getDifferenceBetweenDates(plan.startDate, plan.closedDate)).done(function (minutes) {\n          defer.resolve({ minutesToShowTime: minutes });\n        });}\n\n\n    return defer.promise();\n  },\n\n  getKeywordDifferenceDates: function getKeywordDifferenceDates(plan) {\n    var self = this;\n    switch (plan.currentState) {\n      case self.PENDING_PLAN:\n        if (plan.dueDate > Date.now()) {\n          return \"remaining\";\n        } else\n        {\n          return \"exceeded\";\n        }\n        break;\n      case self.EXECUTING_PLAN:\n        if (plan.dueDate) {\n          if (plan.dueDate > Date.now()) {\n            return \"remaining\";\n          } else\n          {\n            return \"exceeded\";\n          }\n\n        } else\n        {\n          return \"opened\";\n        }\n        break;\n      case self.CLOSED_PLAN:\n        return \"executed\";}\n\n  },\n\n  getRelativeTime: function getRelativeTime(milliseconds) {\n    return bizagi.util.dateFormatter.getRelativeTime(milliseconds, null, false);\n  },\n\n  getWidthBar: function getWidthBar(plan, intervalMinutes) {\n    var self = this,\n    differenceStartDateToCurrentDate = {};\n    switch (plan.currentState) {\n      case self.PENDING_PLAN:\n        if (plan.dueDate) {\n          if (plan.dueDate < Date.now()) {\n            return 0;\n          } else\n          {\n            var totalInterval = intervalMinutes.minutesCreateToNow + intervalMinutes.minutesToShowTime;\n            valuePercentInterval = intervalMinutes.minutesToShowTime;\n            return Math.ceil(valuePercentInterval * 100 / totalInterval);\n          }\n        } else\n        {\n          return 0;\n        }\n        break;\n      case self.EXECUTING_PLAN:\n        if (plan.dueDate) {\n          if (plan.dueDate > Date.now()) {\n            var totalInterval = intervalMinutes.minutesStartToNow + intervalMinutes.minutesToShowTime;\n            valuePercentInterval = intervalMinutes.minutesToShowTime;\n            return Math.ceil(valuePercentInterval * 100 / totalInterval);\n          } else\n          {\n            return 0;\n          }\n        } else\n        {\n          return 0;\n        }\n        break;\n      case self.CLOSED_PLAN:\n        if (plan.closedDate > Date.now()) {\n          var differenceStartDateToClosedDate = plan.closedDate - plan.startDate;\n          differenceStartDateToCurrentDate = Date.now() - plan.startDate;\n          return Math.ceil(differenceStartDateToCurrentDate * 100 / differenceStartDateToClosedDate);\n        } else\n        {\n          return 100;\n        }}\n\n\n\n  },\n\n  getColorBarByPercent: function getColorBarByPercent(percent) {\n    if (percent < 33) {\n      return \"Red\";\n    } else\n    if (percent < 66) {\n      return \"Yellow\";\n    } else\n    {\n      return \"Green\";\n    }\n  },\n\n  /**\r\n      * Call services\r\n      */\n\n  callGetEffectiveDuration: function callGetEffectiveDuration(params) {\n    var self = this;\n    var d = $.Deferred();\n\n    $.when(\n    self.dataService.getEffectiveDuration(params)).\n    done(function (data) {\n      d.resolve(data);\n    });\n    return d.promise();\n  },\n\n  getFormattedDate: function getFormattedDate(dateObj) {\n    var self = this;\n    var monthsNames = self.datePickerRegional.monthNames;\n    var shortMonth = dateObj.getMonth();\n    return monthsNames[shortMonth] + \" \" + bizagi.util.dateFormatter.formatDate(dateObj, \"dd hh:mm tt\", bizagi.localization.getResource(\"datePickerRegional\"));\n  } });\n\n\nbizagi.injector.register(\"bizagi.workportal.widgets.project.plan.time\", [\"workportalFacade\", \"dataService\", bizagi.workportal.widgets.project.plan.time], true);","/*\r\n *   Name: Bizagi Workportal Desktop Project Plan Parent\r\n *   Author: Elkin Fernando Siabato Cruz\r\n */\n\nbizagi.workportal.widgets.widget.extend(\"bizagi.workportal.widgets.project.plan.parent\", {}, {\n\n  /*\r\n                                                                                                *   Constructor\r\n                                                                                                */\n  init: function init(workportalFacade, dataService, params) {\n    var self = this;\n\n    // Call base\n    self._super(workportalFacade, dataService, params);\n\n    //Load templates\n    self.loadTemplates({\n      \"plan-parent-main\": bizagi.getTemplate(\"bizagi.workportal.desktop.project.plan.parent\").concat(\"#project-plan-parent\") });\n\n  },\n\n  renderContent: function renderContent() {\n\n    var self = this;\n    self.content = $(\"<div></div>\");\n    return self.content;\n  },\n\n  postRender: function postRender() {\n    var self = this;\n    self.sub(\"LOAD_INFO_SUMMARY_PLAN\", $.proxy(self.onNotifyLoadInfoSummaryPlan, self));\n  },\n\n  /**\r\n      * Notifies when an event is raised\r\n      */\n  onNotifyLoadInfoSummaryPlan: function onNotifyLoadInfoSummaryPlan(event, params) {\n    var self = this,\n    $content = self.getContent().empty();\n    self.params = $.extend(self.params, params.args);\n    if (self.params.plan.parentWorkItem) {\n      $.when(self.dataService.getPlanParent({ idPlan: self.params.plan.id })).done(function (planParent) {\n        self.params.plan.parent = planParent;\n\n        if (self.params.plan.parent) {\n          var argsTemplate = {\n            idParent: self.params.plan.parent.radNumber,\n            nameParent: self.params.plan.parent.displayName,\n            idCase: self.params.plan.parent.idCase,\n            idWorkflow: self.params.plan.parent.idWorkflow,\n            idWorkItem: self.params.plan.parent.idWorkItem,\n            idTask: self.params.plan.parent.idTask,\n            processName: self.params.process ? self.params.process : self.params.plan.parent.planName };\n\n\n          if (bizagi.util.isEmpty(self.params.plan.parent.guidActivity)) {\n            self.goToParentCase($content, argsTemplate);\n          } else {\n            var paramsDetailActivity = {\n              idPlan: self.params.plan.id,\n              idActivity: self.params.plan.parent.guidActivity };\n\n            $.when(self.dataService.getActivity(paramsDetailActivity)).done(function (response) {\n              self.params.plan.parent.allowEdition = response.allowEdition;\n              self.goToParentCase($content, argsTemplate);\n            });\n          }\n\n        }\n\n      }).fail(function (msg) {\n\n      });\n    }\n  },\n  goToParentCase: function goToParentCase(content, argsTemplate) {\n    var self = this;\n    //TODO: double call because routing dont release memory and widgets\n    //Test with a breakpoint\n    content.empty();\n\n    //Update widget\n    var contentTemplate = self.getTemplate(\"plan-parent-main\");\n    contentTemplate.\n    render(argsTemplate).\n    appendTo(content);\n    $(\"#go-to-parent-case\", content).on(\"click\", $.proxy(self.onClickGoToParentCase, self));\n  },\n  onClickGoToParentCase: function onClickGoToParentCase(event) {\n    event.preventDefault();\n    var self = this;\n    self.routingExecute($(event.target).closest(\"#go-to-parent-case\"));\n  } });\n\n\nbizagi.injector.register(\"bizagi.workportal.widgets.project.plan.parent\", [\"workportalFacade\", \"dataService\", bizagi.workportal.widgets.project.plan.parent], true);","/*\r\n *   Name: Bizagi Workportal Desktop Project Plan Users\r\n *   Author: Elkin Fernando Siabato Cruz\r\n */\n\nbizagi.workportal.widgets.widget.extend(\"bizagi.workportal.widgets.project.plan.users\", {}, {\n\n  /*\r\n                                                                                               *   Constructor\r\n                                                                                               */\n  init: function init(workportalFacade, dataService, params) {\n    var self = this;\n    self.usersMap = {};\n    self.plugins = {};\n    self.usersInformation = [];\n    self.globalHandlersService = bizagi.injector.get('globalHandlersService');\n    self.usersAssignees = [];\n    // Call base\n    self._super(workportalFacade, dataService, params);\n\n    //Load templates\n    self.loadTemplates({\n      \"plan-users-main\": bizagi.getTemplate(\"bizagi.workportal.desktop.project.plan.users\").concat(\"#project-plan-users\") });\n\n\n    self.auxNoRepeatTypesUser = {};\n    self.hashTypesUser = {\n      \"assigned\": bizagi.localization.getResource(\"workportal-project-user-assigned\"),\n      \"owner\": bizagi.localization.getResource(\"workportal-project-user-owner\") };\n\n  },\n\n  renderContent: function renderContent() {\n\n    var self = this;\n    self.content = $(\"<div></div>\");\n    return self.content;\n  },\n\n  postRender: function postRender() {\n    var self = this;\n    self.sub(\"LOAD_INFO_ACTIVITIES_PLAN\", $.proxy(self.onNotifyLoadInfoSummaryPlan, self));\n  },\n\n  /**\r\n      * Notifies when an event is raised\r\n      */\n  onNotifyLoadInfoSummaryPlan: function onNotifyLoadInfoSummaryPlan(event, params) {\n    var self = this,\n    args = params.args,\n    cvsGuidUsers = [],\n    activitiesUsers = [],\n    $content = self.getContent().empty();\n    var ownerUserGuid = params.args.plan.idUserCreator;\n    var ownerUserId = params.args.plan.idUserCreator;\n    self.params = $.extend(self.params, params.args);\n\n    activitiesUsers.push({ \"idUser\": ownerUserId, 'userGuid': ownerUserGuid, \"userType\": [\"owner\"] });\n    self.usersMap[\"-\" + ownerUserId + \"-\"] = {\n      picture: \"\",\n      id: ownerUserId,\n      guid: ownerUserGuid,\n      name: \"\",\n      userType: [\"owner\"] };\n\n    cvsGuidUsers.push(ownerUserId);\n    $.each(self.params.plan.activities, function (index, activity) {\n      var userId = activity.userAssigned;\n      var userGuid = activity.userAssignedGuid;\n      if (activity.isRunning == true) {\n        if (userId === ownerUserId) {\n          if ($.inArray(\"Assigned\", activitiesUsers[0].userType) === -1) {\n            activitiesUsers[0].userType.push(\"Assigned\");\n            self.usersMap[\"-\" + ownerUserId + \"-\"].userType.push(\"Assigned\");\n          }\n        } else\n        {\n          self.usersMap[\"-\" + userId + \"-\"] = {\n            picture: \"\",\n            id: userId,\n            guid: userGuid,\n            name: \"\",\n            userType: [\"Assigned\"] };\n\n          if (activitiesUsers.filter(function (user) {return user.idUser == userId;}).length === 0) {\n            activitiesUsers.push({ \"idUser\": userId, \"guidUser\": userGuid, \"userType\": [\"Assigned\"] });\n            cvsGuidUsers.push(userId);\n          }\n        }\n      }\n    });\n    self.activitiesUsers = activitiesUsers;\n    self.params = args;\n    //Update widget\n    var contentTemplate = self.getTemplate(\"plan-users-main\");\n    contentTemplate.\n    render({\n      assignee: self.justAssignees(activitiesUsers),\n      label: bizagi.localization.getResource(\"workportal-project-plan-assignee\") }).\n\n    appendTo($content);\n    self.initilizeTooltip();\n    self.addEventHandlersModal();\n    $.when(self.callGetDataUsers(cvsGuidUsers)).then(function () {\n      self.showCreatorInformation(ownerUserId);\n      self.renderUserProfilesAndImages();\n    });\n  },\n\n  /**\r\n      * return standar userAdapter information with only assigned users when the plan has started\r\n      * @param {Array} allUsers \r\n      */\n  justAssignees: function justAssignees(allUsers) {\n    var self = this;\n    var usersAssignee = [];\n    if ([\"CLOSED\", \"PENDING\"].indexOf(self.params.plan.currentState) == -1) {\n      allUsers.map(function (user) {\n        var isOwner = user.userType.indexOf(\"owner\") !== -1;\n        var isAssignee = user.userType.indexOf(\"Assigned\") !== -1;\n        usersAssignee.push(usersAdapter.createJsonUserInfo(user.idUser, \"\", \"\", \"\", \"\", \"\", isAssignee, isOwner, [], []));\n      });\n    }\n    return usersAdapter.justAssignees(usersAssignee);\n  },\n\n  /**\r\n      * show the information of the creator case\r\n      * @param {string} ownerUserId guid user creator\r\n      */\n  showCreatorInformation: function showCreatorInformation(ownerUserId) {\n    var self = this;\n    var userCreator = self.usersInformation.find(function (user) {\n      return user.id == ownerUserId;\n    });\n    var userInfo = usersAdapter.createJsonUserInfo(\n    userCreator.id,\n    userCreator.name,\n    userCreator.username,\n    userCreator.picture ? \"data:image/png;base64,\" + userCreator.picture : undefined,\n    userCreator.email,\n    userCreator.name.getInitials(),\n    false,\n    true,\n    [],\n    []);\n\n    self.content.find(\".ui-bizagi-wp-project-plan-users .ui-bizagi-wp-project-users-creator-info\").userinformation(self, { user: userInfo });\n  },\n\n  /**\r\n      * UI\r\n      */\n  renderUserProfilesAndImages: function renderUserProfilesAndImages() {\n    var self = this;\n    $.each(self.usersMap, function (i, obj) {\n      var $li = $(\".ui-bizagi-wp-userlist li[data-iduser=\" + obj.id + \"]\", self.content);\n\n      if (obj.picture !== \"\") {\n        $li.find(\"img\").prop(\"src\", obj.picture);\n        $(\".bz-wp-avatar-label\", $li).hide();\n      } else\n      {\n        if (obj.name !== undefined) {\n          $(\".bz-wp-avatar-img\", $li).hide();\n          $(\".bz-wp-avatar-label\", $li).html(obj.name.getInitials());\n        } else\n        {\n          console.log(\"obj.name is undefined\");\n        }\n\n      }\n    });\n  },\n\n  /*\r\n      *  Get data for users\r\n      */\n  callGetDataUsers: function callGetDataUsers(csvguidUsers) {\n    var self = this,\n    params = {},\n    defer = $.Deferred();\n    params = {\n      usersGuids: csvguidUsers.join(),\n      width: 50,\n      height: 50 };\n\n    $.when(self.dataService.getUsersData(params)).always(function (response) {\n      self.usersInformation = response;\n      for (var i = 0, length = response.length; i < length; i += 1) {\n        if (typeof response[i].name === \"undefined\") {\n          bizagi.log(response[i] + \" Id Not Found\", response, \"error\");\n        } else {\n          if (self.usersMap[\"-\" + response[i].id + \"-\"]) {\n            self.usersMap[\"-\" + response[i].id + \"-\"].picture += response[i].picture ? \"data:image/png;base64,\" + response[i].picture : \"\";\n            self.usersMap[\"-\" + response[i].id + \"-\"].name = response[i].name || \"\";\n          } else\n          {\n            console.log(\"self.usersMap['-' + response[i].id + '-'] is undefined\");\n          }\n\n        }\n      }\n      self.getUsersAssignees();\n      defer.resolve();\n    });\n    return defer.promise();\n  },\n\n  /*\r\n     * validate if the activity is running\r\n     */\n  activityRunning: function activityRunning(activity) {\n    return activity.startDate !== null && activity.finishDate === null;\n  },\n\n  getUsersAssignees: function getUsersAssignees() {\n    var self = this;\n    for (var i = 0; i < self.usersInformation.length; i++) {\n      var res_user = self.getUserAssignee(self.params.plan.activities, self.usersInformation[i]);\n      if (res_user !== false) {\n        self.usersAssignees.push(res_user);\n      }\n    }\n\n  },\n\n  /**\r\n      * review if the user is assigned to some active activities and return this user, else return false\r\n      * @param {Array} activities all activities of this plan\r\n      * @param {User} user to review\r\n      */\n  getUserAssignee: function getUserAssignee(activities, user) {\n    var self = this;\n    var tasks = activities.filter(function (activity) {\n      return activity.userAssigned === user.id && self.activityRunning(activity);\n    }).map(function (a) {\n      return { \"name\": a.name };\n    });\n    if (tasks.length == 0) return false;\n    user.tasks = tasks;\n    var types = self.activitiesUsers.find(function (actUser) {\n      return actUser.idUser == user.id;\n    });\n    user.types = types === undefined ? [] : types.userType;\n\n    var userAssignees = usersAdapter.createJsonUserInfo(\n    user.id,\n    user.name,\n    user.username,\n    user.picture ? \"data:image/png;base64,\" + user.picture : undefined,\n    user.email,\n    user.name.getInitials(),\n    user.types.indexOf(\"Assigned\") > -1,\n    user.types.indexOf(\"owner\") > -1,\n    user.tasks,\n    []);\n\n    return userAssignees;\n  },\n\n  /*\r\n      *  Tooltips\r\n      */\n  initilizeTooltip: function initilizeTooltip() {\n    var self = this;\n\n    $(\".ui-bizagi-wp-userlist > li\", self.content).not(\".moreUsers\").on('mouseenter', '', function (ev) {\n      var $target = $(ev.target);\n      var id_userSelected = $target.closest(\"[data-iduser]\").attr('data-iduser');\n      var user = self.usersInformation.find(function (user) {\n        return user.id == id_userSelected;\n      });\n      var activities = [];\n\n      if (user.tasks)\n      user.tasks.map(function (task) {\n        activities.push(task.name);\n      });\n\n      var types = self.activitiesUsers.find(function (actUser) {\n        return actUser.idUser == id_userSelected;\n      });\n      user.types = types.userType;\n\n      user.owner = user.types.find(function (type) {\n        return type == \"owner\";\n      });\n      user.isAssignee = user.types.find(function (type) {\n        return type == \"Assigned\";\n      });\n\n      var userParam = usersAdapter.createJsonUserInfo(user.id, user.name, user.username, user.picture ? \"data:image/png;base64,\" + user.picture : undefined, user.email, user.name.getInitials(), user.isAssignee, user.owner, activities, []);\n      $target.parent().usertooltip(self, { target: $target, user: userParam });\n    });\n  },\n  addEventHandlersModal: function addEventHandlersModal() {\n    var self = this;\n    $(\".moreUsers\").click(function (event) {\n      event.preventDefault();\n      event.stopPropagation();\n      var usersAssignees = self.usersAssignees || [];\n      self.globalHandlersService.publish(\"showDialogWidget\", {\n        widgetName: bizagi.workportal.widgets.widget.BIZAGI_WORKPORTAL_WIDGET_USERS_MODAL,\n        closeVisible: true,\n        data: usersAssignees,\n        maximize: true,\n        modalParameters: {\n          title: bizagi.localization.getResource(\"workportal-project-users-title\") + \" (\" + usersAssignees.length + \")\",\n          width: 790,\n          height: 526,\n          refreshInbox: false } });\n\n\n    });\n  } });\n\n\n\n\nbizagi.injector.register(\"bizagi.workportal.widgets.project.plan.users\", [\"workportalFacade\", \"dataService\", bizagi.workportal.widgets.project.plan.users], true);"]}