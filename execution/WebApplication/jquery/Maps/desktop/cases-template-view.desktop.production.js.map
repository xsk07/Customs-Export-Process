{"version":3,"sources":["jquery/workportal/desktop/widget/casesTemplate/bizagi.workportal.desktop.widgets.casestemplate.js","jquery/workportal/desktop/widget/filtercases/bizagi.workportal.desktop.widgets.filtercases.js","jquery/workportal/desktop/widget/paginator/bizagi.workportal.desktop.widgets.paginator.js","jquery/workportal/desktop/widget/sortbar/bizagi.workportal.desktop.widgets.sortbar.js","jquery/workportal/desktop/widget/processeslist/bizagi.workportal.desktop.widgets.processeslist.js"],"names":["bizagi","workportal","widgets","widget","extend","init","workportalFacade","dataService","actionService","casetoolbar","usersCasesService","actionsEventsService","accumulatedcontext","params","this","_super","loadTemplates","casestemplate-container","getTemplate","concat","casestemplate-item","casestemplate-empty-data","selectorCheckboxItems","hasBatchActions","sequenceCall","renderContent","templateContainer","content","render","postRender","self","$content","getContent","sub","$","proxy","updateCases","getCommonActions","ev","setValues","subscribe","onFormActionExecuted","onFormRuleExecuted","find","on","onCaseChecked","clean","checkAll","unsubscribe","unsub","off","data","sequence","args","defer","Deferred","$dataViewList","empty","casesSelected","page","idworkflow","undefined","route","filter","pageSize","when","getCasesData","pipe","casesData","resolve","pub","type","event","getCasesTemplates","done","templates","templateString","casesLength","length","getEmptyDataMessage","$templateCase","$elementsTmpl","i","l","renderCase","push","apply","append","commonActions","value","promise","caseData","isRefresh","actionData","idCase","surrogateKey","guidEntity","templateCase","security","command","tmpl","checkSecurityPerm","graphicQuery","casetoolbarData","setTimeout","$casetoolbar","getCaseToolbar","referrer","$case","$footer","startLoading","delay","overlay","getActionsView","loadEvents","responseActions","$actionsView","actionsView","actionsData","batchActions","getCheckBox","showCheckItem","removeCheckItem","endLoading","getAssignees","$assignees","$item","closest","remove","show","refresh","refreshCase","idBox","$templateBox","isChecked","is","then","caseTemplate","replaceWith","prop","getActivitiesData","getPendingsData","taskState","result","getTemplateEngine","engine","map","entities","cases","casesTemplates","makeArray","arguments","idCases","guidFavorite","idcase","idWorkflow","radNumber","guid","templateEngine","proxyPrefix","RPproxyPrefix","renderDataService","services","service","renderFactory","rendering","desktop","factory","initAsyncStuff","cache","forcePersonalizedColumns","reference","referenceType","fromActionLauncher","histName","displayName","guidEntityCurrent","xpath","pubDeadLockDetection","outerHTML","$target","target","model","actions","surrogateKeys","parentsid","itemsSelected","$inputs","input","guidentity","injector","register","casestemplate","lastIdworkflow","filtercases","template","$contentWidget","onClickButtonFilter","updateUI","currentTarget","hasClass","attr","addClass","siblings","removeClass","resourceLocalization","toLowerCase","localization","getResource","refreshLastItemBreadcrumb","hide","paginator","getSuffixWidget","updateView","configureHandlers","renderTemplate","totalRecords","totalPages","currentPage","appendTo","setModel","action","guidSearch","getModel","stopNavigation","onPageBreak","disabledPaginatorButtonsByLimits","text","$buttonFastRewind","$buttonRewind","$buttonFordward","$buttonFastFordward","calculateNewPage","newItemsPerPage","previousItemsPerPage","previousPage","currentFirstItem","newPage","Math","ceil","processActionService","sortbar","right-content","addButton","sortMenu","recordsPerPage","recordsMenu","enableFilter","$checkAll","setVisibleSortbar","configureAfterPaintHandlers","initializeAndProcessFilterButton","setFiltersSortData","hideFilterButtonAndBar","hideSortButtons","enableBatchActions","updateCounterByFilterApplied","showingFiltering","setVisibleCheckAll","validActions","tooltip","onCheckUncheck","showSortMenu","showRecordsMenu","sortSelection","attribute","setIconSortType","_sortType","properties","orderType","typeSearch","onRemoveSelectedItemsCollections","visible","showingCheckAll","showSelectedItems","numberCheckedItems","keywordSelected","button","sortTypeBeforeChanged","onClickBatchAction","$buttonLI","guidAction","getAction","requestsInProgressActionGuid","addLoadingButtonAction","executeBatchAction","commonActionsmodel","always","quitLoadingButtonAction","$button","prepend","$parent","filters","_filters","displayValue","val","click","e","stopPropagation","document","one","index","display","split","pop","oldPageSize","Number","util","trim","textContent","get","actualPage","restoreOrderSelected","processAddButton","$buttonContainer","_lastReferenceEntity","children","_haveAddButton","getProcessAddAction","referenceEntity","Object","getOwnPropertyNames","id","renderButton","$addButton","clickAddButton","getMapping","accumulatedContext","getContext","xpathContext","collectionId","collectionType","mappingData","onExecuteProcess","onExecuteForm","commonActionsModel","showBatchActions","typeActions","keys","moreActions","slice","$actions","tooltipClass","items","html","open","ui","uiTooltip","originalEvent","$id","keyActionGuid","not","$buttonAction","focus","close","hover","stop","fadeTo","fadeOut","filtersAppliedCounter","calculateFilters","a","filterCounter","sortCounter","defaultValues","min","max","showFilterButton","hideFilterButton","showSortButtons","updateCounter","showingSorting","$sortbarIcon","filtersApplied","counter","$counter","showingFilter","startForm","hasStartForm","executeProcessAction","refreshTemplateData","loadTemplateData","executeFormAction","grep","multiplicity","mode","isEvent","processeslist","processeslistEmptyData","getData","processes","setSelectedList","getIdworkflow","getHistname","onClickProcess","$args","$route","myPendings","myActivities","onlyFavorites","followingOrMyPending","getAllProcesses","getInfoToProcessesList","allProcesses","categories","j","k","workflows","process","name","clone","level","item"],"mappings":"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","sourcesContent":["bizagi.workportal.widgets.widget.extend(\"bizagi.workportal.widgets.casestemplate\", {}, {\n  /**\r\n                                                                                          * Constructor\r\n                                                                                          */\n  init: function init(workportalFacade, dataService, actionService, casetoolbar, usersCasesService, actionsEventsService, accumulatedcontext, params) {\n    var self = this;\n\n    // Call base\n    self._super(workportalFacade, dataService, params);\n\n    //Load templates\n    self.loadTemplates({\n      \"casestemplate-container\": bizagi.getTemplate(\"bizagi.workportal.desktop.widget.casestemplate\").concat(\"#casestemplate-wrapper\"),\n      \"casestemplate-item\": bizagi.getTemplate(\"bizagi.workportal.desktop.widget.casestemplate\").concat(\"#casestemplate-item\"),\n      \"casestemplate-empty-data\": bizagi.getTemplate(\"bizagi.workportal.desktop.widget.casestemplate\").concat(\"#casestemplate-empty-message\") });\n\n\n    self.selectorCheckboxItems = \".casetemplate-box-check-selector input:checkbox\";\n    self.actionService = actionService;\n    self.casetoolbar = casetoolbar;\n    self.usersCasesService = usersCasesService;\n    self.actionsEventsService = actionsEventsService;\n    self.hasBatchActions = false;\n\n    self.sequenceCall = 0;\n    self.accumulatedcontext = accumulatedcontext;\n  },\n\n  /**\r\n      * Renders the template defined in the widget\r\n      */\n  renderContent: function renderContent() {\n    var self = this,\n    templateContainer = self.getTemplate(\"casestemplate-container\");\n\n    self.content = templateContainer.render({});\n    return self.content;\n  },\n\n  /**\r\n      * links events with handlers\r\n      */\n  postRender: function postRender() {\n    var self = this,\n    $content = self.getContent();\n\n    self.sub(\"CASES-TEMPLATE-VIEW\", $.proxy(self.updateCases, self));\n    self.sub(\"UPDATE-DATATEMPLATE-VIEW\", $.proxy(self.updateCases, self));\n    self.sub(\"GET-COMMON-ACTIONS\", $.proxy(self.getCommonActions, self));\n    self.sub(\"SET-RECORDS\", $.proxy(self.updateCases, self));\n    self.sub(\"SET-VALUES\", function (ev, params) {return self.setValues(params);});\n    self.actionService.subscribe(\"onFormActionExecuted\", $.proxy(self.onFormActionExecuted, self));\n    self.actionService.subscribe(\"onFormRuleExecuted\", $.proxy(self.onFormRuleExecuted, self));\n    $content.find(\"#casestemplate-dataviewer-list\").on(\"click\", self.selectorCheckboxItems, $.proxy(self.onCaseChecked, self));\n  },\n\n  /**\r\n      * Detach events\r\n      */\n  clean: function clean() {\n    var self = this,\n    $content = self.getContent();\n\n    self.checkAll = false;\n    self.sequenceCall = 0;\n\n    if ($content) {\n      self.actionService.unsubscribe(\"onFormActionExecuted\");\n      self.actionService.unsubscribe(\"onFormRuleExecuted\");\n      self.unsub(\"CASES-TEMPLATE-VIEW\");\n      self.unsub(\"UPDATE-DATATEMPLATE-VIEW\");\n      self.unsub(\"GET-COMMON-ACTIONS\");\n      self.sub(\"SET-VALUES\");\n      $content.find(\"#casestemplate-dataviewer-list\").off(\"click\", self.selectorCheckboxItems);\n    }\n  },\n\n\n\n  /**\r\n      * Updates the cases list\r\n      */\n  updateCases: function updateCases(ev, data) {\n    var self = this,\n    args = data.args,\n    defer = new $.Deferred(),\n    $dataViewList = $(\"#casestemplate-dataviewer-list\", self.getContent());\n\n    $dataViewList.empty();\n    self.actionService.init();\n    self.casesSelected = {};\n    self.sequenceCall++;\n\n    self.page = args.page || self.page;\n    self.idworkflow = args.idworkflow == undefined ? self.idworkflow : args.idworkflow;\n    self.route = args.route || self.route;\n    self.filter = args.filter || self.filter;\n    self.pageSize = args.pageSize || self.pageSize;\n\n    (function (sequence) {\n      $.when(self.getCasesData({ page: self.page, idworkflow: self.idworkflow, pageSize: self.pageSize })).\n      pipe(function (casesData) {\n        if (self.sequenceCall !== sequence) {\n          defer.resolve();\n          return null;\n        }\n        self.pub(\"notify\", { type: \"PAGINATOR-UPDATE\", args: $.extend(args, casesData, { event: data.type }) });\n        return self.getCasesTemplates(casesData);\n      }).\n      done(function (templates) {\n        if (templates !== null) {\n          var casesLength = self.casesLength = templates.length,\n          templateString = casesLength > 0 ? \"\" : self.getEmptyDataMessage(),\n          $templateCase = null,\n          $elementsTmpl = $();\n\n          self.hasBatchActions = false;\n          for (var i = 0, l = templates.length; i < l; i++) {\n            if (self.sequenceCall !== sequence) {\n              defer.resolve();\n              return;\n            }\n            $templateCase = self.renderCase(templates[i], false, sequence);\n            $elementsTmpl.push.apply($elementsTmpl, $templateCase);\n          }\n          if (!self.hasBatchActions) {\n            self.pub(\"notify\", {\n              type: \"HIDE-CHECK-ALL\",\n              args: {} });\n\n          }\n\n          if ($elementsTmpl.length > 0) {\n            $dataViewList.append($elementsTmpl);\n          } else\n          {\n            $dataViewList.append(templateString);\n          }\n\n          self.checkAll = false;\n\n          self.pub(\"notify\", { type: \"ENABLE-BATCHS-ACTIONS\", args: { commonActions: self.setValues({ args: { value: self.checkAll } }) } });\n          defer.resolve(templates);\n        }\n\n      });\n    })(self.sequenceCall);\n\n    return defer.promise();\n  },\n\n  /**\r\n      * Renders the case with the decorators related\r\n      * actions events and images\r\n      */\n  renderCase: function renderCase(caseData, isRefresh, sequence) {\n    var self = this,\n    actionData = caseData.actionData,\n    idCase = actionData.idCase,\n    surrogateKey = actionData.surrogateKey,\n    guidEntity = actionData.guidEntity,\n    templateCase = self.getTemplate(\"casestemplate-item\"),\n    security = new bizagi.workportal.command.security(self.dataService);\n    var $templateCase = templateCase.render({\n      idCase: idCase,\n      guidEntity: guidEntity,\n      surrogateKey: surrogateKey });\n\n\n    $templateCase.find(\"#template\").append(caseData.tmpl);\n\n    $.when(security.checkSecurityPerm(\"GraphicQuery\")).done(function (graphicQuery) {\n      caseData.casetoolbarData[\"graphicQuery\"] = graphicQuery;\n      // Set header\n      setTimeout(function () {\n        var $casetoolbar = self.casetoolbar.getCaseToolbar({ casetoolbarData: $.extend(caseData.casetoolbarData, { referrer: \"CasesTemplate\" }) });\n        var $case = self.getContent().find(\"#casetemplate-box-wrapper-\" + idCase + \" .casetemplate-box-element\");\n\n        if (sequence === self.sequenceCall) {\n          $case.append($casetoolbar);\n        }\n      }, 0);\n    });\n\n    // Get Actions and events\n    setTimeout(function () {\n      var $footer = self.getContent().find(\"#casetemplate-box-wrapper-\" + idCase + \" .casetemplate-box-footer\");\n\n      $footer.startLoading({ delay: 0, overlay: true });\n      $.when(self.actionService.getActionsView({\n        actionData: caseData.actionData,\n        loadEvents: true,\n        isRefresh: isRefresh })).\n\n      done(function (responseActions) {\n        var $actionsView = responseActions.actionsView;\n        var actionsData = responseActions.actionsData;\n\n        // Get the batch actions in the actionsData array\n        var batchActions = actionsData.length === 0 ? [] : self.pub(\"notify\", {\n          type: \"BATCH-ACTIONS\",\n          args: { actionsData: actionsData } })[\n        0];\n        var $case = self.getContent().\n        find(\"#casetemplate-box-wrapper-\" + idCase + \" .casetemplate-box-element .casetemplate-box-footer\");\n        if ($actionsView && sequence === self.sequenceCall) {\n          $case.append($actionsView);\n\n          // Show cases checboxes and check all checkbox if there are batch actions\n          if (batchActions.length > 0 && self.getCheckBox($case).data(\"surrogatekey\") != -1) {\n            self.hasBatchActions = true;\n            self.showCheckItem($case);\n            self.pub(\"notify\", {\n              type: \"SOME-ITEM-ALLOW-SELECT\",\n              args: {} });\n\n          } else\n          {\n            self.removeCheckItem($case);\n          }\n        } else\n        {\n          self.removeCheckItem($case);\n        }\n        $footer.endLoading();\n      });\n    }, 0);\n    // Get cases assignees\n    setTimeout(function () {\n      $.when(self.usersCasesService.getAssignees(idCase)).\n      done(function ($assignees) {\n        if ($assignees && sequence === self.sequenceCall) {\n          var $case = self.getContent().\n          find(\"#casetemplate-box-wrapper-\" + idCase + \" .casetemplate-box-element .casetemplate-box-footer\");\n          $case.append($assignees);\n        }\n      });\n    }, 0);\n\n    return $templateCase;\n  },\n\n  /**\r\n      * Get check item by case\r\n      * @param $item\r\n      */\n  getCheckBox: function getCheckBox($item) {\n    var self = this;\n    return $item.closest(\".casetemplate-box-element\").find(self.selectorCheckboxItems);\n  },\n\n  /**\r\n      * Hide check item\r\n      * @param $item\r\n      */\n  removeCheckItem: function removeCheckItem($item) {\n    var self = this;\n    self.getCheckBox($item).remove();\n  },\n\n  /**\r\n      * Show checkbox\r\n      * @param $item\r\n      */\n  showCheckItem: function showCheckItem($item) {\n    var self = this;\n    self.getCheckBox($item).show();\n  },\n\n  /**\r\n      * Process action was executed\r\n      */\n  onFormActionExecuted: function onFormActionExecuted(ev, data) {\n    var self = this;\n    data = data || {};\n\n    if (data.refresh) {\n      self.refreshCase(data.idCase);\n    }\n  },\n\n  /**\r\n      * Process action was executed\r\n      */\n  onFormRuleExecuted: function onFormRuleExecuted(ev, data) {\n    var self = this;\n    data = data || {};\n\n    if (data.refresh) {\n      self.refreshCase(data.idCase);\n    }\n  },\n\n  /**\r\n      * Refresh the case with the new data\r\n      */\n  refreshCase: function refreshCase(idCase) {\n    var self = this;\n\n    var idBox = \"#casetemplate-box-wrapper-\" + idCase;\n    var $templateBox = $(idBox);\n    var isChecked = $templateBox.\n    find(\".casetemplate-box-check-selector > input\").\n    is(\":checked\");\n\n    $templateBox.startLoading({ delay: 250, overlay: true });\n\n    $.when(self.getCasesData({ idCase: idCase })).\n    then(function (caseData) {\n      return self.getCasesTemplates(caseData, true);\n    }).\n    done(function (caseTemplate) {\n\n      var $templateCase = null;\n\n      if (caseTemplate[0] != undefined && caseTemplate[0] != null) {\n        $templateCase = self.renderCase(caseTemplate[0], true, self.sequenceCall);\n        $templateBox.replaceWith($templateCase);\n      }\n\n      $templateBox.endLoading();\n\n      // Restore checked value\n      if (isChecked) {\n        $templateBox = $(idBox);\n        $templateBox.find(\".casetemplate-box-check-selector > input\").prop(\"checked\", true);\n      }\n    });\n  },\n\n  /**\r\n      * Gets the data related with the cases\r\n      */\n  getCasesData: function getCasesData(params) {\n    var self = this;\n\n    if (self.route == \"following\") {\n      return self.dataService.getActivitiesData(params);\n    }\n\n    if (self.route == \"pendings\") {\n      return self.dataService.getPendingsData(params);\n    }\n\n    if (self.route == \"Green\" ||\n    self.route == \"Yellow\" ||\n    self.route == \"Red\") {\n      $.extend(params, { taskState: self.route });\n      return self.dataService.getPendingsData(params);\n    }\n  },\n\n  /**\r\n      * Invokes the template engine, to gets the custom columns\r\n      */\n  getCasesTemplates: function getCasesTemplates(casesData, refreshCase) {\n    var self = this,\n    result = [],\n    defer = new $.Deferred();\n\n    $.when(self.getTemplateEngine()).\n    then(function (engine) {\n      return $.when.apply($, $.map(casesData.entities, function (cases) {\n        return engine.render(cases);\n      }));\n    }).\n    done(function () {\n      var casesTemplates = $.makeArray(arguments),\n      idCases = [],\n      cases = casesData.entities.length;\n\n      for (var i = 0; i < cases; i++) {\n        var tmpl = cases === 1 ? casesTemplates[i] : casesTemplates[i][0];\n        var caseData = casesData.entities[i];\n        result.push({\n          tmpl: tmpl,\n          casetoolbarData: {\n            guidFavorite: casesData.entities[i].guidFavorite,\n            idcase: casesData.entities[i].idCase,\n            idWorkflow: casesData.entities[i].idWorkflow,\n            radNumber: casesData.entities[i].radNumber || casesData.entities[i].idCase },\n\n          actionData: {\n            guidEntity: caseData.guid,\n            idCase: caseData.idCase,\n            radNumber: caseData.radNumber,\n            surrogateKey: caseData.surrogateKey } });\n\n\n        idCases.push(caseData.idCase);\n      }\n\n      if (!refreshCase) {\n        self.usersCasesService.render(idCases);\n        self.actionsEventsService.render(idCases);\n      }\n\n      defer.resolve(result);\n    });\n\n    return defer.promise();\n  },\n\n  /**\r\n      *  returns an instance of  the template engine\r\n      */\n  getTemplateEngine: function getTemplateEngine() {\n    var self = this;\n\n    if (self.templateEngine) {\n      return self.templateEngine;\n    }\n\n    var params = {};\n\n    params.proxyPrefix = bizagi.RPproxyPrefix;\n    var renderDataService = new bizagi.render.services.service(params),\n    renderFactory = new bizagi.rendering.desktop.factory(renderDataService),\n    defer = new $.Deferred();\n\n    $.when(renderFactory.initAsyncStuff()).\n    done(function () {\n      self.templateEngine = new bizagi.templateEngine({ renderFactory: renderFactory, cache: true, forcePersonalizedColumns: true });\n      self.templateEngine.subscribe(\"onLoadDataNavigation\", function (ev, params) {\n        var data = params.data || {};\n        var args = {\n          reference: data.reference,\n          surrogateKey: data.surrogateKey,\n          referenceType: data.referenceType,\n          fromActionLauncher: false,\n          histName: data.displayName,\n          guidEntityCurrent: data.guidEntityCurrent,\n          page: 1 };\n\n\n        if (typeof data.xpath !== \"undefined\" && data.xpath) {\n          args.xpath = data.xpath;\n        }\n\n        self.accumulatedcontext.clean();\n        self.pubDeadLockDetection(\"notify\", {\n          type: \"TEMPLATEENGINE-VIEW\",\n          args: args });\n\n      });\n      defer.resolve(self.templateEngine);\n    });\n\n    return defer.promise();\n  },\n\n  /**\r\n      * Gets Message when there aren\"t data\r\n      */\n  getEmptyDataMessage: function getEmptyDataMessage() {\n    var self = this;\n    var casestemplateEmptyData = self.getTemplate(\"casestemplate-empty-data\");\n\n    return casestemplateEmptyData.render()[0].outerHTML;\n  },\n\n  /**\r\n      * Handler to hold the cases selected\r\n      */\n  onCaseChecked: function onCaseChecked(ev) {\n    var self = this,\n    $target = $(ev.target),\n    surrogateKey = $target.data(\"surrogatekey\"),\n    idCase = $target.data(\"idcase\"),\n    guidEntity = $target.data(\"guidentity\"),\n    isChecked = $target.is(\":checked\");\n\n    self.casesSelected[idCase] = {\n      surrogateKey: surrogateKey,\n      guidEntity: guidEntity,\n      idCase: idCase };\n\n\n    if (!isChecked) {\n      delete self.casesSelected[idCase];\n    }\n    self.pub(\"notify\", { type: \"ENABLE-BATCHS-ACTIONS\", args: { commonActions: self.getCommonActions() } });\n\n  },\n\n  /**\r\n      * Returns the common actions in the set of data\r\n      */\n  getCommonActions: function getCommonActions() {\n    var self = this,\n    model = {};\n\n    model.actions = self.actionService.getCommonActions(self.casesSelected);\n    model.surrogateKeys = [];\n    model.parentsid = [];\n\n    for (var idcase in self.casesSelected) {\n      var data = self.casesSelected[idcase];\n      if (data.surrogateKey !== -1) {\n        model.surrogateKeys.push(data.surrogateKey);\n        model.parentsid.push(data.idCase);\n      }\n    }\n\n    model.guidEntity = idcase !== undefined ? self.casesSelected[idcase].guidEntity : \"\";\n\n    if (model.surrogateKeys.length == 0) {\n      self.checkAll = false;\n      model.checkAll = false;\n    } else\n    if (model.surrogateKeys.length == self.casesLength) {\n      self.checkAll = true;\n      model.checkAll = true;\n    }\n\n    model.itemsSelected = self.casesSelected;\n\n    return model;\n  },\n\n  /**\r\n      * Set current value\r\n      */\n  setValues: function setValues(params) {\n    var self = this,\n    $content = self.getContent(),\n    args = params.args || {},\n    isChecked = args.value;\n\n    if ($content) {\n      self.casesSelected = {};\n      var $inputs = $content.find(self.selectorCheckboxItems);\n      $.map($inputs, function (input) {\n        $(input).prop(\"checked\", isChecked);\n\n        if (isChecked) {\n          var surrogateKey = $(input).data(\"surrogatekey\"),\n          idCase = $(input).data(\"idcase\"),\n          guidentity = $(input).data(\"guidentity\");\n\n          self.casesSelected[idCase] = {\n            surrogateKey: surrogateKey,\n            guidEntity: guidentity,\n            idCase: idCase };\n\n        }\n      });\n\n      self.checkAll = isChecked;\n\n      return self.getCommonActions();\n    }\n  } });\n\n\nbizagi.injector.register(\"bizagi.workportal.widgets.casestemplate\", [\"workportalFacade\", \"dataService\", \"actionService\", \"casetoolbar\", \"usersCasesService\", \"actionsEventsService\", \"accumulatedcontext\", bizagi.workportal.widgets.casestemplate]);","/**\r\n *   Name: Bizagi Workportal Desktop Filter Cases Widget\r\n *   Author: Elkin Fernando Siabato Cruz\r\n */\nbizagi.workportal.widgets.widget.extend(\"bizagi.workportal.widgets.filtercases\", {}, {\n\n  /**\r\n                                                                                        *   Constructor\r\n                                                                                        */\n  init: function init(workportalFacade, dataService, params) {\n    var self = this;\n\n    // Call base\n    self._super(workportalFacade, dataService, params);\n\n    self.lastIdworkflow;\n\n    //Load templates\n    self.loadTemplates({\n      \"filtercases\": bizagi.getTemplate(\"bizagi.workportal.desktop.widget.filtercases\").concat(\"#filtercases-wrapper\") });\n\n  },\n\n  /**\r\n      * Renders the template defined in the widget\r\n      */\n  renderContent: function renderContent(event, params) {\n    var self = this;\n    var template = self.getTemplate(\"filtercases\");\n    self.content = template.render({});\n    return self.content;\n  },\n\n  /**\r\n      * links events with handlers\r\n      */\n  postRender: function postRender(event, params) {\n    var self = this;\n    var $contentWidget = self.getContent();\n    $(\"li.ui-bizagi-wp-app-inbox-tab\", $contentWidget).on(\"click\", $.proxy(self.onClickButtonFilter, self));\n    self.sub(\"CASES-TEMPLATE-VIEW\", $.proxy(self.updateUI, self));\n  },\n\n  /**\r\n      *\r\n      * @param event\r\n      */\n  onClickButtonFilter: function onClickButtonFilter(event) {\n    var self = this;\n    var $target = $(event.currentTarget);\n\n    if (!$target.hasClass(\"active\")) {\n      var auxDescriptionColorResourceName = \"workportal-widget-inboxcommon-filter-\";\n      var route = $target.attr(\"id\");\n      var idworkflow = self.pub(\"notify\", { type: \"GETIDWORKFLOW_FROM_PROCESSESLIST\" })[0];\n      var histName;\n\n      $target.addClass(\"active\").siblings().removeClass(\"active\");\n\n      if (route === \"pendings\") {\n        histName = self.pub(\"notify\", { type: \"GETHISTNAME_FROM_PROCESSESLIST\" })[0];\n      } else\n      {\n        var resourceLocalization = auxDescriptionColorResourceName + route.toLowerCase();\n        histName = bizagi.localization.getResource(resourceLocalization);\n      }\n\n      self.lastIdworkflow = idworkflow;\n\n      self.pub(\"notify\", {\n        type: \"CASES-TEMPLATE-VIEW\",\n        args: {\n          histName: histName,\n          page: 1,\n          refreshLastItemBreadcrumb: false,\n          route: route,\n          idworkflow: idworkflow || \"\" } });\n\n\n\n    }\n  },\n\n  /**\r\n      *\r\n      * @param event\r\n      * @param params\r\n      */\n  updateUI: function updateUI(event, params) {\n    var self = this;\n\n    if (params.args.route === \"following\") {\n      $(self.content).hide();\n    } else\n    {\n      $(self.content).show();\n    }\n    if (params.args.idworkflow != (self.lastIdworkflow || \"\")) {\n      $(\".ui-bizagi-wp-app-inbox-tab:first-child\").addClass(\"active\").siblings().removeClass(\"active\");\n    }\n  },\n\n  /**\r\n      *\r\n      */\n  clean: function clean() {\n    var self = this;\n    self.unsub(\"CASES-TEMPLATE-VIEW\");\n  } });\n\n\nbizagi.injector.register(\"bizagi.workportal.widgets.filtercases\", [\"workportalFacade\", \"dataService\", bizagi.workportal.widgets.filtercases]);","/**\r\n * Name: Bizagi Workportal Desktop Paginator Controller\r\n * Author: Mauricio Sánchez\r\n */\nbizagi.workportal.widgets.widget.extend(\"bizagi.workportal.widgets.paginator\", {}, {\n  /**\r\n                                                                                      *   Constructor\r\n                                                                                      */\n  init: function init(workportalFacade, dataService, params) {\n    var self = this;\n\n    // Call base\n    self._super(workportalFacade, dataService, params);\n    //Load templates\n    self.loadTemplates({\n      \"paginator\": bizagi.getTemplate(\"bizagi.workportal.desktop.widget.paginator\").concat(\"#paginator-wrapper\"),\n      \"content\": bizagi.getTemplate(\"bizagi.workportal.desktop.widget.paginator\").concat(\"#paginator-content\") });\n\n  },\n\n  /**\r\n      * Renders the template defined in the widget\r\n      */\n  renderContent: function renderContent() {\n    var self = this;\n    var hide = self.params.referenceType === \"ENTITY\";\n    var template = self.getTemplate(\"paginator\" + self.getSuffixWidget());\n    self.content = template.render({ hide: hide });\n\n    return self.content;\n  },\n\n  /**\r\n      * links events with handlers\r\n      */\n  postRender: function postRender() {\n    var self = this;\n\n    self.sub(\"PAGINATOR-UPDATE\", $.proxy(self.updateView, self));\n    self.configureHandlers();\n  },\n\n  /**\r\n      *\r\n      * @returns {string}\r\n      */\n  getSuffixWidget: function getSuffixWidget() {\n    return \"\";\n  },\n\n\n  /**\r\n      * Updates la view with the data related to entity:\r\n      * Name entity\r\n      * Number of records\r\n      * Number of pages\r\n      * */\n  updateView: function updateView(ev, params) {\n    var self = this;\n    var args = params.args;\n    var hide = args.referenceType === \"ENTITY\";\n    var $content = self.getContent();\n\n    self.setModel(args);\n    $content.empty();\n\n    if (args.fromActionLauncher) {\n      if (self.totalRecords > 1) {\n        renderTemplate();\n      } else\n      {\n        self.clean();\n      }\n    } else\n    {\n      renderTemplate();\n    }\n\n    /**\r\n       *\r\n       */\n    function renderTemplate() {\n      var contentTemplate = self.getTemplate(\"content\" + self.getSuffixWidget());\n\n      contentTemplate.render({\n        totalRecords: self.totalRecords,\n        totalPages: self.totalPages,\n        displayName: self.displayName,\n        currentPage: self.currentPage,\n        hide: hide }).\n      appendTo($content);\n    }\n  },\n\n  /**\r\n      * Builds the navigation model\r\n      */\n  setModel: function setModel(args) {\n    var self = this;\n\n    self.totalRecords = typeof args.totalRecords == \"undefined\" ? self.totalRecords : args.totalRecords;\n    self.totalPages = args.totalPages || self.totalPages;\n    self.displayName = args.histName || self.displayName;\n    self.currentPage = args.currentPage || self.currentPage;\n    self.action = args.action;\n    self.reference = args.reference || self.reference;\n    self.surrogateKey = args.surrogateKey || self.surrogateKey;\n    self.referenceType = args.referenceType;\n    self.event = args.event;\n    self.guidSearch = args.guidSearch;\n  },\n\n  /**\r\n      *  Gets the current model\r\n      */\n  getModel: function getModel() {\n    var self = this;\n\n    return {\n      page: self.currentPage,\n      totalRecords: self.totalRecords,\n      action: self.action,\n      reference: self.reference,\n      surrogateKey: self.surrogateKey,\n      referenceType: self.referenceType,\n      stopNavigation: true,\n      guidSearch: self.guidSearch };\n\n  },\n\n  /**\r\n      *  Binds events to handles\r\n      */\n  configureHandlers: function configureHandlers() {\n    var self = this,\n    $content = self.getContent();\n\n    $content.on(\"click\", $.proxy(self.onPageBreak, self));\n  },\n\n  /**\r\n      * This event get a new page\r\n      */\n  onPageBreak: function onPageBreak(ev) {\n    var self = this,\n    $target = $(ev.target),\n    $content = self.getContent();\n\n    if ($target.hasClass(\"control-icon\") && !$target.hasClass(\"ui-state-disabled\")) {\n      var type = $target.data(\"type\");\n\n      if (type == \"forward\") {\n        self.currentPage += 1;\n      } else\n      if (type == \"rewind\") {\n        self.currentPage -= 1;\n      } else\n      if (type == \"fastrewind\") {\n        self.currentPage = 1;\n      } else\n      {\n        self.currentPage = self.totalPages;\n      }\n\n      self.disabledPaginatorButtonsByLimits();\n      $content.find(\".paginator-controls__currentPage\").text(self.currentPage);\n\n      self.pub(\"notify\", { type: \"UPDATE-DATATEMPLATE-VIEW\", args: self.getModel() });\n    }\n  },\n\n  disabledPaginatorButtonsByLimits: function disabledPaginatorButtonsByLimits() {\n    var self = this;\n    var $buttonFastRewind = $(\"[data-type='fastrewind']\", self.content);\n    var $buttonRewind = $(\"[data-type='rewind']\", self.content);\n    var $buttonFordward = $(\"[data-type='forward']\", self.content);\n    var $buttonFastFordward = $(\"[data-type='fastforward']\", self.content);\n\n    if (self.totalPages === 1) {\n      $buttonFastRewind.addClass(\"ui-state-disabled\");\n      $buttonRewind.addClass(\"ui-state-disabled\");\n      $buttonFordward.addClass(\"ui-state-disabled\");\n      $buttonFastFordward.addClass(\"ui-state-disabled\");\n    } else {\n      // The first page\n      if (self.currentPage === 1) {\n        $buttonFastRewind.addClass(\"ui-state-disabled\");\n        $buttonRewind.addClass(\"ui-state-disabled\");\n        $buttonFordward.removeClass(\"ui-state-disabled\");\n        $buttonFastFordward.removeClass(\"ui-state-disabled\");\n      }\n      // the last page\n      else if (self.currentPage === self.totalPages) {\n          $buttonFastRewind.removeClass(\"ui-state-disabled\");\n          $buttonRewind.removeClass(\"ui-state-disabled\");\n          $buttonFordward.addClass(\"ui-state-disabled\");\n          $buttonFastFordward.addClass(\"ui-state-disabled\");\n        }\n        // other page\n        else {\n            $buttonFastRewind.removeClass(\"ui-state-disabled\");\n            $buttonRewind.removeClass(\"ui-state-disabled\");\n            $buttonFordward.removeClass(\"ui-state-disabled\");\n            $buttonFastFordward.removeClass(\"ui-state-disabled\");\n          }\n    }\n  },\n  /**\r\n      * Returns a new page close to the first item above based on the previous page\r\n      * @param {*} newItemsPerPage new value in results per page in search\r\n      * @param {*} previousItemsPerPage previous value in results per page\r\n      * @param {*} previousPage previous value in page number\r\n      */\n  calculateNewPage: function calculateNewPage(newItemsPerPage, previousItemsPerPage, previousPage) {\n    previousItemsPerPage = previousItemsPerPage || 10;\n    var currentFirstItem = previousItemsPerPage * previousPage - previousItemsPerPage + 1;\n    var newPage = Math.ceil(currentFirstItem / newItemsPerPage);\n    return newPage ? newPage : 1;\n  },\n\n  /**\r\n      *\r\n      */\n  clean: function clean() {\n    var self = this;\n    var $content = self.getContent();\n\n    if ($content) {\n      $content.empty();\n    }\n  } });\n\n\nbizagi.injector.register(\"bizagi.workportal.widgets.paginator\", [\"workportalFacade\", \"dataService\", bizagi.workportal.widgets.paginator]);","/**\r\n * Name: Bizagi Workportal Desktop Sort Bar Controller\r\n * Author: Danny Gonzalez\r\n */\nbizagi.workportal.widgets.widget.extend(\"bizagi.workportal.widgets.sortbar\", {}, {\n  /**\r\n                                                                                    * Constructor\r\n                                                                                    * @param workportalFacade\r\n                                                                                    * @param dataService\r\n                                                                                    * @param processActionService\r\n                                                                                    * @param accumulatedcontext\r\n                                                                                    * @param params\r\n                                                                                    */\n  init: function init(workportalFacade, dataService, processActionService, accumulatedcontext, params) {\n    var self = this;\n\n    // Call base\n    self._super(workportalFacade, dataService, params);\n\n    //Load templates\n    self.loadTemplates({\n      \"sortbar\": bizagi.getTemplate(\"bizagi.workportal.desktop.widget.sortbar\").concat(\"#sortbar-wrapper\"),\n      \"content\": bizagi.getTemplate(\"bizagi.workportal.desktop.widget.sortbar\").concat(\"#sortbar-content\"),\n      \"right-content\": bizagi.getTemplate(\"bizagi.workportal.desktop.widget.sortbar\").concat(\"#sortbar-right\"),\n      \"addButton\": bizagi.getTemplate(\"bizagi.workportal.desktop.widget.sortbar\").concat(\"#sortbar-content-add-button\"),\n      \"sortMenu\": bizagi.getTemplate(\"bizagi.workportal.desktop.widget.sortbar\").concat(\"#sortbar-sort-menu\"),\n      \"actions\": bizagi.getTemplate(\"bizagi.workportal.desktop.widget.sortbar\").concat(\"#sortbar-content-actions\"),\n      \"recordsPerPage\": bizagi.getTemplate(\"bizagi.workportal.desktop.widget.sortbar\").concat(\"#sortbar-records-per-page\"),\n      \"recordsMenu\": bizagi.getTemplate(\"bizagi.workportal.desktop.widget.sortbar\").concat(\"#sortbar-records-menu\") });\n\n\n    self.processActionService = processActionService;\n    self.accumulatedcontext = accumulatedcontext;\n  },\n\n  /**\r\n      * Renders the template defined in the widget\r\n      */\n  renderContent: function renderContent() {\n    var self = this;\n    var template = self.getTemplate(\"sortbar\");\n    self.content = template.render({ enableFilter: true });\n    self.$checkAll = self.content.find(\".sortbar-left-check-uncheck input\");\n\n    return self.content;\n  },\n\n  /**\r\n      * links events with handlers\r\n      */\n  postRender: function postRender() {\n    var self = this;\n\n    var template = self.getTemplate(\"right-content\");\n    self.setVisibleSortbar(true);\n    self.configureHandlers();\n    $(\".sortbar-right\", self.content).append(template.render());\n    self.configureAfterPaintHandlers();\n  },\n\n  /**\r\n      * Binds events to handles\r\n      */\n  configureHandlers: function configureHandlers() {\n    var self = this,\n    $content = self.getContent();\n\n    self.sub(\"TEMPLATEENGINE-VIEW\", $.proxy(self.initializeAndProcessFilterButton, self));\n    self.sub(\"SEARCH-ENGINE-VIEW\", $.proxy(self.initializeAndProcessFilterButton, self));\n    self.sub(\"SET-FILTERS-DATA\", $.proxy(self.setFiltersSortData, self));\n    self.sub(\"HIDE-FILTER-BUTTONANDBAR\", $.proxy(self.hideFilterButtonAndBar, self));\n    self.sub(\"HIDE-SORT-BUTTONS\", $.proxy(self.hideSortButtons, self));\n    self.sub(\"ENABLE-BATCHS-ACTIONS\", function (ev, args) {return self.enableBatchActions(args);});\n    self.sub(\"UPDATE-COUNTER-FILTERS-APPLIED\", function (ev, args) {return self.updateCounterByFilterApplied(args);});\n    self.sub(\"CASES-TEMPLATE-VIEW\", function (ev, args) {self.showingFiltering = false;self.setVisibleCheckAll(false);});\n    self.sub(\"SOME-ITEM-ALLOW-SELECT\", function (ev, args) {self.setVisibleCheckAll(true);});\n    self.sub(\"HIDE-CHECK-ALL\", function (ev, args) {self.setVisibleCheckAll(false);});\n    self.sub(\"BATCH-ACTIONS\", function (ev, args) {return self.validActions(args.args.actionsData);});\n\n    $content.find(\".wgd-sortbar-add-button\").tooltip();\n    self.$checkAll.on(\"click\", $.proxy(self.onCheckUncheck, self));\n  },\n\n  /**\r\n      * Configure Handlers\r\n      */\n  configureAfterPaintHandlers: function configureAfterPaintHandlers() {\n    var self = this,\n    $content = self.getContent();\n\n    // Show sort menu\n    $content.find(\".right-menu\").on(\"click\", function (ev) {\n      self.showSortMenu(ev, $(this));\n    });\n\n    // Show records menu\n    $content.find(\".records-menu\").on(\"click\", function (ev) {\n      self.showRecordsMenu(ev, $(this));\n    });\n\n    // Change sort type\n    $content.find(\".sortbar-az\").on(\"click\", function () {\n      if (self.sortSelection.attribute) {\n        self.setIconSortType($(this), self._sortType);\n\n        self.pub(\"notify\", { type: \"SET-ORDERBY\", args: {\n            properties: {\n              xpath: self.sortSelection.attribute,\n              orderType: self._sortType,\n              typeSearch: \"none\" } } });\n\n\n      }\n    });\n    // Show filter bar\n    $content.find(\".filter-icon\").on(\"click\", function () {\n      self.pub(\"notify\", { type: \"OPENCLOSE-MYSEARCHFILTER\", args: { guidSearch: self.params.guidSearch, target: $(this) } });\n    });\n\n    $(\".remove-selected-items-collections\", $content).on(\"click\", $.proxy(self.onRemoveSelectedItemsCollections, self));\n  },\n\n  /**\r\n      * Shor or hide sortbar\r\n      * @param visible\r\n      */\n  setVisibleSortbar: function setVisibleSortbar(visible) {\n    var self = this;\n    var $content = self.getContent();\n    if (visible) {\n      $content.show();\n    } else\n    {\n      $content.hide();\n    }\n  },\n\n  /**\r\n      * Show or hide check input (select all)\r\n      * @param visible\r\n      */\n  setVisibleCheckAll: function setVisibleCheckAll(visible) {\n    var self = this;\n    if (visible) {\n      self.$checkAll.closest(\".border-check-uncheck\").show();\n      self.showingCheckAll = true;\n    } else\n    {\n      self.$checkAll.closest(\".border-check-uncheck\").hide();\n      self.showingCheckAll = false;\n    }\n  },\n\n  /**\r\n      * Show number items selected from data items (from casetemplate or entityTemplates)\r\n      * @param numberCheckedItems\r\n      */\n  showSelectedItems: function showSelectedItems(numberCheckedItems) {\n    var self = this;\n    if (numberCheckedItems && numberCheckedItems > 0) {\n      self.content.addClass(\"there-are-actions\");\n\n      var keywordSelected = self.getResource(\"workportal-general-word-selected-singular\");\n      if (numberCheckedItems > 1) {\n        keywordSelected = self.getResource(\"workportal-general-word-selected-plural\");\n      }\n      $(\".actions-count-selected\", self.content).text(numberCheckedItems + \" \" + keywordSelected + \" \");\n    } else\n    {\n      self.content.removeClass(\"there-are-actions\");\n    }\n  },\n\n  /**\r\n      * Set icon descending or ascending\r\n      * @param button represents icon ascending or descending\r\n      * @param sortTypeBeforeChanged\r\n      */\n  setIconSortType: function setIconSortType(button, sortTypeBeforeChanged) {\n    var self = this;\n    if (sortTypeBeforeChanged === \"asc\") {\n      self._sortType = \"desc\";\n      button.removeClass(\"bz-icon-order-ascendant-outline\").addClass(\"bz-icon-order-descendant-outline\");\n    } else\n    {\n      self._sortType = \"asc\";\n      button.removeClass(\"bz-icon-order-descendant-outline\").addClass(\"bz-icon-order-ascendant-outline\");\n    }\n  },\n\n  /**\r\n      *\r\n      * @param event\r\n      */\n  onClickBatchAction: function onClickBatchAction(event) {\n    var self = this;\n    var $buttonLI = $(event.target).closest(\"li\");\n    var guidAction = $buttonLI.data(\"guid\");\n    var action = self.getAction(guidAction);\n\n    if (!self.requestsInProgressActionGuid[guidAction]) {\n      self.requestsInProgressActionGuid[guidAction] = true;\n\n      self.addLoadingButtonAction($buttonLI);\n\n      $.when(self.processActionService.executeBatchAction({\n        action: action,\n        commonActionsmodel: self.commonActionsmodel })).\n      always(function () {\n        self.quitLoadingButtonAction($buttonLI);\n        self.requestsInProgressActionGuid[guidAction] = undefined;\n      });\n    }\n  },\n\n  /**\r\n      * Add loading to button\r\n      */\n  addLoadingButtonAction: function addLoadingButtonAction($button) {\n    $button.find(\".wdg-tple-button\").addClass(\"state-loading\");\n    $button.find(\".wdg-tple-button\").prepend(\"<div class=\\\"ui-bizagi-loading-icon ui-bizagi-loading-button\\\"></div>\").find(\"i\").hide();\n  },\n\n  /**\r\n      * quit loading to button\r\n      */\n  quitLoadingButtonAction: function quitLoadingButtonAction($button) {\n    $button.find(\".wdg-tple-button\").removeClass(\"state-loading\");\n    $button.find(\".ui-bizagi-loading-button\").remove();\n    $button.find(\"i\").show();\n  },\n\n  /**\r\n      *\r\n      */\n  onRemoveSelectedItemsCollections: function onRemoveSelectedItemsCollections() {\n    var self = this;\n    var commonActions = self.pub(\"notify\", { type: \"SET-VALUES\", args: { value: false } })[0];\n    self.enableBatchActions({ args: { commonActions: commonActions } });\n  },\n\n  /**\r\n      * Show the sort menu\r\n      * @param ev\r\n      * @param $parent\r\n      */\n  showSortMenu: function showSortMenu(ev, $parent) {\n    var self = this;\n    var $content = self.getContent();\n    var template = self.getTemplate(\"sortMenu\");\n    var tooltip = template.render({ filters: self._filters }, {\n      displayValue: function displayValue(val) {\n        return val;\n      } });\n\n    if ($(\".sortbar-box-menu\", $parent).length) {\n      $(\".sortbar-box-menu\", $parent).remove();\n    }\n\n    $parent.append(tooltip);\n    tooltip.show(\"fast\", function () {\n      tooltip.click(function (e) {\n        e.stopPropagation();\n      });\n      $(document).one(\"click\", function () {\n        tooltip.hide(\"fast\");\n        tooltip.remove();\n      });\n    });\n\n    //Configure handler to each action\n    $content.find(\".sortbar-option\").on(\"click\", function (ev) {\n      var data = $(ev.currentTarget).data();\n      var sortSelection = self._filters[data.index];\n      $content.find(\".sortbar-az\").removeClass(\"disabled\");\n\n      if (self.sortSelection != sortSelection) {\n        self.sortSelection = sortSelection;\n        $(\".sortbar-selected\", $parent).text(self.sortSelection.display.split(\".\").pop());\n        self.pub(\"notify\", { type: \"SET-ORDERBY\", args: {\n            properties: {\n              xpath: sortSelection.attribute,\n              orderType: self._sortType,\n              typeSearch: \"none\" } } });\n\n\n      }\n      tooltip.hide(\"fast\");\n    });\n  },\n\n  showRecordsMenu: function showRecordsMenu(ev, $parent) {\n    var self = this;\n    var $content = self.getContent();\n    var template = self.getTemplate(\"recordsMenu\");\n    var tooltip = template.render({});\n\n    if ($(\".sortbar-records-box-menu\", $parent).length) {\n      $(\".sortbar-records-box-menu\", $parent).remove();\n    }\n\n    $parent.append(tooltip);\n    tooltip.show(\"fast\", function () {\n      tooltip.click(function (e) {\n        e.stopPropagation();\n      });\n      $(document).one(\"click\", function () {\n        tooltip.hide(\"fast\");\n        tooltip.remove();\n      });\n    });\n\n    // Configure handler to each action\n    $content.find(\".sortbar-records-option\").on(\"click\", function (ev) {\n      self.oldPageSize = self.oldPageSize ? self.oldPageSize : 10;\n      var pageSize = Number(bizagi.util.trim(this.textContent)),\n      paginator = bizagi.injector.get(\"bizagi.workportal.widgets.paginator\"),\n      actualPage = paginator.currentPage ? paginator.currentPage : 1,\n      newPage = paginator.calculateNewPage(pageSize, self.oldPageSize, actualPage);\n      $(\".sortbar-records-selected\", $parent).text(pageSize);\n      self.pub(\"notify\", {\n        type: \"SET-RECORDS\",\n        args: {\n          pageSize: pageSize,\n          page: newPage } });\n\n\n      self.oldPageSize = pageSize;\n      tooltip.hide(\"fast\");\n    });\n  },\n\n  /**\r\n      * Asigna los parametros iniciales de la busqueda e inicializa los objetos\r\n      * @param e\r\n      * @param params\r\n      */\n  initializeAndProcessFilterButton: function initializeAndProcessFilterButton(e, params) {\n    var self = this;\n\n    self.showingFiltering = false;\n    self.setVisibleCheckAll(false);\n\n    self.restoreOrderSelected();\n    self.setIconSortType($(\".sortbar-az\", self.content), \"desc\");\n    self.params = params.args;\n    self.sortSelection = {};\n\n    self.processAddButton(e, params);\n  },\n\n  /**\r\n      *  Checks if the add button should be displayed\r\n      */\n  processAddButton: function processAddButton(ev, params) {\n    var self = this,\n    $content = self.getContent(),\n    args = params.args,\n    action = args.action,\n    $buttonContainer = $content.find(\".sortbar-left .add-button\");\n    self._lastReferenceEntity = args.reference;\n    $buttonContainer.children().remove();\n    $(\".wrapper-sortbar-actions\", $content).remove(); //Remove same time buttons batch actions\n    self._haveAddButton = false;\n    if (args.reference && args.referenceType !== \"ENTITY\") {\n      $buttonContainer.startLoading({ delay: 0, overlay: true });\n      self.dataService.getProcessAddAction(params).done(function (data) {\n        if (self._lastReferenceEntity === data.referenceEntity) {\n          if (typeof data !== \"undefined\" && Object.getOwnPropertyNames(data).length > 1 && data.guidEntity && data.id) {\n            self.renderButton($buttonContainer, data);\n          }\n        }\n      }).always(function () {\n        $buttonContainer.endLoading();\n      });\n    } else\n    if (action) {\n      self.renderButton($buttonContainer, action);\n    }\n  },\n\n  /**\r\n      *\r\n      */\n  renderButton: function renderButton($buttonContainer, action) {\n    var self = this,\n    template = self.getTemplate(\"addButton\"),\n    $addButton = template.render({ action: action });\n\n    $buttonContainer.empty();\n    $addButton.appendTo($buttonContainer);\n    self._haveAddButton = true;\n    $addButton.on(\"click\", function () {self.clickAddButton(action);});\n  },\n\n  /**\r\n      * Click on add Proccess btn\r\n      */\n  clickAddButton: function clickAddButton(action) {\n    var self = this;\n\n    $.when(self.dataService.getMapping({\n      guidEntity: action.guidEntity,\n      accumulatedContext: self.accumulatedcontext.getContext({}),\n      xpathContext: action.type === \"Process\" ? action.xpathContext : \"\",\n      collectionId: action.referenceEntity,\n      collectionType: action.referenceType })).\n    done(function (mappingData) {\n      if (action.type === \"Process\") {\n        self.onExecuteProcess(action, mappingData);\n      } else\n      {\n        self.onExecuteForm(action, mappingData);\n      }\n    });\n  },\n\n  /**\r\n      * Check or uncheck all registers related, could be cases or data\r\n      */\n  onCheckUncheck: function onCheckUncheck(ev) {\n    var self = this;\n    var $target = $(ev.target);\n    var isChecked = $target.is(\":checked\");\n    var commonActions = self.pub(\"notify\", { type: \"SET-VALUES\", args: { value: isChecked } })[0];\n\n    self.enableBatchActions({ args: { commonActions: commonActions } });\n  },\n\n  /**\r\n      * Enabled / disables the batch actions. This method is called always update data\r\n      */\n  enableBatchActions: function enableBatchActions(params) {\n    var self = this;\n    var args = params.args;\n    var commonActionsModel = self.commonActionsmodel = args.commonActions;\n    var actions = self.validActions(commonActionsModel.actions);\n    if (actions.length > 0 || self._haveAddButton) {\n      $(self.getContent()).show();\n    }\n    self.showBatchActions(actions, commonActionsModel, \"batchAction\");\n\n    if (commonActionsModel.checkAll !== undefined) {\n      self.$checkAll.prop(\"checked\", commonActionsModel.checkAll);\n    }\n  },\n\n  /**\r\n      * Show batch actions\r\n      * @param actions\r\n      * @param commonActionsModel\r\n      * @param typeActions\r\n      */\n  showBatchActions: function showBatchActions(actions, commonActionsModel, typeActions) {\n    var self = this;\n    var $content = self.getContent();\n    var template = self.getTemplate(\"actions\");\n\n    self.showSelectedItems(Object.keys(commonActionsModel.itemsSelected).length);\n\n    var moreActions = actions.slice(3, 9999);\n\n    var $actions = template.render({ actions: actions.slice(0, 3), moreActions: moreActions, typeActions: typeActions });\n\n    $(\".wdg-tple-button.batchAction\", self.content).off(\"click\", $.proxy(self.onClickBatchAction, self));\n\n    $(\".wrapper-sortbar-actions\", $content).remove();\n    $(\".sortbar-left .sortbar-menu\", $content).append($actions);\n\n    $(\".wdg-tple-button.batchAction\", self.content).on(\"click\", $.proxy(self.onClickBatchAction, self));\n\n    if (moreActions.length > 0) {\n      if (self.content.data('ui-tooltip')) {\n        $(self.content).tooltip(\"destroy\");\n      }\n\n      $(self.content).tooltip({\n        tooltipClass: \"sortbar-tooltip-more-actions\",\n        items: \".bz-actions-showmore\",\n        content: $(\".template-box-tooltip\", self.content).html(),\n        open: function open(event, ui)\n        {\n          $(\".wdg-tple-button.batchAction\", ui.tooltip).on(\"click\", $.proxy(self.onClickBatchAction, self));\n\n          var uiTooltip = $('div.ui-tooltip');\n\n          if (typeof event.originalEvent === 'undefined')\n          {\n            uiTooltip.remove();\n            return false;\n          }\n          var $id = $(ui.tooltip).attr('id');\n          // close any lingering tooltips\n          uiTooltip.not('#' + $id).remove();\n          // ajax function to pull in data and add it to the tooltip goes here\n\n          for (var keyActionGuid in self.requestsInProgressActionGuid) {\n            if (self.requestsInProgressActionGuid[keyActionGuid]) {\n              var $buttonAction = $(\"li[data-guid='\" + keyActionGuid + \"']\", ui.tooltip);\n              self.addLoadingButtonAction($buttonAction);\n            }\n          }\n\n          $(\"li[id='emptyLi0']\").focus(function () {\n            $(\"div.bz-actions-showmore.ellipsis-icon\")[0].focus();\n            $(\"ul[class='actions-container'] li:nth-child(3\")[0].focus();\n          });\n          $(\"li[id='emptyLi1']\").focus(function () {\n            $(\"div.bz-actions-showmore.ellipsis-icon\")[0].focus();\n            $(\"a.remove-selected-items-collections\")[0].focus();\n          });\n          $(\"li\", ui.tooltip)[1].focus();\n\n        },\n        close: function close(event, ui)\n        {\n          ui.tooltip.hover(function ()\n          {\n            $(this).stop(true).fadeTo(400, 1);\n          },\n          function ()\n          {\n            $(this).fadeOut('400', function ()\n            {\n              $(\".wdg-tple-button.batchAction\", this).off(\"click\", $.proxy(self.onClickBatchAction, self));\n              $(this).remove();\n            });\n          });\n        } });\n\n    }\n  },\n\n  /**\r\n      * Define the data on order to show the sort options\r\n      * @param ev\r\n      * @param params\r\n      */\n  setFiltersSortData: function setFiltersSortData(ev, params) {\n    var self = this;\n    var filtersAppliedCounter = params.args.filtersAppliedCounter;\n    var totalRecords = params.args.totalRecords;\n    self._filters = params.args.calculateFilters ? params.args.filters : self._filters;\n\n    if (params.args.calculateFilters) {\n      var i = -1,a,filterCounter = 0,sortCounter = 0;\n      while (a = self._filters[++i]) {\n        if (a.type != \"Text\" && a.type !== \"Link\" && a.data && (a.data.defaultValues && a.data.defaultValues.length > 0 || a.data.min && a.data.max)) {\n          filterCounter++;\n        }\n        if (a.display !== \"\") {\n          sortCounter++;\n        }\n      }\n\n      if (totalRecords > 0) {\n        // Si existen filtros, muestre el boton\n        if (filterCounter > 0) {\n          self.showFilterButton();\n        } else\n        {\n          self.hideFilterButton();\n        }\n        // Si existen filtros que tienen display name, muestre los botones de sort\n        if (sortCounter > 0) {\n          self.showSortButtons();\n        } else\n        {\n          self.hideSortButtons();\n        }\n      }\n      // Si no hay registros y ni se ha aplicado ningun filtro ocultar\n      // los botones del sortbar\n      else if (filtersAppliedCounter === 0) {\n          self.hideFilterButton();\n          self.hideSortButtons();\n        }\n    }\n    self.updateCounter(filtersAppliedCounter);\n  },\n\n  /**\r\n      * Show Filter Button\r\n      */\n  showFilterButton: function showFilterButton() {\n    var self = this;\n    $(\".filter-icon\", self.getContent()).show();\n  },\n\n  /**\r\n      * Hide Filter Button\r\n      */\n  hideFilterButton: function hideFilterButton() {\n    var self = this;\n    $(\".filter-icon\", self.getContent()).hide();\n    self.showingFiltering = false;\n  },\n\n  /**\r\n      * Show Sort Buttons\r\n      */\n  showSortButtons: function showSortButtons() {\n    var self = this;\n    $(\".sortbar-text\", self.getContent()).show();\n    $(\".sortbar-icon\", self.getContent()).show();\n    $(\".sortbar-az\", self.getContent()).show();\n\n    self.showingSorting = true;\n    self.showingFiltering = true;\n  },\n\n  /**\r\n      * Hide Sort Buttons\r\n      */\n  hideSortButtons: function hideSortButtons() {\n    var self = this;\n    var $sortbarIcon = $(\".sortbar-az\", self.getContent());\n\n    // Restore initial settings\n    $(\".sortbar-text\", self.getContent()).hide();\n\n    $sortbarIcon.addClass(\"disabled\");\n    $sortbarIcon.removeClass(\"bz-icon-order-ascendant-outline\");\n    $sortbarIcon.removeClass(\"bz-icon-order-descendant-outline\");\n    $sortbarIcon.addClass(\"bz-icon-order-ascendant-outline\");\n    $sortbarIcon.hide();\n\n    self.showingSorting = false;\n  },\n\n  /**\r\n      * Restore Order by Option\r\n      */\n  restoreOrderSelected: function restoreOrderSelected() {\n    var self = this;\n    $(\".sortbar-selected\", self.getContent()).text(self.getResource(\"workportal-my-search-order-by\"));\n  },\n\n  /**\r\n      * Set number filters\r\n      * @param params\r\n      */\n  updateCounterByFilterApplied: function updateCounterByFilterApplied(params) {\n    var self = this;\n    if (params.args.filtersApplied) {\n      self.updateCounter(params.args.filtersApplied.length);\n    }\n  },\n\n  /**\r\n      *\r\n      * @param counter\r\n      */\n  updateCounter: function updateCounter(counter) {\n    var self = this,\n    $content = self.getContent(),\n    $counter = $(\".counter-filters-applied\", $content);\n\n    if (counter > 0) {\n      $counter.html(counter);\n      $counter.show();\n    } else\n    {\n      $counter.hide();\n    }\n  },\n\n  /**\r\n      *\r\n      */\n  hideFilterButtonAndBar: function hideFilterButtonAndBar() {\n    var self = this;\n    self.showingFilter = false;\n    $(\".filter-icon\", self.getContent()).hide();\n    self.pub(\"notify\", { type: \"CLOSE-MYSEARCHFILTER\", args: { \"show\": false, \"$target\": null } });\n  },\n\n  /**\r\n      * Creates a new case, it could has start form or not\r\n      */\n  onExecuteProcess: function onExecuteProcess(action, mappingData) {\n    var self = this;\n\n    if (action.startForm) {\n      action.hasStartForm = action.startForm;\n    }\n\n    $.when(self.processActionService.executeProcessAction({\n      action: action,\n      mappingData: mappingData })).\n    done(function (params) {\n      var params = params || {};\n\n      if (!!params && params.refreshTemplateData !== false) {\n        self.loadTemplateData(action);\n      }\n    });\n  },\n\n  /**\r\n      *\r\n      * @param action\r\n      */\n  loadTemplateData: function loadTemplateData(action) {\n    var self = this;\n    self.pub(\"notify\", { type: \"TEMPLATEENGINE-VIEW\", args: { action: action, isRefresh: true } });\n  },\n\n  /**\r\n      *\r\n      */\n  onExecuteForm: function onExecuteForm(action, mappingData) {\n    var self = this;\n\n    $.when(self.processActionService.executeFormAction({\n      action: action,\n      mappingData: mappingData })).\n    done(function (data) {\n      if (data.refresh) {\n        self.pub(\"notify\", { type: \"UPDATE-DATATEMPLATE-VIEW\", args: { action: action, isRefresh: true, calculateFilters: true } });\n      }\n    });\n  },\n\n  /**\r\n      * Returns the action required\r\n      */\n  getAction: function getAction(guidAction) {\n    var self = this;\n    return self.commonActionsmodel.actions.filter(function (action) {\n      return action.id == guidAction;\n    })[0];\n  },\n\n  /**\r\n      * Returns an array with the valid actions\r\n      * @param actions\r\n      * @return {*}\r\n      */\n  validActions: function validActions(actions) {\n    return $.grep(actions, function (action) {\n      if (action.multiplicity == 2) {return true;}\n      if (action.mode == \"Collection\") {return false;}\n      if (action.type == \"Form\") {return false;}\n      if (action.isEvent) {return false;}\n      if (action.type == \"Process\" && action.hasStartForm) {return false;}\n      return true;\n    });\n  },\n\n  /**\r\n      * Detach handlers\r\n      */\n  clean: function clean() {\n    var self = this,\n    $content = self.getContent();\n    self.requestsInProgressActionGuid = {};\n\n    if ($content) {\n      self.unsub(\"TEMPLATEENGINE-VIEW\");\n      self.unsub(\"ENABLE-BATCHS-ACTIONS\");\n      self.unsub(\"SEARCH-ENGINE-VIEW\");\n      self.unsub(\"SET-FILTERS-DATA\");\n      self.unsub(\"HIDE-FILTER-BUTTONANDBAR\");\n      self.unsub(\"HIDE-SORT-BUTTONS\");\n\n      self.$checkAll.off(\"click\");\n      $content.find(\".right-menu\").off(\"click\");\n      $content.find(\".sortbar-az\").off(\"click\");\n      $content.find(\".filter-icon\").off(\"click\");\n      $content.find(\".sortbar-action\").off(\"click\");\n      $(\".wdg-tple-button.batchAction\", $content).off(\"click\", $.proxy(self.onClickBatchAction, self));\n      $(\".remove-selected-items-collections\", $content).off(\"click\", $.proxy(self.onRemoveSelectedItemsCollections, self));\n    }\n  } });\n\n\n\nbizagi.injector.register(\"bizagi.workportal.widgets.sortbar\", [\"workportalFacade\", \"dataService\", \"processActionService\", \"accumulatedcontext\", bizagi.workportal.widgets.sortbar]);","/**\r\n *   Name: Bizagi Workportal Desktop Processes list controller\r\n *   Author: Danny Gonzalez\r\n */\nbizagi.workportal.widgets.widget.extend(\"bizagi.workportal.widgets.processeslist\", {}, {\n\n  /**\r\n                                                                                          * Constructor\r\n                                                                                          * @param workportalFacade instance of facade, mandatory\r\n                                                                                          * @param dataService instance of service tier, mandatory\r\n                                                                                          * @param params extra params, its not mandatory\r\n                                                                                          */\n  init: function init(workportalFacade, dataService, params) {\n    var self = this;\n    self.params = params;\n    // Call base\n    self._super(workportalFacade, dataService, params);\n\n    self.idworkflow = params.idworkflow; //Save current idworkflow\n    self.histName = params.histName; //Save current histName\n\n    //Load templates\n    self.loadTemplates({\n      \"processeslist\": bizagi.getTemplate(\"bizagi.workportal.desktop.widget.processeslist\").concat(\"#processeslist-wrapper\"),\n      \"processeslistEmptyData\": bizagi.getTemplate(\"bizagi.workportal.desktop.widget.processeslist\").concat(\"#processeslist-empty-message\") });\n\n  },\n\n  /**\r\n      * Renders the template defined in the widget\r\n      * @return {string} html\r\n      */\n  renderContent: function renderContent() {\n    var self = this,\n    template = self.getTemplate(\"processeslist\");\n\n    return $.when(self.getData()).done(function (data) {\n      self.content = data.length > 0 ? template.render({ processes: data }) : self.getEmptyDataMessage().render({});\n      self.setSelectedList($(\".wdg-process-card:first\", self.getContent()));\n    });\n  },\n\n  /**\r\n      * links events with handlers\r\n      */\n  postRender: function postRender() {\n    var self = this;\n    self.configureHandlers();\n\n    self.sub(\"GETIDWORKFLOW_FROM_PROCESSESLIST\", function () {\n      return self.getIdworkflow();\n    });\n    self.sub(\"GETHISTNAME_FROM_PROCESSESLIST\", function () {\n      return self.getHistname();\n    });\n  },\n\n  /**\r\n      * Binds events to handles\r\n      */\n  configureHandlers: function configureHandlers() {\n    var self = this,\n    $content = self.getContent();\n    $(\".wdg-process-card\", $content).on(\"click\", $.proxy(self.onClickProcess, self));\n  },\n\n  /**\r\n      * Call to all processes in my activities\r\n      * @return {object} data\r\n      */\n  getData: function getData() {\n    var self = this,\n    $args = {},\n    $route = self.params.route;\n\n    switch ($route) {\n      case \"pendings\":\n        $args = {\n          \"taskState\": \"all\",\n          \"myPendings\": true };\n\n        break;\n      case \"following\":\n        $args = {\n          \"taskState\": \"all\",\n          \"myActivities\": true,\n          \"onlyFavorites\": true };\n\n        break;\n      case \"Green\":\n      case \"Red\":\n      case \"Yellow\":\n        $args = {\n          \"taskState\": $route };\n\n        break;}\n\n    $args.followingOrMyPending = true;\n    return self.dataService.getAllProcesses($args).then(function (data) {\n      return self.getInfoToProcessesList(data);\n    });\n  },\n\n  /**\r\n      * Organize all data to processes in my activities\r\n      * @param data\r\n      * @returns {{cases}}\r\n      */\n  getInfoToProcessesList: function getInfoToProcessesList(data) {\n    var allProcesses = data.categories,\n    processes = [],\n    cases = [];\n\n    for (var i = 0, l = allProcesses.length; i < l; i++) {\n      processes = allProcesses[i].workflows;\n      for (var j = 0, k = processes.length; j < k; j++) {\n        cases.push({\n          process: processes[j].name,\n          idworkflow: processes[j].idworkflow });\n\n      }\n    }\n    return cases;\n  },\n\n  /**\r\n      * event listener for each action in the processes list\r\n      * @param ev\r\n      */\n  onClickProcess: function onClickProcess(ev) {\n    var self = this,\n    params = bizagi.clone(self.params),\n    $target = $(ev.target).closest(\".wdg-process-card\");\n    self.setSelectedList($target);\n\n    self.idworkflow = $target.data(\"idworkflow\");\n    self.histName = $target.data(\"title\");\n\n    self.pubDeadLockDetection(\"notify\", {\n      type: \"CASES-TEMPLATE-VIEW\",\n      args: $.extend(params, {\n        histName: self.histName,\n        level: 3,\n        idworkflow: self.idworkflow }) });\n\n\n  },\n\n  /**\r\n      *\r\n      * @returns {*}\r\n      */\n  getIdworkflow: function getIdworkflow() {\n    var self = this;\n    return self.idworkflow;\n  },\n\n  /**\r\n      *\r\n      * @returns {*}\r\n      */\n  getHistname: function getHistname() {\n    var self = this;\n    return self.histName;\n  },\n\n  /**\r\n      *\r\n      * @param item\r\n      */\n  setSelectedList: function setSelectedList(item) {\n    var self = this;\n    $(item).addClass(\"wdg-plst-selected\").siblings().removeClass(\"wdg-plst-selected\");\n  },\n\n  /**\r\n      * Gets Message when there are not data\r\n       * @returns {processeslistEmptyData}\r\n      */\n  getEmptyDataMessage: function getEmptyDataMessage() {\n    var self = this,\n    processeslistEmptyData = self.getTemplate(\"processeslistEmptyData\");\n\n    return processeslistEmptyData;\n  },\n\n  /**\r\n      * Detach handlers\r\n      */\n  clean: function clean() {\n    var self = this,\n    $content = self.getContent();\n\n    if ($content) {\n      $(\".wdg-process-card\", $content).off(\"click\");\n    }\n\n    self.unsub(\"GETIDWORKFLOW_FROM_PROCESSESLIST\");\n    self.unsub(\"GETHISTNAME_FROM_PROCESSESLIST\");\n  } });\n\n\nbizagi.injector.register(\"bizagi.workportal.widgets.processeslist\", [\"workportalFacade\", \"dataService\", bizagi.workportal.widgets.processeslist], true);"]}