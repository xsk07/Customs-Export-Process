{"version":3,"sources":["jquery/rendering/js/tablet/container/slide/bizagi.rendering.tablet.slide.searchForm.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.combo.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.grid.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.grid.offline.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.search.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.list.js","jquery/rendering/js/tablet/render/column/bizagi.rendering.tablet.columns.combo.js","jquery/rendering/js/tablet/container/slide/bizagi.rendering.tablet.slide.view.js","jquery/rendering/js/tablet/container/slide/bizagi.rendering.tablet.slide.form.js","jquery/rendering/js/tablet/container/slide/bizagi.rendering.tablet.slide.grid.js","jquery/rendering/js/tablet/container/slide/bizagi.rendering.tablet.slide.adhocForm.js","jquery/rendering/js/tablet/container/slide/bizagi.rendering.tablet.slide.upload.js","jquery/rendering/js/tablet/container/slide/bizagi.rendering.tablet.slide.startForm.js","jquery/rendering/js/tablet/container/slide/bizagi.rendering.tablet.slide.ecm.js","jquery/rendering/js/tablet/container/bizagi.rendering.tablet.container.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.render.js","jquery/rendering/js/tablet/container/bizagi.rendering.tablet.form.js","jquery/rendering/js/tablet/container/bizagi.rendering.tablet.panel.js","jquery/rendering/js/tablet/container/bizagi.rendering.tablet.contentPanel.js","jquery/rendering/js/tablet/container/bizagi.rendering.tablet.nestedForm.js","jquery/rendering/js/tablet/container/bizagi.rendering.tablet.tab.js","jquery/rendering/js/tablet/container/bizagi.rendering.tablet.tabItem.js","jquery/rendering/js/tablet/container/bizagi.rendering.tablet.horizontal.js","jquery/rendering/js/tablet/container/bizagi.rendering.tablet.layout.js","jquery/rendering/js/tablet/container/bizagi.rendering.tablet.accordion.js","jquery/rendering/js/tablet/container/bizagi.rendering.tablet.accordionItem.js","jquery/rendering/js/tablet/container/bizagi.rendering.tablet.group.js","jquery/rendering/js/tablet/container/bizagi.rendering.tablet.section.js","jquery/rendering/js/tablet/container/bizagi.rendering.tablet.searchForm.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.text.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.readonly.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.extendedText.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.label.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.number.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.money.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.numberScientificNotation.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.date.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.yesno.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.check.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.collectionnavigator.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.upload.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.upload.offline.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.grid.grouped.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.letter.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.button.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.fileprint.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.link.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.formLink.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.hidden.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.radio.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.cascadingCombo.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.multiSelect.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.handSignature.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.association.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.ecm.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.searchList.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.userfield.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.image.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.document.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.geolocation.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.actionLauncher.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.entityTemplate.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.polymorphicLauncher.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.checkList.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.activityCheckList.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.range.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.rangeDate.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.rangeMoney.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.rangeNumber.js","jquery/rendering/js/tablet/render/column/bizagi.rendering.tablet.columns.column.js","jquery/rendering/js/tablet/render/column/bizagi.rendering.tablet.columns.document.js","jquery/rendering/js/tablet/render/column/bizagi.rendering.tablet.columns.date.js","jquery/rendering/js/tablet/render/column/bizagi.rendering.tablet.columns.text.js","jquery/rendering/js/tablet/render/column/bizagi.rendering.tablet.columns.number.js","jquery/rendering/js/tablet/render/column/bizagi.rendering.tablet.columns.numberScientificNotation.js","jquery/rendering/js/tablet/render/column/bizagi.rendering.tablet.columns.image.js","jquery/rendering/js/tablet/render/column/bizagi.rendering.tablet.columns.upload.js","jquery/rendering/js/tablet/render/column/bizagi.rendering.tablet.columns.link.js","jquery/rendering/js/tablet/render/column/bizagi.rendering.tablet.columns.uploadecm.js","jquery/rendering/js/tablet/render/column/bizagi.rendering.tablet.columns.button.js","jquery/rendering/js/tablet/render/column/bizagi.rendering.tablet.columns.radio.js","jquery/rendering/js/tablet/render/column/bizagi.rendering.tablet.columns.readonly.js","jquery/rendering/js/tablet/render/column/bizagi.rendering.tablet.columns.search.js","jquery/rendering/js/tablet/render/column/bizagi.rendering.tablet.columns.list.js","jquery/rendering/js/tablet/render/column/bizagi.rendering.tablet.columns.exclusiveCheck.js","jquery/rendering/js/tablet/render/column/bizagi.rendering.tablet.columns.hidden.js","jquery/rendering/js/tablet/bizagi.rendering.tablet.factory.js","jquery/rendering/js/tablet/container/bizagi.rendering.tablet.queryForm.js","jquery/rendering/js/tablet/container/bizagi.rendering.tablet.formTemplate.js","jquery/rendering/js/tablet/container/bizagi.rendering.tablet.usersForm.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","$","Class","extend","init","dataService","renderFactory","slideFormParams","this","slideFormDeferred","Deferred","container","navigation","createRenderContainer","title","buttons","processFormButtons","form","self","caption","bizagi","localization","getResource","actions","submitData","refresh","ordinal","action","save","style","callback","validateForm","data","collectRenderValues","allowGetOriginalFormValues","formValues","children","idPageCache","getPageCache","onSave","when","done","result","type","addValidationMessage","messages","addErrorMessage","message","goBack","resolve","fail","dataFail","responseText","toString","JSON","parse","e","match","substr","length","clearValidationMessages","reject","showSaveButton","shift","render","params","renderSlideForm","promise","defer","loading","start","getFormData","then","recordXPath","properties","recordXpath","editable","orientation","getContainer","view_container","formParams","element","html","isRefresh","navigate","id","remove","append","buttonContainer","triggerHandler","bind","refreshParams","errorTemplate","getCommonTemplate","error_message","fasttmpl","appendTo","always","stop","destroy","_renderButtons","content","each","ui","value","click","slideContainer","configureViewHandlers","formClass","rendering","tablet","submitForm","endLoading","key","renders","getRenders","i","updateOriginalValue","containerParams","delegate","onCancel","xhr","errorType","slideForm","transformData","allowEdition","setNavigationButtons","row","columns","xpathContext","xpath","elements","pageCacheId","sessionId","transformActions","validations","transformValidations","item","mapRenderType","displayType","mapValue","recalculate","columnVisible","visible","isColumn","concat","label","additionallabel","undefined","push","replaceAll","toLowerCase","includes","grep","gridActions","util","isEmpty","index","bDependencyFound","dependencies","indexOf","newAction","encode","j","transformConditions","conditions","transformCommands","commands","elseCommands","gridValidations","validation","newValidation","condition","expressions","simple","complex","argumentType","argument","renderId","refreshIndex","command","splice","elementsWithDefaultValue","getRender","defaultValue","isArray","setDisplayValue","isAddForm","columnProperties","defaultvalue","isDisabledControl","isExclusiveCheck","isExclusive","reduce","previousValue","currentValue","searchForms","searchParams","searchFormParams","searchFormDeferred","renderSearchForm","getSearchContainerData","getSearchButtons","Object","keys","map","firstChild","currentSearchForm","searchResultContainer","show","_","scrollTop","parent","focus","selectedTabs","getSelectedTabs","contextType","ev","containerSearchCriteria","find","hide","error_obj","hasSessionFormException","goToStartPage","renderAddForm","addContainer","getFormParams","guidEntity","entity","idStartScope","idRender","requestedForm","addFormParams","getAddFormButtons","processButtons","getButtons","innerHTML","saveDataAddForm","indicator","currentAddForm","handleSearchFormZindex","error","getErrorFormatted","forceCollectData","contexttype","formData","collectRenderValuesForSubmit","isMapEmpty","showMessageBox","response","dataHasXpath","found","mapping","setValue","setDisplayValueToControl","renderControlSearchForm","addForm","getDisplayValue","searchFormOptions","performSearch","allowNew","idCase","displayName","deferred","searchFormToLoad","tabContainer","otherElements","searchForm","isDefault","tab","getSearchFormData","searchFormData","Math","guid","idSearchForm","url","pipe","option","modalViewDisplayed","n","css","code","setTimeout","dfd","slideOptions","onClose","text","renderUploadFile","template","virtualForm","originalProperties","uniqueId","showConfirmationBox","window","location","href","options","getStartForm","saveButtonLabel","getMetadataForm","$renderEdition","onSaveDataMetadataForm","fileData","metadata","renderType","getRenderType","metadataType","newRender","assign","metadataId","description","required","parseBoolean","readOnly","toUpperCase","dataType","allowDecimals","thousands","maxLength","autoExtend","update","metadataValues","idMetadata","idFileUpload","fileName","xPath","idAttrib","metaValues","updateECMMetadata","fileProperties","startLoading","base","initializeData","_super","formContainer","getFormContainer","getParams","getLabel","observableElement","getFormattingLabel","getControl","control","getControlFiller","controlFiller","getContainerMessage","containerMessage","getColumnContainerMessage","getDisplayOptionClass","changeDisplayOption","getAlignClass","alignType","changeLabelAlign","changeValueAlign","customizeRenderWidth","labelWidth","valueWidth","percent2Number","width","setValidationMessage","normalizeType","isGridControl","$message","grid","column","test","replace","attr","addClass","removeClass","display","displayValue","getElementsToStylize","context","changeRequired","triggerRenderValidate","changeRequiredLabel","clearDisplayValue","input","filter","ele","val","getValue","warnings","errors","syncError","isOfflineErrorMode","syncMessage","makeArray","forEach","currentMessage","console","showToastOnSuccessSync","removeSyncErrorOnSubmit","configureHandlers","configureComplexGateway","$canvas","getValidationsContainer","validationController","controllers","actionController","readyDeferred","modalViewDidAppear","modalViewDidDisappear","configureNetworkHandlers","postRenderContainer","isiOSTabletDevice","isObjectEmpty","warningContainer","prependTo","detach","ekey","document","unbind","deferredSave","allowOnlineActions","autoSaveEvents","newData","isEmptyObject","selectedSections","selectedSection","setParam","section","getRenderById","expand","saveBox","isStartForm","formtype","confirmation","showSaveBox","saveForm","isOfflineForm","offlineType","online","syncDeferred","syncParams","trigger","log","arguments","internalSubmitForm","buttonProperties","submitDataAction","executeButtonAction","performAction","checkpointAction","commitAction","executeRule","createnewcase","animate","prepare","tag","prepareCheckpointAction","executeButton","prepareCommitAction","next","back","nextWithoutValidations","transitions","activeTransitions","countProps","forcePlanCompletion","surrogatekey","surrogateKey","chrono","initAndStart","flowControlDeferred","deferreds","apply","multiaction","execute","responses","bHasValidations","join","sendRollbackAction","postProcessButton","refreshForm","routing","buttonPropertiesAction","IdCase","caseNumber","CaseNumber","nonSupportedMethods","res","res2","failHandler","stopLoading","validateFeatureSupport","getPane","pane","handler","saveButton","nextButton","getNavigation","getViewContainer","showLoading","getFocus","idWorkitem","idTask","getSelectedSection","getEndPointAction","isOfflineRefreshWithEdition","isEdited","postRenderEdit","formsRenderVersion","originalParams","checkWidgetsData","popupResponse","workportal","popup","instance","getResponseValues","getResponseValuesParams","dontClose","close","repaintComplexGateway","idCaseObject","isComplex","getWorkitems","workItems","taskType","currentPopup","widgetName","widgets","widget","BIZAGI_WORKPORTAL_WIDGET_COMPLEXGATEWAY","sourceElement","insertAfter","height","offset","activeScroll","closed","addWarning","addError","processButton","isFloatingButtonsEnabled","isFormButtonsEnabled","dispose","refreshAfterSessionIdle","notifier","add","sticky","overlay","time","after_close","routingToProcess","processParams","idProcess","webpart","publish","showProcess","hasStartForm","fromNewCase","renderContainer","getTemplate","helptext","helpText","mode","getMode","queryForm","getFormType","summaryForm","globalForm","displayAsReadOnly","processPath","breadCrumb","replaceChildrenHtml","renderChildrenHtml","triggerGlobalHandler","eventType","complexGatewayContainer","hasClass","on","$selected","transitionId","is","mainForm","$currentView","view","footer","panel","contentPanel","material_bizagi_tabs","direction","active_index_tab","activeTab","info","stopPropagation","setActiveTab","rippleEffect","tabItem","setAsActiveContainer","ready","tabs","activate","changeVisibility","counter","afterToRefresh","horizontal","layout","accordion","accordionItem","group","toggleClass","collapse","isOpen","toogleContainer","expandedClassIcon","expandedIcon","isDesign","messageValidation","displayAs","dir","getSectionOrientationRTL","mobileModal","displayNameParent","getParentDisplayName","anchor","onBeforeShow","m","addToHistoryNavigation","p","getSectionParent","isFirstLevel","onShow","removeFromHistoryNavigation","selected","pop","renderResult","skipInitialLoad","rowsPerPage","sortBy","sortOrder","overrideGetRemoteData","getRemoteData","parseAdditionalProperties","showTime","inlineAdd","allowDelete","allowAdd","allowEdit","resultsGrid","searchCriteria","results","childrenElements","childElement","Number","child","childrenHash","getElementType","ELEMENT_TYPE_RENDER","postRenderElement","ELEMENT_TYPE_CONTAINER","configureDesignView","configureLayoutView","criteriaContainer","resultsContainer","hasOwnProperty","refreshResults","onSearchFinished","deviceMaxRecordsExceeded","records","postRender","renderReadOnly","sanitizeHTML","validateValue","attachRetypeDouble","blur","retypeDouble","tooltip","createTooltip","$context","currentTitle","cloneRender","readonly","extendedText","minLines","maxLines","maxCharactersToShow","textarea","resize","showChar","startString","endString","encodedText","encodeHtmlText","actualMaxLength","which","prop","updateTextareaSize","configureHandlersReadOnly","$control","delegateTarget","currentRows","scrollHeight","offsetHeight","newValue","number","numericInput","numberToFixedString","executeFormatCurrencyPlugin","formatCurrency","symbol","positiveFormat","negativeFormat","decimalSymbol","digitGroupSymbol","groupDigits","roundToDecimalPlace","numDecimals","colorize","money","numberScientificNotation","inputDisplay","first","last","numericSN","attachFormatSientificNotation","scientificNotationFormat","scientificNotationNumber","scientificNotationNumberDisplay","date","MAX_YEARS_DISPLAY","dateFormat","ud","dateFormatter","format","substring","search","formatDate","getDateFromFormat","i18n","fullFormat","postRenderReadOnly","getDateControl","dateControl","inputDate","configureMobiscollCalendar","calendarInstance","mobiscroll","preventDefault","isCordovaSupported","isAndroidDevice","cordova","plugins","Keyboard","disableScroll","controlElements","getOrientation","calendar","touchUi","controls","min","getNormalizeDate","Date","minValue","max","maxValue","timeFormat","timePickerFormat","getTimeFormat","datePickerFormat","dateWheels","select","selectType","rtl","lang","languages","BIZAGI_LANGUAGE","language","setValueFromCalendarButtons","v","getCalendarInstance","setVal","inst","clear","onSet","onChangeHandler","onDayChange","onClear","event","getDateFromInvariant","isiOSDevice","isNow","currentDate","getVal","currentDateString","formatInvariant","getFullFormatedDate","currentTime","fullDate","formatISO","dateFromFormat","preprocessDateValue","isValid","invalidElements","bValid","checkMinAndMaxValue","hasValue","showMandatoryMessage","isMinValue","vValue","resultValue","getTime","formatedDate","setHour","timeS","isValidMinMaxValue","validateMinAndMaxValue","formattedDate","isNumeric","ci","callBack","yesno","radio","parsedValue","change","cleanData","check","removeAttr","evt","isCheck","combo","renderControl","getSelectedValue","formatItem","itemSelected","mobileView","customHeader","hideSearch","enableTyping","contentTemplate","open","configureActions","modalView","isDependant","getParentCombo","parentValue","BA_ACTION_PARAMETER_PREFIX","renderCombo","list","configureModalViewHandlers","processComboData","comboValue","preprocessValue","findDataValueById","selectedValue","valueObjet","header","$elementsList","$clearButton","$searchInput","filterList","$li","stringContainer","stringToSearch","renderComboTemplate","items","selectedId","hasItems","validateItem","collectionnavigator","services","service","BA_CONTEXT_PARAMETER_PREFIX","BA_PAGE_CACHE","upload","QUALITY_PICTURE","LIMIT","EXTENSIONSIMG","EXTENSIONSFILE","EXTENSIONSVIDEO","EXTENSIONSAUDIO","isNative","renderItem","noFiles","filesCount","file","files","renderUploadItem","replaceFilesHtml","$contentFile","$inputFile","$nativeFile","checkFileExtensions","attachEvents","media","downloadFile","executeFormFailHandler","counterChoseFiles","off","chooseFile","removeFile","getUploadChoices","actionSheet","actionClicked","handlerUploadFile","appear","cancelClicked","getImageResolutionSizes","withoutCancel","handlerResolutionUpload","addFile","navigator","camera","getPicture","dataImage","extensions","checkMaxSize","getFileDataInfo","checkFileTypes","getAndroidVersion","isAndroid","modalResolutionUpload","buttonIndex","getImageResolutionItems","onFail","quality","sourceType","Camera","PictureSourceType","PHOTOLIBRARY","correctOrientation","saveImage","CAMERA","mediaType","MediaType","PICTURE","destinationType","DestinationType","FILE_URI","targetWidth","targetHeight","device","capture","captureVideo","dataVideo","checkMaxSizeVideo","saveVideo","limit","actionSelected","ResolutionType","ORIGINAL","resolution","getImageResolution","transformImageSize","editedImageURL","localUrl","base64Image","dataItem","dataFile","getImagePath","name","mimeType","uploadFile","fullPath","addParams","buildAddParams","queueID","encodeXpath","getUploadXpath","FileUploadOptions","fileKey","uploadKey","addUrl","decodeURIComponent","onUploadFileCompleted","messageError","processFailMessage","isValidResource","$wrapper","newItem","slice","checkMaxFiles","isMaxFilesReached","maxFiles","maxfiles","actualFiles","validExtensions","validOptions","video","image","split","fileAPISupported","buildAddFileParams","prefix","FormData","BIZAGI_SESSION_NAME","processUploadFile","promises","itemsUpload","errorResponse","checkMaxSizeFile","deleteUploadItem","triggerRenderChange","getTemplateItemName","maxFileSizeOfProperty","maxSize","maxFileSizeOfUser","BIZAGI_SETTINGS","UploadMaxFileSize","updateFilesCount","originalValue","clone","status","openOfflineFile","handlerWebUploadFile","removeOfflineFile","attachNativeEvents","fileId","randomNumber","getFileService","resolveBlobFromPath","blob","saveOfflineFile","onUploadOfflineFileCompleted","choosePhoto","takePhoto","addInteractions","collectData","renderValues","identicalObjects","saveResponse","fileUploaded","itemTemplate","filename","canBeSent","failReadFile","target","fileIndex","fileValue","triggerEvents","method","dataIndex","getFileParams","getOfflineFile","binaryFile","handleBinaryFile","blobFile","parameters","operationType","GRID_PAGE_SIZE","MIN_SUPPORTED_WIDTHS","LIST","minimum","appliesTo","get","controlType","defaultWidth","singleInstance","cellMetadata","labelAlign","groupBy","groupSummary","pendingActions","initAddAndDeleteProperties","updateAffectedCellManually","getRowIndexByKey","initialLoadDone","applyGridPlugin","rows","page","fetchData","sortType","updateData","changed","buildColumnModel","columnsTotalizers","summarizeBy","bizagi_grid_tablet","subType","isSortable","waiting","table","emptyTable","specialColumn","rowButtons","cell","specialCell","pager","dynamicPager","totalizer","edit","withEditForm","details","allowDetail","allowMore","enableXlsExport","enablePdfExport","hasTotalizer","pageRequested","isExecutionMode","hasColumnChanges","changes","exclusiveChanges","isSummaryOrGlobalForm","sortRequested","drawCell","isNewRow","cellReady","onCellReady","rowSelected","addRow","addVirtualRow","editRow","editVirtualRow","deleteRow","moreRows","showFormDetails","showDetailForm","showMore","totalData","onTotalData","columnModel","hidden","align","columnIndex","columnLabel","gridColumn","totalize","operation","bizAgiProperties","dataReady","dataReadyDeferred","loadChanges","rowIndex","rowChanges","getExclusiveChangeByRow","columnData","getColumn","mapChangeValue","comboData","el","setCellOverrides","triggerGridPluginHandler","applyColumnsWidth","sort","isRTL","changeOrderData","inlineEdit","newKeys","alreadySaved","saveDeferred","saveInlineAddedRows","cellOverride","getCellOverride","renderColumn","newRecords","setSurrogateKey","columntitlealign","valueAlign","columnAlign","drawEditableCell","drawReadonlyCell","columnWidth","columnwidth","getColumnType","isHorizontalRadio","isCheckbox","applyElementWidth","originalEditable","submitOnChange","getDecorated","submitOnChangexpathContext","submitAddRequest","newid","slideView","slide","addExclusiveChange","submitSaveRequest","addPage","submitRollbackRequest","executeFailHandlerOnForm","currentRow","adhocForm","saveAddedRow","addGridRecordData","cleanActionChanges","submitForGridChange","executeSubmitEditRequest","editInline","collectGridChange","dataToSend","submitEditRequest","editPage","submitDeleteRequest","refreshAfterDeleteRows","rowDeleted","rowsDeleted","newTotalRows","newTotalPages","ceil","originalrowsPerPage","moreRowsCommon","changeCellBackgroundColor","getControlCell","changeBackgroundColor","changeCellColor","changeColor","changeCellVisibility","findIndex","isCurrentGridCell","cellOverrides","changeCellValue","_value","getCellValueFormatted","compositeValue","getCompositeValue","changeCellRequired","changeCellEditability","changeEditabilityCellControl","getIndexForCurrentCell","setError","isVisible","parentPromise","inlineAddPromise","inlineAddDeferred","querySelectorAll","columnHeader","querySelector","dataset","isHeader","minValidWidth","parseInt","minWidth","maxWidth","bUseTimeout","cleanCellData","emptyValue","rowLength","showTotal","columnsModel","operationState","sum","return_value","count","avg","toFixed","formatTotalizedResult","total","showTotals","formatMonetaryCell","transition","cssClass","showBorder","color","formatted","setHours","onCellChange","args","RegExp","setMilliseconds","warn","overrideProperties","Array","call","hasExclusiveCheck","simpleXpath","changeCellMaxValue","changeMaxValue","changeCellMinValue","changeMinValue","originalRows","isTaskForm","editedImages","offlineFiles","initProperties","isValidGrid","saveAddedRows","beforeInlineAdd","afterInlineAdd","businessKey","cancelEdition","removeNewRecords","processChanges","rowsList","sortArray","columnXpath","canColumnBeSent","columnNumber","unshift","creationTimestamp","a","b","collectOfflineTaskData","temporalNew","currentChanges","newImages","newFiles","buildCellXpathFilter","columnValue","isChanged","copyChanges","addRowData","idRow","isNew","images","stringify","processOldRows","collectOfflineStartData","internalRedersValues","DataType","processRow","merge","newRows","tempRows","col","leng","temp","database","convertUploadOnlineValueInOfflineValue","len","now","originalFormat","textFormat","renderSummary","gridXpath","fullXpath","offlineId","buildOfflineImageId","fileService","getOfflineImageName","bRefresh","updateRowsFromChanges","updateNewRowsAsSaved","setRowAsSaved","mergeArray","rowToModify","getRowByKey","mergeRow","r","rowA","rowB","totalPages","delInfo","deleteUrl","errorsMessage","showValidationMessage","getIndexes","getDataNewRows","ADVANCED_SEARCH_ID","ADVANCED_ADDITION_ID","CLEAR_SEARCH_ID","NO_RESULTS_SEARCH_ID","DEFAULT_SEARCH_ID","SEARCH_MIN_LENGTH","SEARCH_DELAY","SEARCH_MAX_RECORDS","deferredReference","searchInput","advancedSearch","_simplySearchView","_advanceSearchView","readyActionExecution","modalViewList","suggestFilter","debounce","autoCompleteSearchResults","trim","selectItem","formSearchParams","allowFullSearch","maxRecords","refreshControl","getContentTemplate","afterOpenAnimation","processRequest","term","renderSearchItem","searchItem","tmpl","req","suggestions","allowSuggest","searchLength","getSuggestData","getOfflineData","getData","state","hideStatus","parseValue","performTermMatches","inputText","allowClear","dataList","startsWith","letter","button","needsUserConfirmation","userConfirmationMessage","runButtonAction","pressed","changeFontBold","$label","bold","fileprint","link","preventDefaultForAnchorTag","isValidValue","getFullyDecodedURI","linkEncode","encodeURI","getAttribute","linkSolver","linktarget","linkTarget","processLayout","isLabelFormat","background","formLink","openLink","paintFormLink","rollbackForm","openLinkRule","property","def","getPropertyValue","dataRuleResp","showErrorMessage","actionSave","getFormLinkXpath","propertyName","getPropertyData","dataUrl","extra","jqXHR","textStatus","errorThrown","ex","noAction","saveLinkForm","saveUrl","executeSubmitOnChange","hasexitrule","closeExitRule","submitCommitRequest","hasentryrule","getFormLinkXpathContext","parentXpathContext","getXpathContext","submitCheckpointRequest","siblings","cascadingCombo","parentCombo","initializingCascadingCombo","isInitialValue","isRendered","empty","deferredVisible","configureCombo","changeCombo","valueItem","getTemplateName","multiSelect","MORE_OPTION_WIDTH","getDataValue","openModalView","dataMapped","template_content","values","isChecked","template_footer","footerTemplate","$listContainer","$suggestInput","newList","checked","findItemById","normalizeData","handSignature","$actions","$container","getSignatureContainer","autoSave","debounce2","saveSignature","DELAY_TO_SAVE","BzjSignature","saveTimestamp","toDataURL","fire","setData","setState","STATE_TYPE","cancel","onSignatureClear","onSignatureEdit","onSignatureSave","clearReference","EMPTY_VALUE","deleteSignature","draw","renderSignature","sizeRatio","cssclass","pluginInitialized","setSignature","renderSignatureValue","round","sleepUntil","isLoading","buildItemUrl","isDisposed","BASE_IMAGE","EMPTY_IMAGE","postSignature","signature","postSignatureOffline","postSignatureOnline","saveImageOffline","deleteImage","buildItemUrlOffline","association","getFlipAssociation","flip","makeJsonBase","flipped","getColumnData","getRightAssociation","formatJson","dataAssociation","rightData","leftData","isExecution","addEventControl","showDefaultGroupList","$groups","slideDown","$input","parentId","addElement","removeElement","flipstate","$element","$groupList","parents","closeAccordionSection","active","slideUp","ecm","ERROR_ECM_NO_AVAILABLE","ACTION_DETAILS","ACTION_EDIT","originalData","getFileProperties","renderFileLayout","metadataECMMultiaction","getECMMetadata","metaData","showMetadata","Filename","attackMenuEvents","addMenuEvents","$fileItem","viewMore","fn","processActionByType","allowUpdateMetadata","allowCheckOut","lockECMFile","allowCancelCheckOut","unlockECMFile","deleteECMFile","overflowMenu","lockUploadItem","replaceWith","unlockUploadItem","performValidationMessage","isFailResponse","lastIndexOf","searchList","SEARCH_ELEMENTS","searchListInput","_searchListViewModal","getHeaderTemplate","getFooterTemplate","cssClassHeader","adjustResize","finalValue","deleteItem","templateItem","getTagTemplate","modalViewTagList","modalFooter","modalHeader","getListItems","initialScreenSize","innerHeight","emptyItems","userfieldWrapper","getUserfieldControl","sControl","userfieldName","exists","eval","createUserfieldInstance","userfield","userfieldGuid","getUserfieldDefinition","loadUserfield","dynamicFunction","initialParams","getUserFieldInstance","isUserField","userfieldInstance","replicateUserfieldMethods","styleContent","styleGuid","str","loadStyle","defaultUserField","designUserField","startUserfieldLoading","endUserfieldLoading","userfieldDefinition","basicUserField","isSupported","getEditableControl","getReadonlyControl","controlName","isDesignMode","showAsyncImage","configureNativeHandlers","configureHybridHandlers","imageAdd","resolutionButtonHandler","imagePreview","useCamera","imageAddNative","imageAddHybrid","performUploadFile","coordinates","getBoundingClientRect","popoverOptions","CameraPopoverOptions","left","top","imageAddNativeFromCamera","version","imageDelete","uploadFileCompleted","msg","uploadFileNativeOnline","uploadFileHybridOnline","changeOfflineImageName","htmlImage","configureMenu","baseParams","zoom","useNativeScrolling","imageData","img","inputEdition","getFullImage","formCompatibilityVersion","buildFullItemUrl","$preview","originalImageWidth","$viewMore","buildItemUrlOnline","imageUrl","isOfflineFormsV2Supported","_hasValue","ACTION_SHOW","ACTION_DOWNLOAD","ACTION_DELETE","documents","downloadalldocuments","allowgenerate","allowGenerate","renderDocumentsHtml","renderActionsHtml","replaceActionsHtml","$inputDocument","$listDocuments","$listActions","getTemplateReadonly","buttonExecuted","validate","validateContainer","documentTemplateGenerate","documentFile","processAction","renderAllDocumentDownload","getTemplateDownload","buildAllDocumentsUrl","joined","redrawDocuments","downloadAllDocuments","$documentContainer","$actionContainer","showDocumentPreview","resolveDocumentTemplateGenerate","resolveDeleteDocumentTemplate","deleteDocumentTemplate","geolocation","ALLOW_UPDATE","coordinate","updateDisplayValue","performPrecision","onSuccess","position","coords","latitude","longitude","getCurrentPosition","actionLauncher","getActions","processPropertyValueArgs","getPropertiesActionLaucher","deferredActions","isHorizontal","templatetype","processPropertyValueDataTmplArgs","templateData","engine","isDefaultTemplate","wrap","configureActionsHandlers","configureTemplateHandlers","guidProcess","guidAction","actionType","readOnlyForm","xpathActions","expr","FilterAction","array","keyup","not","subscribe","filters","multipleSelection","countSameActions","actionManager","act","executeAction","showConfirmationDialog","notifyExecution","class_name","processActionForm","additionalXpaths","additionalXpath","detailLabel","cancelButtonLabel","isActionStartForm","savedData","editMode","IdScope","renderParams","idForm","caseId","typeForm","surrogatedKey","rewriteContextType","processActionFormCollection","xpathContextWithKey","printf","idEntity","xpathContextWithoutKey","IdEntity","addActionToQueue","processStartForm","startForm","guidprocess","mappingstakeholders","executeActionImmediately","actionsToExecuteContainer","configureQueueVisibility","listOfActions","getMappingAction","removeActionSelector","openActionSelector","removeActionToQueue","extraParams","dataAction","actionsToExecuteTitle","allowactions","calculateFilters","polymorphicLauncher","getPolymorphicActions","serializePolymorphicActions","totalActions","lessActions","templateArguments","allowSearch","treeActionsList","getTreeItems","bindHandlers","level","templateTreeItem","$targetData","guidObject","guidConstructor","onActionClicked","pageCache","maximized","$target","checkList","unique","random","itemId","onCheckListGroupChange","goal","activityDescription","newItemName","addEditButton","cancelEditButton","additionalElements","notifyLoadItems","resolvedItems","resolved","setItemLocalStorage","hasChanges","idActivity","itemsResolved","progress","activityWork","prepareNewItem","that","contentHolder","closest","itemPosition","repaintControl","itemSelectedName","itemContent","setSelectionRange","addSelectedHandlers","keypress","addItem","guidItem","checkListHtml","refreshValue","completed","floor","controlValueIsChanged","range","rangeDate","rangeMoney","minControl","getRenderProperties","maxControl","setRanageControls","typeRangeControl","renderProperties","resources","rangeNumber","applyOverrides","decorated","originalGetControl","tableCell","applyColumnStyles","isValueValid","propertyOverrides","getXpath","getDocumentXpath","getContextXpath","preRenderControl","xpathcontext","generateDocumentTemplate","autoOpenDocuments","xpathPath","deleteUploadFile","postRenderSummary","applyUploadPlugin","getUploadFileUrl","calculateInitialLayoutProperties","nameFile","idSession","refreshCell","gridChanges","tmpCheck","enabledChecks","overrideDecoratedRenderProperties","tmpDecorated","handleOfflineChange","simpleXpathArray","newChange","factory","loadTemplates","loadTemplate","getFileTemplate","tmplIcons","src","onDemand","detectDevice","formTemplate","usersForm","nestedForm","mobileform","mobilegroup","columnParams","isExtended","exclusiveCheck","override","hiddenControlsWithDataType","offline","uploadecm","old","enableQuerySuggestBehavior","entityTemplate","getSearchRender","getLayoutRender","getRangeRender","activityCheckList","mobiletext","layoutImage","layoutLink","layoutLabel","layoutText","layoutDateTime","layoutNumber","layoutMoney","layoutPlaceholder","layoutBoolean","layoutUpload"],"mappings":"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","sourcesContent":["function _typeof(obj) {\"@babel/helpers - typeof\";if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {_typeof = function _typeof(obj) {return typeof obj;};} else {_typeof = function _typeof(obj) {return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;};}return _typeof(obj);} /**\r\n                                                                                                                                                                                                                                                                                                                                                                                *   Name: Bizagi Tablet Search Slide view Implementation\r\n                                                                                                                                                                                                                                                                                                                                                                                *   Author: UI Forms Team\r\n                                                                                                                                                                                                                                                                                                                                                                                *   Comments:\r\n                                                                                                                                                                                                                                                                                                                                                                                *   -   This script will shows a sliding search form  order to edit\r\n                                                                                                                                                                                                                                                                                                                                                                                */\n\n// Extends itself\n$.Class.extend(\"bizagi.rendering.tablet.slide.searchForm\", {}, {\n\n  /**\r\n                                                                  * Constructor\r\n                                                                  */\n  init: function init(dataService, renderFactory, searchForms, searchParams, searchFormParams) {\n    var self = this;\n\n    self.dataService = dataService;\n    self.renderFactory = renderFactory;\n    self.searchForms = searchForms;\n    self.searchParams = searchParams;\n    self.searchFormParams = searchFormParams;\n\n    self.searchFormDeferred = new $.Deferred();\n\n    // Creates a container, be careful you must destroy it later\n    self.container = self.searchFormParams.navigation.createRenderContainer({ title: self.searchFormParams.title });\n  },\n\n  /**\r\n      * Render the form\r\n      * The params are the same that will be send to the ajax service\r\n      * @param {} params\r\n      * @returns {} Returns a deferred\r\n      */\n  render: function render(params) {\n    this.properties = params;\n\n    // Render the search form\n    this.renderSearchForm(params);\n\n    // Return promise\n    return this.searchFormDeferred.promise();\n  },\n\n  /**\r\n      * Render the search form\r\n      * @param {} params\r\n      * @returns {}\r\n      */\n  renderSearchForm: function renderSearchForm(params) {\n    var self = this;\n\n    bizagi.loading.start();\n\n    // Creates a dialog\n    $.when(self.getSearchContainerData(params)).then(function (data) {\n      if (data.form.properties) {\n        data.form.properties.orientation = self.searchParams.orientation || \"ltr\";\n      }\n\n      // Render dialog form\n      var form = self.renderFactory.getContainer({\n        type: \"form\",\n        data: data.form,\n        navigation: self.searchFormParams.navigation,\n        view_container: self.container });\n\n\n      form.buttons = self.getSearchButtons();\n\n      // Save form reference\n      self.form = form;\n\n      (Object.keys(form.children) || []).\n      map(function (key) {\n        form.children[key].params = $.extend({}, form.children[key].params, self.searchFormParams);\n      });\n\n      // Return rendering promise\n      return form.render();\n    }).done(function (element) {\n      var firstChild = self.form.firstChild();\n\n      // Append form in the slide view\n      self.container.element.html(element);\n      self.searchFormParams.navigation.navigate(self.container.id);\n\n      // Show action buttons\n      //self.container.setNavigationButtons(self.form);\n\n      // Publish an event to check if the form has been set in the DOM\n      self.form.triggerHandler(\"ondomincluded\");\n\n      // Set currents search form\n      self.currentSearchForm = firstChild;\n      self.currentSearchForm.triggerHandler(\"ondomincluded\");\n\n      self.currentSearchForm.bind(\"instancerefresh\", function () {\n        // Show search results container\n        self.searchResultContainer.show();\n      });\n\n      self.form.bind(\"refresh\", function (_, refreshParams) {\n        refreshParams.scrollTop = self.form.container.parent().scrollTop();\n        refreshParams = $.extend({\n          focus: focus,\n          selectedTabs: self.form.getSelectedTabs(),\n          isRefresh: true,\n          contextType: self.properties.contextType || \"\",\n          navigation: self.searchFormParams.navigation,\n          view_container: self.container },\n        refreshParams);\n\n        return self.renderSearchForm(refreshParams);\n      });\n\n      // Add row selected handlers to resolve the deferred\n      self.currentSearchForm.bind(\"instanceSelected\", function (ev, ui) {\n        // Close slide\n        self.goBack();\n\n        self.searchFormDeferred.resolve({ id: ui.id, label: \"\" });\n      });\n\n      // if is any modal view displayed, hide it to allow this search form been displayed\n      // self.handleSearchFormZindex(\"show\");\n\n      // Hide content\n      self.containerSearchCriteria = self.currentSearchForm.container.find(\".bz-container__search-criteria\");\n      self.searchResultContainer = $(\".bz-container__search-results\", element);\n      self.searchResultContainer.hide();\n\n    }).fail(function (error_obj) {\n      if (self.hasSessionFormException(error_obj)) {\n        self.goToStartPage(error_obj);\n      } else {\n        var errorTemplate = self.renderFactory.getCommonTemplate(\"form-error\");\n        var message = error_obj && error_obj.message ? error_obj.message : error_obj;\n\n        $($.fasttmpl(errorTemplate, { message: message })).\n        appendTo(self.container.element);\n\n        self.searchFormParams.navigation.navigate(self.container.id);\n      }\n    }).always(function () {\n      bizagi.loading.stop();\n    });\n  },\n\n  /**\r\n      * Get the addform and show it\r\n      * @param {} params\r\n      * @returns {}\r\n      */\n  renderAddForm: function renderAddForm(params) {\n    var self = this;\n    params = params || {};\n    var properties = self.properties;\n\n    if (typeof self.addContainer === \"undefined\") {\n      self.addContainer =\n      self.searchFormParams.navigation.createRenderContainer({\n        title: bizagi.localization.getResource(\"render-dialog-entity\") });\n\n\n      // Binds the view close event, and send the RollBack\n      self.addContainer.element.bind(\"close\", function () {\n        delete self.addContainer;\n      });\n    }\n\n    var isRefresh = params.isRefresh || false;\n\n    var getFormParams = {\n      idPageCache: params.idPageCache,\n      guidEntity: properties.entity,\n      contextType: \"entity\" };\n\n\n    if (isRefresh) {\n      getFormParams.isRefresh = true;\n      getFormParams.idStartScope = params.idStartScope;\n    } else {\n      getFormParams.idRender = properties.idRender;\n      getFormParams.requestedForm = \"addForm\";\n    }\n\n    bizagi.loading.start();\n\n    //Get the addform\n    $.when(self.dataService.getFormData(getFormParams)).then(function (data) {\n      if (params.editable === false) {\n        data.form.properties.editable = false;\n      }\n\n      if (data.form.properties) {\n        data.form.properties.orientation = self.searchParams.orientation || \"ltr\";\n      }\n\n      data.form.contextType = \"entity\";\n\n      var form = self.renderFactory.getContainer($.extend({}, self.addFormParams, {\n        type: \"form\",\n        data: data.form,\n        focus: params.focus || false,\n        selectedTabs: params.selectedTabs,\n        isRefresh: isRefresh,\n        requestedForm: params.requestedForm,\n        navigation: self.searchFormParams.navigation,\n        view_container: self.addContainer }));\n\n\n\n      form.buttons = self.getAddFormButtons(form);\n\n      $.extend(form, {\n        processButtons: function processButtons() {\n          //not send information set in memory and save\n\n          $.each(form.buttons, function (index, element) {\n            switch (element[\"ordinal\"]) {\n              case 1:\n                // Next button will behave as a cancel button\n                $(form.getButtons()[index]).click(function () {\n                  self.addContainer.destroy();\n                  delete self.addContainer;\n                });\n\n                form.getButtons()[index].innerHTML = bizagi.localization.getResource(\"render-form-dialog-box-close\");\n                form.buttons[index].caption = bizagi.localization.getResource(\"render-form-dialog-box-close\");\n                form.buttons[index].action = \"back\";\n\n                break;\n\n              default:\n                $(form.getButtons()[index]).click(function () {\n                  self.saveDataAddForm(form);\n\n                  self.addContainer.destroy();\n                  delete self.addContainer;\n                });\n                break;}\n\n          });\n        } });\n\n\n      (Object.keys(form.children) || []).\n      map(function (indicator) {\n        form.children[indicator].params = $.extend({}, form.children[indicator].params, self.addFormParams);\n      });\n\n      return $.when(form.render()).done(function (element) {\n        // Set currents search form\n        self.currentAddForm = form.firstChild();\n        self.addContainer.element.html(element);\n\n        if (!isRefresh) {\n          self.searchFormParams.navigation.navigate(self.addContainer.id, \"overlay:up\");\n        }\n\n        self.addContainer.setNavigationButtons(form);\n\n        form.triggerHandler(\"ondomincluded\");\n\n        // if is any modal view displayed, hide it to allow this search form been displayed\n        self.handleSearchFormZindex(\"show\");\n\n        form.bind(\"refresh\", function (_, refreshParams) {\n          refreshParams.scrollTop = self.form.container.parent().scrollTop();\n          refreshParams = $.extend({\n            focus: focus,\n            selectedTabs: self.form.getSelectedTabs(),\n            isRefresh: true,\n            contextType: self.properties.contextType || \"\",\n            navigation: self.searchFormParams.navigation,\n            view_container: self.addContainer },\n          refreshParams);\n\n          return self.renderAddForm(refreshParams);\n        });\n      });\n    }).fail(function (error) {\n      var error_obj = bizagi.util.getErrorFormatted(error);\n\n      if (self.hasSessionFormException(error_obj)) {\n        self.goToStartPage(error_obj);\n      } else {\n        self.addContainer.destroy();\n        delete self.addContainer;\n      }\n    }).always(function () {\n      bizagi.loading.stop();\n    });\n  },\n\n  /**\r\n      * Save data to add form\r\n      * @param {} form\r\n      * @returns {}\r\n      */\n  saveDataAddForm: function saveDataAddForm(form) {\n    var self = this;\n    var defer = $.Deferred();\n\n    if (form.validateForm()) {\n      var data = {};\n      $.forceCollectData = true;\n\n      form.collectRenderValues(data);\n      data.idPageCache = form.idPageCache;\n\n      var params = {\n        action: \"SAVE\",\n        data: data,\n        idPageCache: data.idPageCache,\n        guidEntity: form.properties.entity,\n        contexttype: \"entity\" };\n\n\n      // Check if the add form has data\n      var formData = {};\n\n      form.collectRenderValuesForSubmit(formData);\n\n      // Turn off flag\n      $.forceCollectData = false;\n\n      if (!bizagi.util.isMapEmpty(formData)) {\n\n        bizagi.loading.start();\n\n        $.when(self.dataService.submitData(params)).done(function (response) {\n          function dataHasXpath(xpath) {\n            var render = self.currentSearchForm.getRender(xpath);\n            if (_typeof(render) === \"object\" && render !== null)\n            return { \"found\": true, \"obj\": render };\n            return { \"found\": false, \"obj\": {} };\n          }\n\n          if (response && response.type === \"validationMessages\") {\n            form.addValidationMessage(response.messages);\n            defer.reject();\n          } else {\n\n            for (var i in formData) {\n              var mapping = dataHasXpath(i);\n              if (mapping.found) {\n                mapping.obj.setValue(formData[i]);\n                self.setDisplayValueToControl(mapping.obj, form, i, formData);\n              }\n            }\n\n            defer.resolve();\n          }\n        }).fail(function (error) {\n          var error_obj = bizagi.util.getErrorFormatted(error);\n\n          if (self.hasSessionFormException(error_obj)) {\n            self.goToStartPage(error_obj);\n          } else {\n            var message = error_obj.message || bizagi.localization.getResource(\"workportal-general-error\");\n\n            form.addValidationMessage(message);\n          }\n\n          defer.reject();\n        }).always(function () {\n          bizagi.loading.stop();\n        });\n      } else {\n        // Form has not data\n        bizagi.showMessageBox(bizagi.localization.getResource(\"render-search-advanced-no-filters\"));\n        defer.reject();\n      }\n    } else {\n      defer.reject();\n    }\n\n    return defer.promise();\n  },\n\n  /***\r\n      * Set display value by control type, when add new record\r\n      * @param renderControlSearchForm\r\n      * @param addForm\r\n      * @param xpath\r\n      * @param formData\r\n      */\n  setDisplayValueToControl: function setDisplayValueToControl(renderControlSearchForm, addForm, xpath, formData) {\n    if (renderControlSearchForm.properties.type === \"searchSuggest\") {\n      renderControlSearchForm.setDisplayValue(addForm.getRender(xpath).getDisplayValue());\n    } else {\n      renderControlSearchForm.setDisplayValue(formData[xpath]);\n    }\n  },\n\n  /**\r\n      * Get navigation buttons\r\n      */\n  getSearchButtons: function getSearchButtons() {\n    var self = this;\n\n    // Set initial actions\n    var searchFormOptions = [{\n      ordinal: 1,\n      action: \"search\",\n      caption: bizagi.localization.getResource(\"render-form-dialog-box-search\"),\n      callback: function callback() {\n        self.currentSearchForm.performSearch(self.searchParams);\n      } },\n    {\n      ordinal: 2,\n      action: \"cancel\",\n      caption: \"cancel\",\n      callback: function callback() {\n        // Close slide\n        self.goBack();\n      } }];\n\n\n    if (self.searchFormParams.allowNew) {\n      searchFormOptions.push({\n        ordinal: 3,\n        action: \"add\",\n        caption: bizagi.localization.getResource(\"render-form-dialog-box-add\"),\n        callback: function callback() {\n          var params = {\n            idCase: self.searchFormParams.idCase,\n            idRender: self.properties.idRender,\n            displayName: self.properties.displayName,\n            idPageCache: self.properties.idPageCache };\n\n\n          self.renderAddForm(params);\n        } });\n\n    }\n\n    return searchFormOptions;\n\n  },\n\n  /**\r\n      * Creates the search dialog sub-containers\r\n      * @param {} params\r\n      * @returns {}\r\n      */\n  getSearchContainerData: function getSearchContainerData(params) {\n    var self = this;\n    var deferred = new $.Deferred();\n    var data = {\n      form: {\n        properties: {},\n        elements: [] } };\n\n\n\n    var container = data.form;\n    var searchFormToLoad = self.searchForms[0];\n\n    // When there are more than one search form, render a tab container\n    if (self.searchForms.length > 1) {\n\n      var tabContainer = {\n        properties: {\n          type: \"tab\" },\n\n        elements: [] };\n\n\n      var otherElements = [];\n\n      $.each(self.searchForms, function (i, searchForm) {\n        var isDefault = searchForm[\"default\"] || false;\n\n        // Create tab item\n        var tab = {\n          properties: {\n            id: i,\n            type: \"tabItem\",\n            displayName: searchForm.caption },\n\n          elements: [] };\n\n\n        // Append children\n        if (isDefault) {\n\n          tabContainer.elements.push({ container: tab });\n\n          // Set properties to load default container\n          container = tab;\n          searchFormToLoad = self.searchForms[0];\n\n        } else {\n          otherElements.push({ container: tab });\n        }\n      });\n\n      // Append no defaults elements\n      $.each(otherElements, function (i, element) {\n        tabContainer.elements.push(element);\n      });\n\n      data.form.elements.push({\n        container: tabContainer });\n\n    }\n\n    bizagi.loading.start();\n\n    // Loads default form\n    $.when(self.getSearchFormData(params, searchFormToLoad)).\n    done(function (searchFormData) {\n      container.elements.push(searchFormData);\n      container.properties.id = Math.guid();\n\n      // Resolve deferred\n      deferred.resolve(data);\n    }).fail(function (error) {\n      var message = bizagi.util.getErrorFormatted(error);\n      deferred.reject(message);\n    }).always(function () {\n      bizagi.loading.stop();\n    });\n\n    return deferred.promise();\n  },\n\n  /**\r\n      * Loads a search form\r\n      * @param {} params\r\n      * @param {} searchForm\r\n      * @returns {}\r\n      */\n  getSearchFormData: function getSearchFormData(params, searchForm) {\n    var self = this;\n\n    return self.dataService.getSearchFormData($.extend(params, {\n      idSearchForm: searchForm.id,\n      url: searchForm.url })).\n    pipe(function (data) {\n      // Append search render properties\n      data.form.properties.idRender = params.idRender;\n\n      return data;\n    });\n  },\n\n  /**\r\n      * Go back and destroy\r\n      * @returns {}\r\n      */\n  goBack: function goBack() {\n    this.handleSearchFormZindex(\"hide\");\n    this.container.destroy();\n  },\n\n  /**\r\n      * Show modal view\r\n      * @param option\r\n      */\n  handleSearchFormZindex: function handleSearchFormZindex(option) {\n    // If there is an open modal, change z-index to make searchForm visible\n    var modalViewDisplayed = $.grep($(\".km-modalview-root\"), function (n) {\n      return $(n).css(\"display\") === \"block\";\n    });\n\n    if (modalViewDisplayed.length > 0) {\n      var index = option === \"show\" ? 0 : 10001;\n      $(modalViewDisplayed).css(\"z-index\", index);\n    }\n  },\n\n  /**\r\n      * Idle timer expired exception\r\n      * @param error\r\n      * @returns {boolean}\r\n      */\n  hasSessionFormException: function hasSessionFormException(error) {\n    return typeof error !== \"undefined\" && error.code === \"AUTH_ERROR\";\n  },\n\n  /**\r\n      * Navigate to main page\r\n      * @param error\r\n      */\n  goToStartPage: function goToStartPage(error) {\n    if (this.searchFormParams.navigation) {\n      this.searchFormParams.navigation.goToStartPage(error);\n    }\n  },\n\n  /**\r\n      * Get buttons for Add form\r\n      * @param form\r\n      * @returns {[*, *]}\r\n      */\n  getAddFormButtons: function getAddFormButtons(form) {\n    var self = this;\n\n    return [\n    $.extend(form.buttons[0] || {}, {\n      \"caption\": bizagi.localization.getResource(\"render-form-dialog-box-save\"),\n      \"actions\": [\"submitData\", \"refresh\"],\n      \"submitData\": true,\n      \"refresh\": true,\n      \"ordinal\": 0,\n      \"action\": \"save\",\n      \"save\": true,\n      \"style\": \"\" },\n    {\n      //This callback avoid to call the default processButton in the form\n      callback: function callback() {\n        // When the data is saved then\n        self.saveDataAddForm(form).done(function () {\n\n          self.addContainer.destroy();\n          delete self.addContainer;\n\n          // TIMER: Prevent the Form is locked if not destroy the addForm\n          setTimeout(function () {\n            // Force a search after a new item is created!\n            self.currentSearchForm.performSearch(self.searchParams);\n          }, 350);\n        });\n      } }),\n\n    $.extend(form.buttons[1] || {}, {\n      \"caption\": bizagi.localization.getResource(\"render-form-dialog-box-close\"),\n      \"actions\": [\"submitData\", \"refresh\"],\n      \"submitData\": true,\n      \"refresh\": true,\n      \"ordinal\": 1,\n      \"action\": \"back\",\n      \"save\": true,\n      \"style\": \"\" },\n    {\n      // This callback avoid to call the default processButton in the form\n      callback: function callback() {\n        self.addContainer.destroy();\n        delete self.addContainer;\n      } })];\n\n\n  } });","function _typeof(obj) {\"@babel/helpers - typeof\";if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {_typeof = function _typeof(obj) {return typeof obj;};} else {_typeof = function _typeof(obj) {return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;};}return _typeof(obj);} /**\r\n                                                                                                                                                                                                                                                                                                                                                                                *   Name: Bizagi Tablet Render option select\r\n                                                                                                                                                                                                                                                                                                                                                                                *   Author: UI Forms Team\r\n                                                                                                                                                                                                                                                                                                                                                                                *   Comments:\r\n                                                                                                                                                                                                                                                                                                                                                                                *   -   Renders an option html input with attached handlers\r\n                                                                                                                                                                                                                                                                                                                                                                                */\n\n// Extends from render tablet base\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.combo\", bizagi.rendering.combo.prototype);\n// Extends itself\nbizagi.rendering.tablet.combo.extend(\"bizagi.rendering.tablet.combo\", {\n  /*\r\n                                                                         *   Template method to implement in each children to customize each control\r\n                                                                         */\n  renderControl: function renderControl() {\n    var template = this.renderFactory.getTemplate(\"combo\");\n\n    return $.fasttmpl(template, {\n      editable: this.properties.editable,\n      value: this.getDisplayValue() });\n\n\n  },\n\n\n  // /* \n  //  *   Gets the display value of the render\n  // */\n  getDisplayValue: function getDisplayValue() {\n    var self = this;\n    var displayValue = \"\";\n    var item = self.getValue();\n\n    if (self.combo && self.combo.length > 0) {\n      // When there is a combo painted, we fetch the selected value from it\n      item = self.getSelectedValue();\n    }\n\n    if (item) {\n      // Check on cached propert from server first if the key exists\n      displayValue = self.formatItem(item.value);\n    }\n\n    return displayValue;\n  },\n\n  postRender: function postRender() {\n    var $control = this.getControl();\n\n    this._super();\n\n    this.combo = $control.find(\"input\");\n    this.itemSelected = undefined;\n  },\n\n  /**\r\n      * Method to render non editable values\r\n      * @returns {*|jQuery}\r\n      */\n  renderReadOnly: function renderReadOnly() {\n    var template = this.renderFactory.getTemplate(\"readonly\");\n\n    return $.fasttmpl(template, { value: this.getDisplayValue() });\n  },\n\n  /**\r\n      * Method to customize each render after processed in read-only mode\r\n      */\n  postRenderReadOnly: function postRenderReadOnly() {\n    var $control = this.getControl();\n    this.combo = $control.find(\"input\");\n  },\n\n  /**\r\n      * Add event handlers to the combo control\r\n      */\n  configureHandlers: function configureHandlers() {\n    var self = this;\n    var control = self.getControl();\n\n    if (self.getMode() !== \"execution\") {\n      return;\n    }\n\n    $(\".bz-form-combo\", control).bind(\"click\", function () {\n\n      $(this).mobileView({\n        customHeader: $.fasttmpl(self.renderFactory.getTemplate(\"modal-header-search\"), {\n          hideSearch: self.properties.enableTyping === false }),\n\n        displayName: self.properties.displayName || \"\",\n        orientation: self.properties.orientation || \"\",\n        contentTemplate: \"\",\n        style: \"width: 80%; height: 70%\",\n\n        close: function close() {\n          self.triggerGlobalHandler(\"modalViewDidDisappear\", {});\n        },\n\n        open: function open() {\n          self.triggerGlobalHandler(\"closeModalValidationMessage\", {});\n          self.triggerGlobalHandler(\"modalViewDidAppear\", {});\n        },\n\n        configureActions: function configureActions(modalView) {\n          var params = {};\n\n          if (self.isDependant && self.properties && /cascadingcombo/i.test(self.properties.type) && self.getParentCombo) {\n            var parentValue = self.getParentCombo().getValue();\n            if (parentValue && parentValue.id) {\n              params[self.Class.BA_ACTION_PARAMETER_PREFIX + \"parent\"] = parentValue.id;\n            }\n          }\n\n          $.when(self.renderCombo(params)).done(function (list) {\n            $(\".bz-modal-view__content\", modalView.content).html(list);\n            self.configureModalViewHandlers(modalView);\n          });\n        } });\n\n    });\n\n  },\n\n  processComboData: function processComboData(data) {\n    var self = this;\n    data.forEach(function (value) {\n      self.validateValue(value);\n    });\n  },\n\n  /**\r\n      * Setting the display value, always you call a setDisplayValue yor are performing a setValue under the hood.\r\n      * */\n  setDisplayValue: function setDisplayValue(value) {\n    var comboValue = \"\";\n\n    value = this.mapValue(value);\n    value = this.preprocessValue(value);\n\n    if (value && _typeof(value) === \"object\" && typeof value.label !== \"undefined\") {\n\n      if (!bizagi.util.isEmpty(value.label)) {\n        comboValue = value.label;\n      } else {\n        var selected = this.findDataValueById(value.id);\n        comboValue = selected ? selected.value : \"\";\n      }\n\n      if ($.isArray(comboValue)) {\n        comboValue = comboValue.join(\" - \");\n      }\n\n      value = { \"id\": value.id, \"value\": comboValue };\n    }\n\n    if (this.properties.editable) {\n      this.combo.val(this.formatItem(value.value));\n    } else {\n      var control = this.getControl();\n      $(\".bz-input\", control).html(this.formatItem(value.value));\n    }\n\n    //Set Value\n    this.selectedValue = value;\n    this.setValue(value);\n  },\n\n  /**\r\n      * Set the handlers for the modal elements\r\n      * @param modalView full modal object\r\n      */\n  configureModalViewHandlers: function configureModalViewHandlers(modalView) {\n    var self = this;\n\n    $(\".bz-list__item\", modalView.content).on(\"click\", function () {\n      var valueObjet = {\n        \"id\": $(this).data(\"value\"),\n        \"value\": $(this).text() };\n\n\n      if (valueObjet.id == \"\") {\n        valueObjet.value = \"\";\n      }\n\n      self.itemSelected = true; //must be before the setDisplayValue\n      self.setDisplayValue(valueObjet);\n      self.trigger(\"select\", [valueObjet, false]);\n      modalView.close();\n    });\n\n    $(\"[data-action=close]\", modalView.header).bind(\"click\", function () {\n      modalView.close();\n    });\n\n    if (this.properties.enableTyping) {\n\n      var $elementsList = $(\".bz-list li\", modalView.content);\n      var $clearButton = $(\".bz-modal-view__clear\", modalView.header);\n      var $searchInput = $(\".bz-modal-view__search\", modalView.header);\n\n      $clearButton.bind(\"click\", function () {\n        $searchInput.val(\"\").trigger(\"change\");\n      });\n      // Filtering list\n      $searchInput.on(\"change keyup\", function () {\n        if (this.value == \"\") {\n          $clearButton.removeClass(\"bz-modal-view__clear--visible\");\n        } else {\n          $clearButton.addClass(\"bz-modal-view__clear--visible\");\n        }\n        self.filterList(this.value, $elementsList);\n      }).on(\"focus\", function () {\n        modalView.header.addClass(\"bz-modal-view__header--active\");\n      }).on(\"blur\", function () {\n        modalView.header.removeClass(\"bz-modal-view__header--active\");\n      });\n\n    }\n  },\n\n  cleanData: function cleanData() {\n    var value = { id: \"\", value: \"\" };\n    //Set Value\n    this.value = this.properties.value = this.selectedValue = value;\n    var control = this.getControl();\n    $(\"input\", control).val(this.formatItem(value.value));\n  },\n\n  /**\r\n      * Filtering list of elements\r\n      * @returns {}\r\n      */\n  filterList: function filterList(search, $li) {\n\n    $li.filter(function () {\n      var stringContainer = $(this).text().toUpperCase();\n      var stringToSearch = search.toUpperCase();\n\n      if (stringContainer.indexOf(stringToSearch) >= 0) {\n        return $(this);\n      } else {\n        $(this).hide();\n      }\n    }).show();\n  },\n\n  /**\r\n      * Print the list of elements to show in the modal\r\n      * @param {object} data list of elements to print\r\n      */\n  renderComboTemplate: function renderComboTemplate(data) {\n    var template = this.renderFactory.getTemplate(\"combo-list\");\n    var value = this.getValue();\n    value = value !== null && typeof value !== \"undefined\" ? value : { \"id\": \"\", \"value\": \"\" };\n\n    return $.fasttmpl(template, {\n      \"items\": data,\n      \"selectedId\": value.id,\n      \"hasItems\": data.length > 0 },\n    {\n      \"validateItem\": this.validateValue });\n\n  },\n\n  /**\r\n      * Returns the selected value in the template\r\n      * @returns {{id: *, value: *}}\r\n      */\n  getSelectedValue: function getSelectedValue() {\n    return this.selectedValue;\n  }\n\n  /* getElementsToStylize: function ($context) {\r\n        return this.properties.editable ? $(\"input\", $context) : $(\".readonly-control\", $context);\r\n    } */ });","function _typeof(obj) {\"@babel/helpers - typeof\";if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {_typeof = function _typeof(obj) {return typeof obj;};} else {_typeof = function _typeof(obj) {return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;};}return _typeof(obj);} /**\r\n                                                                                                                                                                                                                                                                                                                                                                                *   Name: Bizagi Tablet Render Grid Extension\r\n                                                                                                                                                                                                                                                                                                                                                                                *   Author: UI Forms Team\r\n                                                                                                                                                                                                                                                                                                                                                                                *   Comments:\r\n                                                                                                                                                                                                                                                                                                                                                                                *   -   This script will redefine the grid render class to adjust to tablet devices\r\n                                                                                                                                                                                                                                                                                                                                                                                */\n\n// Extends from render tablet base\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.grid\", bizagi.rendering.grid.prototype);\n// Extends itself\nbizagi.rendering.tablet.grid.extend(\"bizagi.rendering.tablet.grid\", {\n  GRID_PAGE_SIZE: 10 },\n{\n\n  MIN_SUPPORTED_WIDTHS: {\n    LIST: [\n    {\n      minimum: 28,\n      appliesTo: [\"label\", \"readonly\", \"checkboxBoolean\"] },\n\n    {\n      minimum: 42,\n      appliesTo: [\"text\", \"formlink\", \"money\", \"number\", \"button\", \"link\"] },\n\n    {\n      minimum: 66,\n      appliesTo: [\"boolean\", \"radio\"] },\n\n    {\n      minimum: 74,\n      appliesTo: [\"combo\", \"date\", \"list\", \"search\", \"suggest\", \"userfield\", \"image\", \"upload\", \"uploadecm\", \"document\"] },\n\n    {\n      minimum: 132,\n      appliesTo: [\"horizontalRadio\"] }],\n\n\n    get: function get(controlType) {\n      var defaultWidth = this.LIST.find(function (item, index) {\n        return item.appliesTo.includes(controlType);\n      });\n      return defaultWidth && defaultWidth.minimum || 42;\n    } },\n\n\n  /**\r\n          * Constructor\r\n          * @param params\r\n          */\n  init: function init(params) {\n    var self = this;\n    var data = params.data;\n\n    // Create a single instance for each cell\n    data.properties.singleInstance = false;\n\n    // Call base\n    this._super(params);\n\n    // Create a data-structure to keep track of each cell properties\n    this.cellMetadata = {};\n\n    // Check if offline forms is supported\n    this.isOfflineForm = bizagi.util.isOfflineForm({ context: self });\n\n    // Fill default properties\n    var properties = this.properties;\n    var form = self.getFormContainer();\n\n    // If not helptext configured, Just apply display-type: vertical, align it to the left\n    if (self.properties.helpText && self.properties.helpText != null && self.properties.helpText != \"\") {\n      properties.displayType = \"value\";\n    } else {\n      properties.displayType = \"vertical\";\n    }\n\n    properties.labelAlign = \"left\";\n\n    if (properties.groupBy || properties.groupSummary) {\n      // Add warning\n      form.addWarning(self.getResource(\"render-tablet-warning-grid\"));\n    }\n  },\n\n  /**\r\n      * Update or init the element data\r\n      * @param data\r\n      */\n  initializeData: function initializeData(data) {\n\n    // Create a single instance for each cell\n    data.properties.singleInstance = false;\n\n    // Call base\n    this._super(data);\n\n    // Create a collection to save grid cell changes to execute after it is loaded\n    this.pendingActions = [];\n  },\n\n  initAddAndDeleteProperties: function initAddAndDeleteProperties(editable, allowAdd, inlineAdd, allowDelete) {\n    if (this.properties.type == \"groupedgrid\") {\n      inlineAdd = bizagi.util.parseBoolean(inlineAdd) != null ? bizagi.util.parseBoolean(inlineAdd) : false;\n    }\n\n    return this._super(editable, allowAdd, inlineAdd, allowDelete);\n  },\n\n  /**\r\n      * Updates manually the affected cell\r\n      */\n  updateAffectedCellManually: function updateAffectedCellManually() {\n  },\n\n  /**\r\n      * Get the row index using the key as a reference\r\n      */\n  getRowIndexByKey: function getRowIndexByKey() {\n  },\n\n  /**\r\n      * Template method to implement in each device to customize each render after processed\r\n      */\n  postRender: function postRender() {\n    var self = this;\n    var properties = self.properties;\n    var control = self.getControl();\n\n    self.initialLoadDone = false;\n\n    // Call base \n    self._super();\n\n    // Find component holder\n    self.grid = $(\">div\", control);\n\n    // Hide common label\n    self.getLabel().hide();\n\n    // Grid plugin\n    self.applyGridPlugin();\n\n    // Set initial data\n    if (properties.data) {\n      if (properties.data === \"\" || properties.data.rows.length === 0 && properties.data.page > 1) {\n        self.fetchData(undefined, self.sortBy, self.sortType);\n      } else {\n        self.updateData(properties.data);\n\n        // Trigger change in order to start up the actions when the controls is ready\n        $.when(self.ready()).done(function () {\n          self.triggerRenderChange({ changed: false });\n        });\n      }\n    }\n\n    // Execute pending actions\n    self.initialLoadDone = true;\n    for (var i in self.pendingActions) {\n      if (self.pendingActions.hasOwnProperty(i)) {\n        self.pendingActions[i].method.apply(self, self.pendingActions[i].arguments);\n      }\n    }\n  },\n\n  /**\r\n      * Method to render non editable values\r\n      * @returns {}\r\n      */\n  applyGridPlugin: function applyGridPlugin() {\n    var self = this;\n    var properties = self.properties;\n    var mode = self.getMode();\n    var grid = self.grid;\n\n    // Build column metadata\n    var columns = self.buildColumnModel();\n\n    var columnsTotalizers = (columns || []).filter(function (item) {\n      return item.summarizeBy;\n    });\n\n    // Apply grid plugin\n    grid.bizagi_grid_tablet({\n      columns: columns,\n      subType: properties.subType || grid,\n      title: properties.displayName,\n      isOfflineForm: self.isOfflineForm || false,\n      mode: mode,\n      isSortable: properties.isSortable,\n      sortBy: properties.sortBy || \"\",\n      template: {\n        grid: self.renderFactory.getTemplate(\"bizagi.grid.grid\"),\n        waiting: self.renderFactory.getTemplate(\"bizagi.grid.waiting\"),\n        table: self.renderFactory.getTemplate(\"bizagi.grid.table\"),\n        emptyTable: self.renderFactory.getTemplate(\"bizagi.grid.table.empty\"),\n        column: self.renderFactory.getTemplate(\"bizagi.grid.column\"),\n        specialColumn: self.renderFactory.getTemplate(\"bizagi.grid.column.special\"),\n        row: self.renderFactory.getTemplate(\"bizagi.grid.row\"),\n        rowButtons: self.renderFactory.getTemplate(\"bizagi.grid.row.buttons\"),\n        cell: self.renderFactory.getTemplate(\"bizagi.grid.cell\"),\n        specialCell: self.renderFactory.getTemplate(\"bizagi.grid.cell.special\"),\n        pager: self.renderFactory.getTemplate(\"bizagi.grid.pager\"),\n        buttons: self.renderFactory.getTemplate(\"bizagi.grid.buttons\"),\n        dynamicPager: self.renderFactory.getTemplate(\"bizagi.grid.dynamicpager\"),\n        totalizer: self.renderFactory.getTemplate(\"bizagi.grid.totalizer\") },\n\n      actions: {\n        add: properties.allowAdd, //|| properties.inlineAdd,\n        edit: properties.allowEdit && properties.withEditForm && properties.data != null || properties.subType === \"adhocGrid\" && properties.allowEdit,\n        details: properties.allowDetail,\n        remove: properties.allowDelete,\n        inlineAdd: false, //properties.inlineAdd,\n        allowMore: properties.allowMore,\n        enableXlsExport: false,\n        enablePdfExport: false,\n        hasTotalizer: columnsTotalizers && columnsTotalizers.length > 0 && properties.data.rows.length > 0 },\n\n      pageRequested: function pageRequested(ui) {\n        if (!self.isExecutionMode()) return;\n\n        var hasColumnChanges = self.changes && Object.keys(self.changes).length >= 1 ||\n        self.exclusiveChanges && Object.keys(self.exclusiveChanges).length >= 1;\n\n        if (!self.isSummaryOrGlobalForm() && hasColumnChanges) {\n          $.when(self.getFormContainer().saveForm()).done(function () {\n            self.fetchData(ui.page, ui.sortBy, ui.sortType);\n          });\n        } else {\n          self.fetchData(ui.page, ui.sortBy, ui.sortType);\n        }\n\n      },\n      sortRequested: function sortRequested(ui) {\n        if (!self.isExecutionMode()) return;\n        self.fetchData(ui.page, ui.sortBy, ui.sortType);\n      },\n      drawCell: function drawCell(ui) {\n        return self.drawCell(ui.column, ui.key, ui.value, ui.isNewRow);\n      },\n      cellReady: function cellReady(ui) {\n        return self.onCellReady(ui.column, ui.key, ui.cell, ui.isNewRow);\n      },\n      rowSelected: function rowSelected(ui) {\n        if (!self.isExecutionMode()) return;\n        self.triggerHandler(\"rowSelected\", { id: ui.key, data: ui });\n      },\n      addRow: function addRow(ui) {\n        if (!self.isExecutionMode()) return;\n        if (self.properties.subType === \"adhocGrid\" || self.properties.inlineAdd) {\n          self.addVirtualRow();\n        } else {\n          self.addRow();\n        }\n      },\n      editRow: function editRow(ui) {\n        if (!self.isExecutionMode()) return;\n        if (self.properties.subType === \"adhocGrid\") {\n          self.editVirtualRow(ui.key);\n        } else {\n          self.editRow(ui.key);\n        }\n      },\n      deleteRow: function deleteRow(ui) {\n        if (!self.isExecutionMode()) return;\n        self.deleteRow(ui.key);\n      },\n      moreRows: function moreRows(ui) {\n        if (!self.isExecutionMode()) return;\n        self.moreRows(ui);\n      },\n      showFormDetails: function showFormDetails(ui) {\n        self.showDetailForm(ui.key);\n      },\n      showMore: function showMore(ui) {\n        if (!self.isExecutionMode()) return;\n        self.showMore(ui.key);\n      },\n      totalData: function totalData(ui) {\n        if (!self.isExecutionMode()) return;\n        self.onTotalData();\n      } });\n\n\n  },\n\n  /**\r\n      * Method to render non editable values\r\n      */\n  postRenderReadOnly: function postRenderReadOnly() {\n    // Do the same as the post-render            \n    this.postRender();\n  },\n\n  /**\r\n      *   Creates the column model required to initialize the grid plugin\r\n      */\n  buildColumnModel: function buildColumnModel() {\n    var self = this;\n    var columns = self.columns;\n\n    // Create id column first\n    var keyColumn = {\n      name: \"id\",\n      index: 0,\n      label: \"id\",\n      hidden: true,\n      align: \"center\",\n      required: false,\n      key: true };\n\n\n    // Add to column model\n    var columnModel = [];\n    columnModel.push(keyColumn);\n\n    $.each(columns, function (index, column) {\n\n      // Set grid column\n      column.columnIndex = index + 1;\n\n      var dataType = bizagi.util.normalizeType(column.properties.type);\n      var columnLabel = !bizagi.util.isEmpty(column.properties.displayName) ? column.properties.displayName : \" \";\n      var gridColumn = {\n        name: column.properties.xpath,\n        index: index + 1,\n        label: columnLabel,\n        required: column.properties.required || false,\n        key: false,\n        hidden: !column.properties.visible || /columnHidden/i.test(dataType) || column.properties.columnVisible == false,\n        summarizeBy: column.properties.totalize && column.properties.totalize.operation ? column.properties.totalize.operation : undefined,\n        bizAgiProperties: column.properties };\n\n\n      columnModel.push(gridColumn);\n    });\n\n    return columnModel;\n  },\n\n  /**\r\n      * Makes the grid to refresh\r\n      */\n  refresh: function refresh() {\n    this.fetchData();\n  },\n\n  /*\r\n     *   Holds the execution until the grid data is ready after a load operation\r\n     */\n  dataReady: function dataReady() {\n    return this.dataReadyDeferred != null ? this.dataReadyDeferred.promise() : null;\n  },\n\n  /*\r\n     * Update data from local changes\r\n     */\n  loadChanges: function loadChanges(rows) {\n    var self = this;\n\n    // Get data from the rows\n    for (var rowIndex = 0; rowIndex < rows.length; rowIndex++) {\n      var rowChanges = self.changes[rows[rowIndex][0]];\n      if (self.exclusiveChanges) {\n        rowChanges = $.extend(rowChanges || {}, self.getExclusiveChangeByRow(rows[rowIndex][0]));\n      }\n      // Search for changes\n      if (rowChanges !== undefined) {\n        // Update all rowChanges in data\n        for (var xpath in rowChanges) {\n          if (rowChanges.hasOwnProperty(xpath)) {\n            var columnData = self.getColumn(xpath);\n            rows[rowIndex][columnData.columnIndex] = self.mapChangeValue(columnData.properties.type, rowChanges[xpath], columnData.comboData);\n          }\n        }\n      }\n    }\n  },\n\n  /**\r\n      * Mapper to data changes\r\n      * @param type\r\n      * @param change\r\n      * @param data\r\n      * @returns {(*|number)[][]}\r\n      */\n  mapChangeValue: function mapChangeValue(type, change, data) {\n    data = data || [];\n    var value = change;\n\n    if (change !== null && typeof change !== \"undefined\") {\n      if (/columnCombo/i.test(type) || /columnRadio/i.test(type)) {\n        if (!bizagi.util.isArray(change)) {\n          var item = data.find(function (el) {\n            return el.id == change;\n          });\n\n          if (item) {\n            value = [[item.id, item.value]];\n          }\n        }\n      }\n    }\n\n    return value;\n  },\n\n  /*\r\n     *   Method to set data and update the grid\r\n     */\n  updateData: function updateData(data) {\n    var self = this;\n    var grid = self.grid;\n    var columns = self.columns;\n\n    // Set value in control\n    if (data) {\n      self.properties.data = data;\n\n      self.setCellOverrides(data, columns);\n      self.triggerGridPluginHandler(\"setData\", data);\n      self.applyColumnsWidth(grid, columns);\n    }\n  },\n\n  /*\r\n     *   Method to fetch data from the server and then update the data\r\n     */\n  fetchData: function fetchData(page, sortBy, sortType) {\n    var self = this;\n    var properties = self.properties;\n\n    self.dataReadyDeferred = new $.Deferred();\n\n    // Define defaults\n    page = page || properties.page || 1;\n    sortBy = sortBy || properties.sortBy || \"\";\n    sortType = sortType || properties.sortOrder || \"asc\";\n\n    // Update control properties\n    properties.page = page;\n    properties.sortBy = sortBy;\n    properties.sortType = sortType;\n    properties.sort = sortBy + \" \" + sortType;\n\n    // Start loading to avoid multiple calls to the server\n    self.startLoading();\n\n    $.when(self.getRemoteData()).\n    then(function (data) {\n      if (data) {\n        if (data.deviceMaxRecordsExceeded) {\n          bizagi.showMessageBox(bizagi.localization.getResource(\"render-search-maximum-records-allowed\"));\n        } else {\n          if (self.isRTL()) {\n            data.rows = self.changeOrderData(data.rows);\n          }\n\n          self.loadChanges(data.rows);\n          self.updateData(data);\n\n          self.triggerRenderChange({ changed: false });\n\n          self.dataReadyDeferred.resolve();\n        }\n      }\n    }).always(function () {\n      self.endLoading();\n    });\n  },\n\n  /*\r\n     *   Add the render data to the given collection in order to send data to the server\r\n     */\n  collectData: function collectData(renderValues) {\n    var self = this;\n    var grid = self.grid;\n\n    // Save pending inline add rows\n    if (self.grid && (self.properties.inlineAdd || self.properties.inlineEdit)) {\n      var newKeys = grid.bizagi_grid_tablet.hasOwnProperty(\"getNewRowKeys\") ? grid.bizagi_grid_tablet(\"getNewRowKeys\") : [];\n\n      // Save new rows then save the whole screen\n      if (newKeys.length > 0 && !self.properties.alreadySaved && self.isValid()) {\n        var saveDeferred = self.saveInlineAddedRows(newKeys, true);\n\n        // Add to deferred collections in order to sync when saving\n        renderValues.deferreds = renderValues.deferreds || [];\n        renderValues.deferreds.push(saveDeferred);\n      }\n\n      // Remove adding keys from current changes\n      for (var i = 0; i < newKeys.length; i++) {\n        if (self.changes[newKeys[i]]) {\n          delete self.changes[newKeys[i]];\n        }\n      }\n    }\n\n    // Call base method\n    self._super(renderValues);\n  },\n\n  /**\r\n      * Customizes the content drawing inside the cell\r\n      * @param column\r\n      * @param key\r\n      * @param value\r\n      * @param isNewRow\r\n      * @returns {string|*}\r\n      */\n  drawCell: function drawCell(column, key, value, isNewRow) {\n    var self = this;\n\n    if (column.key) return value;\n\n    // Get render column\n    var columnIndex = column.index - 1;\n    var cellOverride = self.getCellOverride(key, columnIndex);\n    var renderColumn = self.columns[columnIndex];\n\n    // Data with null records\n    self.newRecords = self.newRecords || {};\n\n    // Get cell properties\n    if (!self.cellMetadata[key]) self.cellMetadata[key] = {};\n    if (!self.cellMetadata[key][columnIndex]) self.cellMetadata[key][columnIndex] = {};\n\n    var properties = self.cellMetadata[key][columnIndex].properties || renderColumn.properties;\n    properties.editable = bizagi.util.parseBoolean(properties.editable) || false;\n    var visible = properties.visible !== undefined ? properties.visible : true;\n    var editable = properties.editable !== undefined ? properties.editable : true;\n\n    // Apply overrides from cellOverrides\n    visible = cellOverride.visible;\n    editable = properties.editable ? cellOverride.editable : false;\n\n    // Show editable cell when we are performing inline add operation\n    if (isNewRow) editable = true;\n\n    renderColumn.properties.displayType = \"value\";\n    renderColumn.setSurrogateKey(key);\n\n    // If the cell we are drawing is the summary cell, we need to make it readonly\n    if (key === \"summary\") {\n      editable = false;\n    }\n\n    // Set the value of labelAlign and valueAlign to use the rendering in the base\n    renderColumn.properties.labelAlign = \"default\";\n    if (renderColumn.properties.columntitlealign) {\n      renderColumn.properties.labelAlign = renderColumn.properties.columntitlealign;\n    }\n\n    renderColumn.properties.valueAlign = \"default\";\n    if (renderColumn.properties.columnAlign) {\n      renderColumn.properties.valueAlign = renderColumn.properties.columnAlign;\n    }\n\n    var cell = \"\";\n    if (editable) {\n      cell = self.drawEditableCell(renderColumn, properties, key, value, isNewRow);\n    } else {\n      cell = self.drawReadonlyCell(renderColumn, properties, key, value);\n    }\n    return visible ? cell : \"\";\n  },\n\n  /*\r\n     *   Executes when the cell is ready and inserted into the DOM\r\n     */\n  onCellReady: function onCellReady(column, key, cell, isNewRow) {\n    var self = this;\n\n    // Get render column\n    var columnIndex = column.index - 1;\n    var cellOverride = self.getCellOverride(key, columnIndex);\n    var renderColumn = self.columns[columnIndex];\n    var properties = self.cellMetadata[key][columnIndex].properties || renderColumn.properties;\n    var visible = properties.visible !== undefined ? properties.visible : true;\n    var editable = properties.editable !== undefined ? properties.editable : true;\n\n    // Apply overrides from cellOverrides\n    visible = cellOverride.visible;\n    editable = properties.editable ? cellOverride.editable : false;\n\n    var columnWidth = properties.columnwidth || 'auto';\n    var controlType = bizagi.util.getColumnType(properties.type);\n    var isHorizontalRadio = controlType === \"radio\" && properties.horizontal && editable;\n    var isCheckbox = controlType === \"boolean\" && properties.display === \"check\";\n    this.applyElementWidth(cell[0], columnWidth, controlType, isHorizontalRadio, isCheckbox, false);\n\n    // Show editable cell when we are performing inline add operation\n    editable = !!isNewRow;\n\n    if (visible) {\n      if (editable) {\n        // Set editable\n        var originalEditable = renderColumn.properties.editable;\n        renderColumn.properties.editable = editable;\n\n        if (renderColumn.properties.submitOnChange) {\n          var control = renderColumn.getDecorated(key);\n          if (control) {\n            control.properties.submitOnChangexpathContext = self.properties.xpath + \"[]\";\n          }\n        }\n\n        // Execute cell post render\n        renderColumn.postRender(key, cell);\n\n        // Restore editable\n        renderColumn.properties.editable = originalEditable;\n      } else {\n        renderColumn.postRenderReadOnly(key, cell);\n      }\n    }\n  },\n\n  /**\r\n      *  Adds a row to the grid\r\n      */\n  addRow: function addRow() {\n    var self = this;\n    var properties = self.properties;\n    var form = self.getFormContainer();\n    var formParams = self.getFormParams();\n\n    // Start loading\n    self.startLoading();\n\n    // Send add request\n    $.when(self.submitAddRequest()).\n    done(function (newid) {\n\n      // Show a slide with new form after that\n      var slideView = new bizagi.rendering.tablet.slide.view(self.dataService, self.renderFactory, {\n        title: self.properties.displayName || \"\",\n        container: form.container,\n        formParams: formParams,\n        navigation: formParams.navigation,\n        showSaveButton: true,\n        onSave: function onSave(data) {\n          self.addExclusiveChange(newid, data);\n          return self.submitSaveRequest(newid, data);\n        } });\n\n\n      // End Loading\n      self.endLoading();\n\n      var recordXpath = properties.xpath + \"[id=\" + newid + \"]\";\n\n      slideView.render({\n        idRender: properties.id,\n        recordXPath: recordXpath,\n        xpathContext: properties.xpathContext,\n        idPageCache: properties.idPageCache,\n        requestedForm: \"addForm\",\n        url: properties.addPage,\n        formParams: formParams,\n        navigation: formParams.navigation }).\n      done(function () {\n        if (!properties.submitOnChange) {\n          // Reload grid\n          self.fetchData();\n        } else {\n          // Submits the entire form\n          self.submitOnChange();\n        }\n\n      }).fail(function () {\n        self.submitRollbackRequest();\n      }).always(function () {\n        self.endLoading();\n      });\n    }).fail(function (error) {\n      self.executeFailHandlerOnForm(error);\n    }).always(function () {\n      self.endLoading();\n    });\n  },\n\n  addVirtualRow: function addVirtualRow() {\n    var self = this;\n    var properties = self.properties;\n    var form = self.getFormContainer();\n    var formParams = self.getFormParams();\n\n    // Create mock row\n    var currentRow = [\"mock_id\"];\n    self.columns.forEach(function () {\n      currentRow.push(null);\n    });\n\n    // Render grid view\n    var slideView = new bizagi.rendering.tablet.slide.adhocForm(self.renderFactory, {\n      title: self.properties.displayName || \"\",\n      allowEdition: true,\n      navigation: formParams.navigation,\n      container: self.getFormContainer().container });\n\n\n    slideView.render({\n      row: currentRow,\n      columns: self.columns,\n      pageCacheId: properties.idPageCache,\n      xpath: properties.xpath,\n      xpathContext: properties.xpathContext,\n      sessionId: form.properties.sessionId,\n      actions: form.actions,\n      validations: form.validations }).\n    done(function (data) {\n      $.when(self.saveAddedRow(data)).done(function () {\n        if (!properties.submitOnChange) {\n          // Reload grid\n          self.fetchData();\n        } else {\n          // Submits the entire form\n          self.submitOnChange();\n        }\n      });\n    });\n  },\n\n  /*\r\n     *   Prepares the add action\r\n     */\n  saveAddedRow: function saveAddedRow(data) {\n    var self = this;\n    var properties = self.properties;\n\n    return self.dataService.multiaction().addGridRecordData({\n      url: properties.addUrl,\n      idRender: properties.id,\n      xpath: properties.xpath,\n      xpathContext: properties.xpathContext,\n      contexttype: properties.contexttype,\n      idPageCache: properties.idPageCache,\n      submitData: data });\n\n  },\n\n  /**\r\n      *  Edits a row in the grid\r\n      */\n  editRow: function editRow(id) {\n\n    if (id == 0) {\n      bizagi.showMessageBox(bizagi.localization.getResource(\"render-grid-message-no-selected-row\"), bizagi.localization.getResource(\"render-grid-header-no-selected-row\"));\n      return;\n    }\n\n    var self = this;\n    var properties = self.properties;\n\n    // Use tablet inline edit when there are no edit form\n    if (properties.inlineEdit == true && properties.allowEdit == false) {\n      self.editInline(id);\n      return;\n    }\n\n    if (self.cleanActionChanges && self.cleanActionChanges[id] !== undefined) {\n\n      self.changes = self.cleanActionChanges;\n      var data = $.extend(self.changes[id], {});\n      data.idPageCache = properties.idPageCache;\n\n      $(\".ui-tooltip\").remove();\n\n      $.when(self.submitSaveRequest(id, data)).done(function () {\n        // Set loading status\n        self.startLoading();\n\n        if (!properties.submitOnChange) {\n          // Reload grid\n          self.endLoading();\n\n          self.fetchData();\n        } else {\n          // Submits the entire form\n          self.submitForGridChange().always(function () {\n            self.endLoading();\n\n            // Send edit request\n            self.executeSubmitEditRequest(id, function (data) {\n              self.addExclusiveChange(id, data);\n            });\n          });\n        }\n      });\n    } else {\n      self.executeSubmitEditRequest(id, function (data) {\n        self.addExclusiveChange(id, data);\n      });\n\n    }\n  },\n\n  editVirtualRow: function editVirtualRow(id) {\n    var self = this;\n    var data = self.properties.data;\n    var properties = self.properties;\n    var form = self.getFormContainer();\n    var formParams = self.getFormParams();\n    // Search row\n    var currentRow = [];\n    for (var i = 0, length = data.rows.length; i < length; i++) {\n      if (data.rows[i][0] == id) {\n        currentRow = data.rows[i];\n        break;\n      }\n    }\n    // Render grid view\n    var slideView = new bizagi.rendering.tablet.slide.adhocForm(self.renderFactory, {\n      title: self.properties.displayName || \"\",\n      allowEdition: true,\n      navigation: formParams.navigation,\n      container: self.getFormContainer().container });\n\n    slideView.render({\n      row: currentRow,\n      columns: self.columns,\n      pageCacheId: properties.idPageCache,\n      xpath: properties.xpath,\n      xpathContext: properties.xpathContext,\n      sessionId: form.properties.sessionId,\n      actions: form.actions }).\n    done(function (formData) {\n      // This code is executed when the user press save on the slide\n      // Update internal data\n      for (xpath in formData) {\n        self.collectGridChange({ id: id, xpath: xpath, value: formData[xpath], trigger: false });\n      }\n      // Prepare grid data\n      var dataToSend = {};\n      self.collectData(dataToSend);\n      // Send the data\n      self.dataService.submitData({\n        action: \"SUBMITONCHANGE\",\n        data: dataToSend,\n        idRender: properties.id,\n        xpath: properties.xpath,\n        xpathContext: properties.xpathContext,\n        idPageCache: properties.idPageCache }).\n      done(function () {\n        // After successfully response refresh the grid\n        self.fetchData();\n      });\n    });\n  },\n\n  executeSubmitEditRequest: function executeSubmitEditRequest(id, callback) {\n    var self = this;\n    var properties = self.properties;\n    var form = self.getFormContainer();\n    var formParams = self.getFormParams();\n\n    var slideView = new bizagi.rendering.tablet.slide.view(self.dataService, self.renderFactory, {\n      title: self.properties.displayName || \"\",\n      container: form.container,\n      formParams: formParams,\n      navigation: formParams.navigation,\n      showSaveButton: true,\n      onSave: function onSave(data) {\n        if (callback) {\n          callback(data);\n        }\n        return self.submitSaveRequest(id, data);\n      } });\n\n\n    self.startLoading();\n\n    $.when(self.submitEditRequest(id)).\n    done(function () {\n\n      // Show dialog with new form after that\n      var recordXpath = properties.xpath + \"[id=\" + id + \"]\";\n\n      slideView.render({\n        idRender: properties.id,\n        recordXPath: recordXpath,\n        xpathContext: properties.xpathContext,\n        idPageCache: properties.idPageCache,\n        requestedForm: \"editForm\",\n        url: properties.editPage,\n        formParams: formParams,\n        navigation: formParams.navigation }).\n      done(function () {\n        if (!properties.submitOnChange) {\n          // Reload grid\n          self.fetchData();\n\n        } else {\n          // Submits the entire form\n          self.submitOnChange();\n        }\n      }).fail(function () {\n        self.startLoading();\n        $.when(self.submitRollbackRequest()).always(function () {\n          self.endLoading();\n        });\n      });\n    }).always(function () {\n      self.endLoading();\n    });\n  },\n\n  showDetailForm: function showDetailForm(id) {\n    var self = this;\n    var properties = self.properties;\n    var form = self.getFormContainer();\n    var formParams = self.getFormParams();\n\n    var slideView = new bizagi.rendering.tablet.slide.view(self.dataService, self.renderFactory, {\n      title: self.properties.displayName || \"\",\n      container: form.container,\n      formParams: formParams,\n      navigation: formParams.navigation,\n      showSaveButton: false });\n\n\n    // Show dialog with new form after that\n    var recordXpath = properties.xpath + \"[id=\" + id + \"]\";\n\n    slideView.render({\n      idRender: properties.id,\n      recordXPath: recordXpath,\n      xpathContext: properties.xpathContext,\n      idPageCache: properties.idPageCache,\n      requestedForm: \"detailForm\",\n      url: properties.editPage,\n      formParams: formParams,\n      editable: false,\n      navigation: formParams.navigation });\n\n  },\n  /**\r\n      *  Deletes  a row to the grid\r\n      */\n  deleteRow: function deleteRow(id) {\n    if (id === 0) {\n      bizagi.showMessageBox(\n      bizagi.localization.getResource(\"render-grid-message-no-selected-row\"),\n      bizagi.localization.getResource(\"render-grid-header-no-selected-row\"));\n\n      return;\n    }\n\n    var self = this;\n\n    bizagi.showConfirmationBox(this.getResource(\"render-grid-delete-confirmation\")).\n    done(function () {\n      // Do a grid record deletion\n      $.when(self.submitDeleteRequest(id)).\n      done(function (data) {\n        // Refresh grid\n        self.refreshAfterDeleteRows();\n\n        if (data.type === \"success\") {\n          // Trigger the event\n          //'key' must be included to trigger a single call to actions and validations\n          //line 310 bizagi.command.controllers.action\n          self.triggerRenderChange({ rowDeleted: true, changed: false, key: id });\n        }\n      }).fail(function (error) {\n        self.executeFailHandlerOnForm(error);\n      });\n    });\n  },\n\n  /**\r\n      * Refresh the grid after delete rows\r\n      * @param rowsDeleted\r\n      * @returns {*}\r\n      */\n  refreshAfterDeleteRows: function refreshAfterDeleteRows(rowsDeleted) {\n    var self = this;\n    var page = self.triggerGridPluginHandler(\"getCurrentPage\");\n    rowsDeleted = rowsDeleted || 1;\n\n    if (page > 1) {\n      var data = bizagi.clone(self.properties.data || {});\n      var newTotalRows = data.records > 0 ? data.records - rowsDeleted : 0;\n      var newTotalPages = Math.ceil(newTotalRows / self.properties.rowsPerPage);\n\n      if (newTotalPages < page) {\n        page = newTotalPages;\n      }\n    }\n\n    return self.fetchData(page);\n  },\n\n  moreRows: function moreRows(ui) {\n    var self = this;\n    var properties = self.properties;\n\n    if (typeof properties.originalrowsPerPage === \"undefined\") {\n      properties.originalrowsPerPage = properties.rowsPerPage;\n    }\n\n    properties.rowsPerPage += properties.originalrowsPerPage;\n\n    var dataToSend = {};\n    self.collectData(dataToSend);\n\n    self.startLoading();\n\n    if ($.isEmptyObject(dataToSend)) {\n      self.moreRowsCommon(ui);\n      return;\n    }\n\n    // Send the data\n    self.dataService.submitData({\n      action: \"SUBMITONCHANGE\",\n      data: dataToSend,\n      idRender: properties.id,\n      xpath: properties.xpath,\n      xpathContext: properties.xpathContext,\n      idPageCache: properties.idPageCache }).\n    done(function () {\n\n      self.endLoading();\n\n      self.moreRowsCommon(ui);\n    });\n\n  },\n\n  moreRowsCommon: function moreRowsCommon(ui) {\n    var self = this;\n    var properties = self.properties;\n\n    self.fetchData(ui.page, ui.sortBy, ui.sortType);\n\n    $.when(self.dataReadyDeferred).done(function () {\n\n      if (properties.records != 0)\n      if (properties.records + 1 <= properties.rowsPerPage) {\n        $(\".ui-bizagi-grid-dynamic-pager\", self.getControl()).hide();\n      }\n\n    });\n  },\n\n  /**\r\n      *  Shows more info about a grid row\r\n      */\n  showMore: function showMore(id) {\n    var self = this;\n    var data = self.properties.data;\n    var properties = self.properties;\n    var form = self.getFormContainer();\n    var formParams = self.getFormParams();\n\n    // Search row\n    var currentRow = [];\n    for (var i = 0, length = data.rows.length; i < length; i++) {\n      if (data.rows[i][0] == id) {\n        currentRow = data.rows[i];\n        break;\n      }\n    }\n\n    // Render grid view\n    var slideView = new bizagi.rendering.tablet.slide.grid(self.dataService, self.renderFactory, {\n      title: self.properties.displayName || \"\",\n      container: form.container,\n      allowEdition: false,\n      formParams: formParams,\n      navigation: formParams.navigation });\n\n\n    self.startLoading();\n\n    slideView.render({\n      row: currentRow,\n      columns: self.columns,\n      pageCacheId: properties.idPageCache,\n      xpath: properties.xpath,\n      xpathContext: properties.xpathContext,\n      sessionId: form.properties.sessionId,\n      actions: form.actions,\n      formParams: formParams,\n      navigation: formParams.navigation }).\n    done(function () {\n      self.endLoading();\n    });\n  },\n\n  /**\r\n      *  Edits the entire row (inline) in another slide\r\n      */\n  editInline: function editInline(id) {\n    var self = this;\n    var data = self.properties.data;\n    var properties = self.properties;\n    var form = self.getFormContainer();\n    var formParams = self.getFormParams();\n\n    // Search row\n    var currentRow = [];\n    for (var i = 0, length = data.rows.length; i < length; i++) {\n      if (data.rows[i][0] == id) {\n        currentRow = data.rows[i];\n        break;\n      }\n    }\n\n    // Render grid view\n    var slideView = new bizagi.rendering.tablet.slide.grid(self.dataService, self.renderFactory, {\n      title: self.properties.displayName || \"\",\n      container: form.container,\n      formParams: formParams,\n      navigation: formParams.navigation,\n      allowEdition: true });\n\n\n    // Render the editable view\n    $.when(slideView.render({\n      row: currentRow,\n      columns: self.columns,\n      pageCacheId: properties.idPageCache,\n      xpath: properties.xpath,\n      xpathContext: properties.xpathContext,\n      sessionId: form.properties.sessionId,\n      actions: form.actions,\n      validations: form.validations,\n      formParams: formParams,\n      navigation: formParams.navigation })).\n    done(function (data) {\n      // This code is executed when the user press save on the slide\n\n      // Update internal data\n      for (xpath in data) {\n        self.collectGridChange({ id: id, xpath: xpath, value: data[xpath], trigger: false });\n      }\n\n      // Prepare grid data\n      var dataToSend = {};\n      self.collectData(dataToSend);\n\n      // Send the data\n      self.dataService.submitData({\n        action: \"SUBMITONCHANGE\",\n        data: dataToSend,\n        idRender: properties.id,\n        xpath: properties.xpath,\n        xpathContext: properties.xpathContext,\n        idPageCache: properties.idPageCache }).\n      done(function () {\n        // After successfully response refresh the grid\n        self.fetchData();\n      });\n    });\n  },\n\n  /*\r\n     *   Changes the background for a cell\r\n     */\n  changeCellBackgroundColor: function changeCellBackgroundColor(key, xpath, argument) {\n    var self = this;\n\n    if (self.initialLoadDone) {\n      var control = self.getControlCell(key, xpath);\n      control && control.changeBackgroundColor(argument, false);\n    } else {\n      if (self.pendingActions) {\n        self.pendingActions.push({\n          method: self.changeCellBackgroundColor,\n          arguments: arguments });\n\n      }\n    }\n  },\n\n  /*\r\n     *   Changes the background for a cell\r\n     */\n  changeCellColor: function changeCellColor(key, xpath, argument) {\n    var self = this;\n\n    if (self.initialLoadDone) {\n      var control = self.getControlCell(key, xpath);\n      control && control.changeColor(argument, false);\n    } else {\n      if (self.pendingActions) {\n        self.pendingActions.push({\n          method: self.changeCellColor,\n          arguments: arguments });\n\n      }\n    }\n  },\n\n  /*\r\n     *   Changes the visibility for a cell\r\n     */\n  changeCellVisibility: function changeCellVisibility(key, xpath, argument) {\n    var self = this;\n\n    if (self.initialLoadDone) {\n\n      var index = (self.columns || []).findIndex(function (cell) {\n        return self.isCurrentGridCell(cell.properties.xpath, cell.properties.id, xpath);\n      }) || 0;\n\n      var cell = self.grid.bizagi_grid_tablet('getCell', key, xpath, index);\n      if (cell) {\n        // Change visibility\n        if (argument == true) {\n          cell.css(\"visibility\", \"visible\");\n          cell.css(\"display\", \"\");\n\n          self.element && self.element.show();\n        } else {\n          cell.css(\"visibility\", \"hidden\");\n        }\n      }\n\n      self.cellOverrides[key] = self.cellOverrides[key] || {};\n      self.getCellOverride(key, index).visible = argument;\n\n    } else {\n      if (self.pendingActions) {\n        self.pendingActions.push({\n          method: self.changeCellVisibility,\n          arguments: arguments });\n\n      }\n    }\n  },\n\n  /*\r\n     *  Changes the required for cell\r\n     */\n  changeCellValue: function changeCellValue(key, xpath, argument) {\n    var self = this;\n\n    if (self.initialLoadDone) {\n      var control = self.getControlCell(key, xpath);\n      if (control) {\n        control.setDisplayValue(argument);\n\n        var renderColumn = control.column || {};\n        var dataType = renderColumn.properties && renderColumn.properties.type;\n\n        if (renderColumn) {\n          var _value = self.getCellValueFormatted(renderColumn, renderColumn.getValue(key));\n\n          control.setDisplayValue(argument);\n          control.triggerHandler(\"renderchange\", { render: self, changed: true });\n\n          self.collectGridChange({\n            id: key,\n            xpath: renderColumn.properties.xpath,\n            value: _value,\n            compositeValue: renderColumn.getCompositeValue(key),\n            columnIndex: control.columnIndex,\n            trigger: false,\n            dataType: dataType });\n\n        }\n      }\n    } else {\n      if (self.pendingActions) {\n        self.pendingActions.push({\n          method: self.setDisplayValue,\n          arguments: arguments });\n\n      }\n    }\n  },\n\n  changeCellRequired: function changeCellRequired(key, xpath, argument) {\n    var self = this;\n\n    if (self.initialLoadDone) {\n      var control = self.getControlCell(key, xpath);\n      if (control) {\n        control.changeCellRequired(argument);\n\n        var index = (self.columns || []).findIndex(function (cell) {\n          return self.isCurrentGridCell(cell.properties.xpath, cell.properties.id, xpath);\n        }) || 0;\n\n        self.cellOverrides[key] = self.cellOverrides[key] || {};\n        self.getCellOverride(key, index).required = argument;\n      }\n    } else {\n      if (self.pendingActions) {\n        self.pendingActions.push({ method: self.changeCellRequired, arguments: arguments });\n      }\n    }\n  },\n\n  /**\r\n      * Changes the editability for a cell\r\n      * @param key\r\n      * @param xpath\r\n      * @param argument\r\n      */\n  changeCellEditability: function changeCellEditability(key, xpath, argument) {\n    var self = this;\n\n    if (self.initialLoadDone) {\n\n      var control = self.getControlCell(key, xpath);\n      if (control) {\n        control.changeEditabilityCellControl(argument, key, xpath);\n\n        var index = self.getIndexForCurrentCell(xpath);\n\n        self.cellOverrides[key] = self.cellOverrides[key] || {};\n        self.getCellOverride(key, index).editable = argument;\n      }\n    } else {\n      if (self.pendingActions) {\n        self.pendingActions.push({ method: self.changeCellEditability, arguments: arguments });\n      }\n    }\n  },\n\n  /*\r\n     *   Sets an error on the cell\r\n     */\n  setError: function setError(key, xpath) {\n    var self = this;\n\n    if (self.initialLoadDone) {\n      for (var j = 0; j < self.columns.length; j++) {\n        var isVisible = self.getCellOverride(key, j).visible;\n        var columnProperties = self.columns[j].properties;\n\n        if (self.isCurrentGridCell(columnProperties.xpath, columnProperties.id, xpath) && isVisible) {\n          var cell = self.grid.bizagi_grid_tablet('getCell', key, xpath, j);\n          cell.parent().addClass(\"ui-bizagi-render-grid-cell-error\");\n          break;\n        }\n      }\n\n    } else {\n      if (self.pendingActions) {\n        self.pendingActions.push({\n          method: self.setError,\n          arguments: arguments });\n\n      }\n    }\n  },\n\n  /*\r\n     *   Returns a promise that will resolve when the element is ready\r\n     */\n  ready: function ready() {\n    var self = this;\n    var parentPromise = self._super();\n    var inlineAddPromise = self.inlineAddDeferred ? self.inlineAddDeferred.promise() : null;\n    return $.when(parentPromise, inlineAddPromise);\n  },\n\n  /*\r\n     * Apply Columns Width in postrender\r\n     */\n  applyColumnsWidth: function applyColumnsWidth(grid, columns) {\n    var self = this;\n    var resizableColumns = grid[0].querySelectorAll(\"th:not(.bz-hidden)\");\n    resizableColumns.forEach(function (column, i) {\n      var columnHeader = column.querySelector(\".bz-tablet-grid__label\");\n      var index = columnHeader ? Number(columnHeader.dataset[\"columnIndex\"]) - 1 : i;\n      var columnProperties = columns[index] && columns[index].properties ? columns[index].properties : {};\n      var columnWidth = columnProperties.columnwidth;\n      var editable = columnProperties.editable !== undefined ? columnProperties.editable : true;\n      var controlType = bizagi.util.getColumnType(columnProperties.type);\n      var isHorizontalRadio = controlType === \"radio\" && columnProperties.horizontal && editable;\n      var isCheckbox = controlType === \"boolean\" && columnProperties.display === \"check\";\n      self.applyElementWidth(column, columnWidth, controlType, isHorizontalRadio, isCheckbox, true);\n    });\n  },\n\n  /**\r\n      * Applies the given width to an element\r\n      * @param { DOMObject } element - DOM element to modify\r\n      * @param { string } width - Width set by user per element\r\n      * @param { string } type - Control type\r\n      * @param { boolean } isHorizontalRadio - True if the control is a horizontal radius. False in any other case.\r\n      * @param { boolean } isHeader - true if the element is an <th>. False otherwise.\r\n      */\n  applyElementWidth: function applyElementWidth(element, width, type, isHorizontalRadio, isCheckbox, isHeader) {\n    if (isHorizontalRadio) type = \"horizontalRadio\";else\n    if (isCheckbox) type = \"checkboxBoolean\";\n\n    var minValidWidth = this.MIN_SUPPORTED_WIDTHS.get(type);\n    if (width && width !== \"auto\") {\n      if (/px$/i.test(width)) {\n        width = Math.max(parseInt(width), minValidWidth) + \"px\";\n      }\n      element.style.width = width;\n      element.style.minWidth = width;\n      if (!isHeader) {\n        element.style.maxWidth = width;\n      }\n\n    }\n  },\n\n  /*\r\n     *   Method to start loading for ajax data and update the ui\r\n     */\n  startLoading: function startLoading(bUseTimeout) {\n    bizagi.loading.start();\n    this._super(bUseTimeout);\n  },\n\n  /*\r\n     *   Method to remove the loading message\r\n     */\n  endLoading: function endLoading() {\n    bizagi.loading.stop();\n    this._super();\n  },\n\n  cleanCellData: function cleanCellData(key, xpath) {\n    var self = this;\n\n    if (self.initialLoadDone) {\n      var control = self.getControlCell(key, xpath);\n      if (control) {\n        return $.when(control.cleanData()).then(function (emptyValue) {\n          //Not all empty values are \"\" or [], the best approach is to get the value from the control\n          emptyValue = emptyValue || [[\"\", \"\"]];\n\n          var index = (self.columns || []).findIndex(function (cell) {\n            return self.isCurrentGridCell(cell.properties.xpath, cell.properties.id, xpath);\n          }) || 0;\n\n          var rows = self.properties.data.rows;\n          var i = 0;\n          var rowLength = rows.length;\n\n          for (; i < rowLength; i++) {\n            if (Number(key) === rows[i][0]) {\n              rows[i][index + 1] = emptyValue;\n              break;\n            }\n          }\n          self.cellOverrides[key] = self.cellOverrides[key] || {};\n          self.getCellOverride(key, index).value = null;\n\n          if (!self.cleanActionChanges) {\n            self.cleanActionChanges = {};\n          }\n          if (!self.cleanActionChanges[key]) {\n            self.cleanActionChanges[key] = {};\n          }\n          self.cleanActionChanges[key][xpath] = \"\";\n        });\n      }\n    } else {\n      self.pendingActions.push({\n        method: self.cleanData,\n        arguments: \"\" });\n\n    }\n  },\n\n  onTotalData: function onTotalData(ui) {\n    var self = this;\n    var properties = self.properties;\n    var data = properties.data || {};\n    var rows = data.rows;\n    var showTotal = [];\n    var columnsModel = self.buildColumnModel();\n    var result;\n\n    bizagi.util.tablet.startLoading();\n\n    columnsModel.forEach(function callback(column, columnIndex) {\n      if (column.bizAgiProperties) {\n        var operationState = column.bizAgiProperties.totalize.operation;\n\n        switch (operationState) {\n          case \"sum\":\n            result = rows.sum(function (row) {\n              var return_value = row[columnIndex] !== null ? row[columnIndex] : column.bizAgiProperties.defaultvalue;\n              return Number(return_value);\n            }, columnIndex);\n            break;\n\n          case \"count\":\n            result = rows.count(function (row) {\n              //Checks if there is a DefaultValue, so assign it to the returnedvalu in case it doesn't have value\n              var return_value = row[columnIndex] !== null ? row[columnIndex] : column.bizAgiProperties.defaultvalue;\n\n              if (!bizagi.util.isArray(return_value)) {\n                return return_value;\n              }\n\n              if (bizagi.util.isArray(return_value) && return_value.length > 0) {\n                return return_value; //If the returned value is not undefined, neither null, it will count +1\n              }\n            }, column, columnIndex);\n\n            break;\n\n          case \"max\":\n            result = rows.max(function (row) {\n              var return_value = row[columnIndex] !== null ? row[columnIndex] : column.bizAgiProperties.defaultvalue;\n              return Number(return_value);\n            }, columnIndex);\n\n            break;\n\n          case \"min\":\n            result = rows.min(function (row) {\n              var return_value = row[columnIndex] !== null ? row[columnIndex] : column.bizAgiProperties.defaultvalue;\n              return Number(return_value);\n            }, columnIndex);\n            break;\n\n          case \"avg\":\n            result = rows.avg(function (row) {\n              var return_value = row[columnIndex] !== null ? row[columnIndex] : column.bizAgiProperties.defaultvalue;\n              return Number(return_value);\n            }, columnIndex);\n\n            result = result.toFixed(2);\n            break;}\n\n\n        if (operationState) {\n          result = self.formatTotalizedResult(operationState, column.bizAgiProperties.type, result);\n          showTotal.push({ label: column.label, total: result });\n        }\n      }\n    });\n    self.showTotals(showTotal);\n    bizagi.loading.stop();\n  },\n\n  formatTotalizedResult: function formatTotalizedResult(operation, controlType, value) {\n    switch (operation) {\n      case 'sum':\n      case 'avg':\n      case 'min':\n      case 'max':\n        if (/columnMoney/i.test(controlType) || /money/i.test(controlType)) {\n          return bizagi.util.formatMonetaryCell(value);\n        }\n        break;}\n\n\n    return value || 0;\n  },\n\n  showTotals: function showTotals(params) {\n    var self = this;\n    var content = $.fasttmpl(self.renderFactory.getTemplate('bizagi.grid.totalizer'), { items: params });\n\n    self.grid.mobileView({\n      displayName: bizagi.localization.getResource(\"render-grid-totalizer\"),\n      orientation: self.properties.orientation,\n      style: \"width: 80%; height: 70%\",\n      transition: \"fade:in\",\n      cssClass: \"bz-modal-view--totalizer\",\n      showBorder: true,\n      contentTemplate: content });\n\n  },\n\n  changeBackgroundColor: function changeBackgroundColor(color) {\n    var control = this.getControl();\n\n    if (control) {\n      $(\".bz-tablet-grid\", control).css(\"background-color\", color !== 'none' ? color : \"\");\n    }\n\n    return this;\n  },\n\n  /**\r\n      * Get Cell value with format\r\n      * @param renderColumn\r\n      * @param _value\r\n      * @returns {string}\r\n      */\n  getCellValueFormatted: function getCellValueFormatted(renderColumn, _value) {\n    var dataType = renderColumn.properties.type;\n    var formatted = _value;\n\n    if (/columnDate/i.test(dataType)) {\n      var columnProperties = renderColumn.data.properties;\n\n      if (!bizagi.util.isEmpty(formatted)) {\n        // Formats the value in full invariant (with time) in order to send to the server\n        var date = bizagi.util.dateFormatter.getDateFromInvariant(formatted, columnProperties.showTime);\n\n        if (typeof date != \"undefined\" && date !== 0) {\n          if (!columnProperties.showTime) {\n            date.setHours(0, 0, 0, 0);\n          }\n\n          formatted = bizagi.util.dateFormatter.formatInvariant(date, true);\n        }\n      } else if (_value === \"\") {\n        formatted = \"\";\n      }\n    }\n\n    return formatted;\n  },\n\n  /**\r\n      * Defines the handler when a cell changes its value\r\n      * @param renderColumn\r\n      * @param cell\r\n      * @param key\r\n      * @param args\r\n      */\n  onCellChange: function onCellChange(renderColumn, cell, key, args) {\n    var self = this;\n    var dataType = bizagi.util.normalizeType(renderColumn.properties.type);\n    var excludedTypes = new RegExp([\"columnImage\", \"columnUpload\"].join(\"|\"), \"i\");\n\n    // Don't collect data for online column images, or upload\n    if (excludedTypes.test(dataType)) return;\n\n    try {\n      var _value = renderColumn.getValue(key);\n      var compositeValue = renderColumn.getCompositeValue(key);\n\n      if (/columnDate/i.test(dataType)) {\n        if (!bizagi.util.isEmpty(_value)) {\n          var date = bizagi.util.dateFormatter.getDateFromInvariant(_value, true);\n          date.setMilliseconds(0);\n\n          _value = bizagi.util.dateFormatter.formatInvariant(date, true);\n        } else if (_value === \"\") {\n          _value = \"\";\n        }\n      }\n\n      var isExclusiveControl = /columnBoolean/i.test(dataType) && renderColumn.properties.isExclusive;\n\n      if (!isExclusiveControl && self.properties.allowEdit) {\n        self.collectGridChange($.extend(args, {\n          id: key,\n          xpath: renderColumn.properties.xpath || renderColumn.properties.id,\n          value: _value,\n          compositeValue: compositeValue,\n          columnIndex: renderColumn.columnIndex,\n          trigger: true,\n          dataType: dataType }));\n\n      }\n\n      // Update change in grid's component data\n      self.triggerGridPluginHandler(\"changeCellValue\", key, renderColumn.columnIndex, _value);\n    } catch (e) {\n      console.warn(\"onCellChange error: \", e, renderColumn);\n    }\n  },\n\n  /**\r\n      * Draws the editable version for the cell\r\n      * @param renderColumn\r\n      * @param properties\r\n      * @param key\r\n      * @param value\r\n      * @param isNewRow\r\n      */\n  drawEditableCell: function drawEditableCell(renderColumn, properties, key, value, isNewRow) {\n    var self = this;\n    var defer = new $.Deferred();\n\n    // Set editable\n    var originalEditable = renderColumn.properties.editable;\n    renderColumn.properties.editable = true;\n\n    // Fix problem when required property lose\n    renderColumn.overrideProperties({ required: properties.required });\n\n    // Render cell\n    $.when(renderColumn.render(key, value)).done(function (cell) {\n\n      // Register array with new records\n      (self.columns || []).forEach(function (item, index) {\n        var visible = true;\n\n        self.cellOverrides[key] = self.cellOverrides[key] || {};\n\n        // Convert all row visible\n        if (typeof self.getCellOverride(key, index).visible !== \"undefined\") {\n          visible = self.getCellOverride(key, index).visible;\n        }\n\n        self.getCellOverride(key, index).visible = visible;\n      });\n\n      // Add change handler\n      renderColumn.getDecorated(key).\n      unbind(\"renderchange.draweditable\").\n      bind(\"renderchange.draweditable\", function (render, args) {\n        self.onCellChange(renderColumn, cell, key, args);\n      });\n\n      // Resolve cell\n      defer.resolve(cell);\n    });\n\n    // Restore editable\n    renderColumn.properties.editable = originalEditable;\n\n    // Return promise\n    return defer.promise();\n  },\n\n  /**\r\n      * Draws the readonly version for the cell\r\n      * @param renderColumn\r\n      * @param properties\r\n      * @param key\r\n      * @param value\r\n      */\n  drawReadonlyCell: function drawReadonlyCell(renderColumn, properties, key, value) {\n    var self = this;\n    var defer = new $.Deferred();\n\n    $.when(renderColumn.renderReadOnly(key, value)).done(function (cell) {\n      // Register array with new records\n      (self.columns || []).forEach(function (item, index) {\n        var visible = true;\n\n        self.cellOverrides[key] = self.cellOverrides[key] || {};\n\n        if (typeof self.getCellOverride(key, index).visible !== \"undefined\") {\n          visible = self.getCellOverride(key, index).visible;\n        }\n\n        self.getCellOverride(key, index).visible = visible;\n      });\n\n      // Resolve cell\n      defer.resolve(cell);\n    });\n\n    return defer.promise();\n  },\n\n  /**\r\n      * Triggers the grid plugin event\r\n      * @returns {*}\r\n      */\n  triggerGridPluginHandler: function triggerGridPluginHandler() {\n    try {\n      var args = Array.prototype.slice.call(arguments, 0);\n      return this.grid.bizagi_grid_tablet.apply(this.grid, args);\n    } catch (e) {\n      console.warn(\"triggerGridPluginHandler error: \", e);\n    }\n  },\n\n  addExclusiveChange: function addExclusiveChange(id, data) {\n    var self = this;\n    if (self.properties.hasExclusiveCheck) {\n      for (var xpath in data) {\n        var column = self.columns.find(function (el) {\n          return el.properties.xpath == xpath;\n        });\n        // Check if some of the changes from the edit or add form match with the exclusive controls in the grid\n        var value = data[xpath];\n        if (column && column.properties.isExclusive && value) {\n          self.exclusiveChanges[xpath] = {\n            xpath: xpath,\n            simpleXpath: xpath,\n            value: value,\n            key: id };\n\n        }\n      }\n    }\n  },\n\n  /**\r\n      * Changes the max value for a cell\r\n      * @param key\r\n      * @param xpath\r\n      * @param argument\r\n      */\n  changeCellMaxValue: function changeCellMaxValue(key, xpath, argument) {\n    var self = this;\n\n    if (self.initialLoadDone) {\n      var control = self.getControlCell(key, xpath);\n      if (control) {\n        control.changeMaxValue(argument);\n      }\n    } else {\n      self.pendingActions.push({\n        method: self.changeMaxValue,\n        arguments: arguments });\n\n    }\n  },\n\n  /**\r\n      * Changes the min value for a cell\r\n      * @param key\r\n      * @param xpath\r\n      * @param argument\r\n      */\n  changeCellMinValue: function changeCellMinValue(key, xpath, argument) {\n    var self = this;\n\n    if (self.initialLoadDone) {\n      var control = self.getControlCell(key, xpath);\n      if (control) {\n        control.changeMinValue(argument);\n      }\n    } else {\n      self.pendingActions.push({\n        method: self.changeMinValue,\n        arguments: arguments });\n\n    }\n  },\n\n  /**\r\n      * Call the form failhandler with an specific error\r\n      * @param {} error\r\n      * @returns {}\r\n      */\n  executeFailHandlerOnForm: function executeFailHandlerOnForm(error) {\n    var error_obj = error && error.responseText ? error.responseText : bizagi.util.getErrorFormatted(error);\n\n    if (typeof error_obj === \"undefined\" || error_obj && !error_obj.message) {\n      message = Object.assign({}, _typeof(error_obj) === \"object\" ? error_obj : {}, {\n        \"message\": bizagi.localization.getResource(\"workportal-general-error\") });\n\n    }\n\n    this.getFormContainer().failHandler(error_obj);\n  } });","function _typeof(obj) {\"@babel/helpers - typeof\";if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {_typeof = function _typeof(obj) {return typeof obj;};} else {_typeof = function _typeof(obj) {return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;};}return _typeof(obj);} /**\r\n                                                                                                                                                                                                                                                                                                                                                                                *   Name: Bizagi Tablet Render Grid Extension\r\n                                                                                                                                                                                                                                                                                                                                                                                *   Author: UI Forms Team\r\n                                                                                                                                                                                                                                                                                                                                                                                *   Comments:\r\n                                                                                                                                                                                                                                                                                                                                                                                *   -   This script will redefine the offline grid render class to adjust to tablet devices\r\n                                                                                                                                                                                                                                                                                                                                                                                */\n\n// Extends itself\nbizagi.rendering.tablet.grid.extend(\"bizagi.rendering.tablet.grid.offline\", {}, {\n  /*\r\n                                                                                  *   Constructor\r\n                                                                                  */\n  init: function init(params) {\n    var self = this;\n\n    // Call base\n    this._super(params);\n\n    // Fill default properties\n    var form = self.getFormContainer();\n    var properties = this.properties;\n    properties.data.originalRows = bizagi.clone(properties.data.rows);\n\n    properties.isTaskForm = form.properties.isTaskForm;\n    self.newRecords = {};\n    //Preload new lines previously added offline and prepare deletions\n    if (properties.editable === true) {\n      self[\"new-records\"] = properties[\"new-records\"] ? properties[\"new-records\"] : {};\n      self[\"deleted-records\"] = properties[\"deleted-records\"] ? properties[\"deleted-records\"] : {};\n    }\n    self.editedImages = properties[\"edited-images\"] ? properties[\"edited-images\"] : {};\n    self.offlineFiles = properties[\"offline-files\"] ? properties[\"offline-files\"] : {};\n\n    // Just apply display-type: vertical, align it to the left\n    properties.displayType = \"vertical\";\n    properties.labelAlign = \"left\";\n\n    if (properties.groupBy || properties.groupSummary) {\n      // Add warning\n      form.addWarning(self.getResource(\"render-tablet-warning-grid\"));\n    }\n\n    // Create a collection to save grid cell changes to execute after it is loaded\n    self.pendingActions = [];\n  },\n\n  initProperties: function initProperties() {\n    var self = this;\n    self._super();\n    self.properties.rowsPerPage = 1000;\n  },\n\n  /*\r\n     *   Updates original value for some comparisons\r\n     */\n  updateOriginalValue: function updateOriginalValue() {\n    var self = this;\n    var properties = self.properties;\n    self.changes = [];\n    properties.data.originalRows = bizagi.clone(properties.data.rows);\n    properties[\"new-records\"] = undefined;\n    properties[\"edited-images\"] = properties[\"offline-files\"] = properties[\"deleted-records\"] = {};\n  },\n\n  /*\r\n     *   Template method to implement in each device to customize each render after processed\r\n     */\n  postRender: function postRender() {\n    var self = this;\n    var properties = self.properties;\n    var control = self.getControl();\n\n    self.initialLoadDone = false;\n\n    // Find component holder\n    self.grid = $(\">div\", control);\n\n    // Hide common label\n    self.getLabel().hide();\n\n    // Grid plugin\n    self.applyGridPlugin();\n\n    // Set initial data\n    if (properties.data) {\n\n      self.updateData(properties.data);\n\n      // Trigger change in order to start up the actions when the controls is ready\n      $.when(self.ready()).done(function () {\n        self.triggerRenderChange({ changed: false });\n      });\n    }\n\n    // Execute pending actions\n    self.initialLoadDone = true;\n\n    if (self.pendingActions && self.pendingActions.length > 0) {\n      for (var i in self.pendingActions) {\n        self.pendingActions[i].method.apply(self, self.pendingActions[i].arguments);\n      }\n    }\n  },\n\n  /*\r\n     *   Method to render non editable values\r\n     */\n  postRenderReadOnly: function postRenderReadOnly() {\n    var self = this;\n\n    // Do the same as the post-render            \n    self.postRender();\n  },\n\n  /*\r\n     *   Method to render non editable values\r\n     */\n  applyGridPlugin: function applyGridPlugin() {\n    var self = this;\n    var properties = self.properties;\n    var grid = self.grid;\n    var mode = self.getMode();\n\n    // Build column metadata\n    var columns = self.buildColumnModel();\n\n    // Apply grid plugin\n    grid.bizagi_grid_tablet({\n      columns: columns,\n      title: properties.displayName,\n      isOfflineForm: this.isOfflineForm || false,\n      mode: self.getMode(),\n      template: {\n        grid: self.renderFactory.getTemplate(\"bizagi.grid.grid\"),\n        waiting: self.renderFactory.getTemplate(\"bizagi.grid.waiting\"),\n        table: self.renderFactory.getTemplate(\"bizagi.grid.table\"),\n        emptyTable: self.renderFactory.getTemplate(\"bizagi.grid.table.empty\"),\n        column: self.renderFactory.getTemplate(\"bizagi.grid.column\"),\n        specialColumn: self.renderFactory.getTemplate(\"bizagi.grid.column.special\"),\n        row: self.renderFactory.getTemplate(\"bizagi.grid.row\"),\n        cell: self.renderFactory.getTemplate(\"bizagi.grid.cell\"),\n        pager: self.renderFactory.getTemplate(\"bizagi.grid.pager\"),\n        dynamicPager: self.renderFactory.getTemplate(\"bizagi.grid.dynamicpager\"),\n        buttons: self.renderFactory.getTemplate(\"bizagi.grid.offline.buttons\"),\n        rowButtons: self.renderFactory.getTemplate(\"bizagi.grid.offline.row.buttons\"),\n        specialCell: self.renderFactory.getTemplate(\"bizagi.grid.offline.cell.special\") },\n\n      actions: {\n        add: properties.allowAdd,\n        edit: properties.allowEdit && properties.withEditForm && properties.data != null,\n        remove: properties.allowDelete,\n        details: false,\n        inlineAdd: !properties.editable ? properties.inlineAdd : true,\n        allowMore: false,\n        enableXlsExport: false,\n        enablePdfExport: false,\n        hasTotalizer: false },\n\n      isValid: function isValid() {\n        return self.isValidGrid();\n      },\n      pageRequested: function pageRequested(ui) {\n        if (mode !== \"execution\") return;\n        self.fetchData(ui.page, ui.sortBy, ui.sortType);\n      },\n      drawCell: function drawCell(ui) {\n        return self.drawCell(ui.column, ui.key, ui.value, ui.isNewRow);\n      },\n      cellReady: function cellReady(ui) {\n        return self.onCellReady(ui.column, ui.key, ui.cell, ui.isNewRow);\n      },\n      rowSelected: function rowSelected(ui) {\n        if (mode !== \"execution\") return;\n        self.triggerHandler(\"rowSelected\", { id: ui.key, data: ui });\n      },\n      addRow: function addRow(ui) {\n        if (mode !== \"execution\") return;\n        self.addRow();\n      },\n      editRow: function editRow(ui) {\n        if (mode !== \"execution\") return;\n        self.editRow(ui.key);\n      },\n      deleteRow: function deleteRow(ui) {\n        if (mode !== \"execution\") return;\n        self.deleteRow(ui.key);\n      },\n      saveAddedRows: function saveAddedRows(ui) {\n        self.saveInlineAddedRows(ui.keys);\n      },\n      beforeInlineAdd: function beforeInlineAdd() {\n        self.inlineAddDeferred = new $.Deferred();\n      },\n      afterInlineAdd: function afterInlineAdd(data) {\n        if (self.inlineAddDeferred) {\n          self.inlineAddDeferred.resolve();\n        }\n        if (data && data.businessKey)\n        self.triggerRenderChange({ key: data.businessKey });\n      },\n      cancelEdition: function cancelEdition(ui) {\n        self.removeNewRecords(ui);\n      },\n      removeNewRecords: function removeNewRecords(ui) {\n        self.removeNewRecords(ui);\n      } });\n\n  },\n\n  /*\r\n     *   Method to fetch data from the server and then update the data\r\n     */\n  fetchData: function fetchData(page, sortBy, sortType) {\n    var self = this;\n\n    self.dataReadyDeferred = new $.Deferred();\n\n    // Start loading to avoid multiple calls to the server\n    self.startLoading();\n\n    $.when(self.getRemoteData()).then(function (data) {\n      if (data) {\n        self.updateData(data);\n        self.triggerRenderChange({ changed: false });\n        self.dataReadyDeferred.resolve();\n      }\n    }).always(function () {\n      self.endLoading();\n    });\n  },\n\n  processChanges: function processChanges() {\n    var self = this;\n    var rowsList = [];\n    var data = self.properties.data;\n    // Save pending inline add rows\n    for (var id in self.changes) {\n      var sortArray = [];\n      for (var columnXpath in self.changes[id]) {\n\n        if (self.canColumnBeSent(id, columnXpath)) {\n          var columnNumber = self.getColumn(columnXpath).columnIndex - 1;\n          var value = self.changes[id][columnXpath];\n\n          if (typeof value === \"string\") {\n            if (value.match(/\\n/gm) !== null) {\n              value = value.replaceAll(\"\\n\", \"\\\\n\");\n            }\n          }\n\n          sortArray[columnNumber] = value;\n        }\n      }\n      //Fill columnds\n      for (var i = 0; i < self.columns.length; i++) {\n        sortArray[i] = sortArray[i] != undefined ? sortArray[i] : null;\n      }\n      //If new record store action data\n      if (self.newRecords[id]) {\n        sortArray.unshift(parseInt(id + ''));\n        sortArray.creationTimestamp = self.newRecords[id].creationTimestamp;\n        rowsList[rowsList.length] = sortArray;\n      }\n    }\n\n    rowsList = rowsList.sort(function (a, b) {\n      return a.creationTimestamp - b.creationTimestamp;\n    });\n\n    rowsList = rowsList.map(function (row) {\n      if (row.creationTimestamp) {\n        delete row.creationTimestamp;\n      }\n      return row;\n    });\n\n    return rowsList;\n  },\n\n  collectOfflineTaskData: function collectOfflineTaskData(renderValues) {\n    var self = this;\n    var properties = self.properties;\n    var errorsMessage = [];\n    var data = self.properties.data;\n    var temporalNew = {};\n    //Editions in the grid\n    var editedImages = self.editedImages;\n    var offlineFiles = self.offlineFiles;\n    // Save pending inline add rows\n    for (var id in self.changes) {\n      var sortArray = [];\n      var currentChanges = {};\n      var newImages = {};\n      var newFiles = {};\n      for (var columnXpath in self.changes[id]) {\n\n        if (self.canColumnBeSent(id, columnXpath)) {\n          var columnNumber = self.getColumn(columnXpath).columnIndex - 1;\n          var value = self.changes[id][columnXpath];\n\n          if (typeof value === \"string\") {\n            if (value.match(/\\n/gm) !== null) {\n              value = value.replaceAll(\"\\n\", \"\\\\n\");\n            }\n          }\n\n          sortArray[columnNumber] = value;\n          var xpath = properties.xpath + self.buildCellXpathFilter(id) + \".\" + columnXpath;\n          var columnValue = self.changes[id][columnXpath];\n          var value = columnValue && columnValue.value ? columnValue.value : columnValue;\n          if (editedImages[id] && editedImages[id][columnXpath]) {\n            delete editedImages[id][columnXpath].isChanged;\n            newImages[columnXpath] = editedImages[id][columnXpath];\n          } else\n          if (offlineFiles[id] && offlineFiles[id][columnXpath]) {\n            newFiles[columnXpath] = offlineFiles[id][columnXpath];\n          } else\n          {\n            //Changes are stored to delete them if the row is new, the rest of changes can be saved by xpath\n            renderValues[xpath] = value;\n            currentChanges[xpath] = value;\n          }\n        }\n      }\n      //If new record store action data\n      if (self.newRecords[id]) {\n        //Use - to avoid issues with possible xpaths in renderValues used both in new and deleted records       \n        var copyChanges = $.extend({}, self.changes[id]);\n        var addRowData = {\n          url: properties.addUrl,\n          idRender: properties.id,\n          xpath: properties.xpath,\n          xpathContext: properties.xpathContext,\n          contexttype: properties.contexttype,\n          idPageCache: properties.idPageCache,\n          submitData: copyChanges,\n          prepare: true,\n          idRow: parseInt(id + ''),\n          creationTimestamp: self.newRecords[id].creationTimestamp };\n\n        temporalNew[id] = addRowData;\n        for (change in currentChanges) {\n          delete renderValues[change];\n        }\n        for (image in newImages) {\n          delete copyChanges[image];\n          editedImages[id][image].isNew = true;\n        }\n        for (file in newFiles) {\n          delete copyChanges[file];\n          offlineFiles[id][file].isNew = true;\n        }\n        if (Object.keys(newImages).length > 0)\n        editedImages[id].isNew = true;\n        if (Object.keys(newFiles).length > 0)\n        offlineFiles[id].isNew = true;\n        var details = {};\n        details.idRow = parseInt(id + '');\n        details.isNew = true;\n        details.changes = self.changes[id];\n        addRowData.images = newImages;\n        addRowData.files = newFiles;\n        sortArray.push(details);\n\n      }\n    }\n\n    // The following code is needed because when a grid row was added and the user did not click on save, then rows array is not updated\n    self.saveInlineAddedRows();\n\n    // Get data\n    if (JSON.stringify(data.rows) !== JSON.stringify(data.originalRows) || properties[\"new-records\"] != undefined && temporalNew != properties[\"new-records\"]) {\n      renderValues[properties.xpath] = renderValues[properties.xpath] ? renderValues[properties.xpath] : {};\n      if (typeof data.rows !== \"undefined\") {\n        renderValues[properties.xpath].rows = self.processOldRows(data.rows);\n      }\n      if (self[\"deleted-records\"] && Object.keys(self[\"deleted-records\"]).length > 0)\n      renderValues[properties.xpath][\"deleted-records\"] = self[\"deleted-records\"];\n      if (temporalNew && Object.keys(temporalNew).length > 0)\n      renderValues[properties.xpath][\"new-records\"] = temporalNew;\n      if (editedImages && Object.keys(editedImages).length > 0)\n      renderValues[properties.xpath][\"edited-images\"] = editedImages;\n      if (offlineFiles && Object.keys(offlineFiles).length > 0)\n      renderValues[properties.xpath][\"offline-files\"] = offlineFiles;\n    }\n\n  },\n\n  /*\r\n     * Old Method that collects data only for Offline start forms and prepares data for AsyncWorkItem\r\n     */\n  collectOfflineStartData: function collectOfflineStartData(renderValues) {\n    var self = this;\n    var errorsMessage = [];\n    var internalRedersValues = [];\n    var properties = self.properties;\n    var data = self.properties.data;\n    // Save pending inline add rows\n    if (self.isValid(errorsMessage)) {\n      for (var id in self.changes) {\n        var sortArray = [];\n        for (var columnXpath in self.changes[id]) {\n          // Check if the render can submit data\n          if (self.canColumnBeSent(id, columnXpath)) {\n            var columnNumber = self.getColumn(columnXpath).columnIndex - 1;\n            var value = self.changes[id][columnXpath];\n            if (typeof value === \"string\") {\n              if (value.match(/\\n/gm) !== null) {\n                value = value.replaceAll(\"\\n\", \"\\\\n\");\n              }\n            }\n            sortArray[columnNumber] = {\n              value: value,\n              xpath: columnXpath,\n              DataType: self.getColumn(columnXpath).properties.dataType };\n\n          }\n        }\n        if (typeof self.properties.data.rows !== \"undefined\" && self.properties.data.rows.length > 0) {\n          // Search row\n          var currentRow = [];\n          for (var i = 0; i < data.rows.length; i++) {\n            if (data.rows[i][0] == id) {\n              currentRow = data.rows[i];\n              // Delete current data\n              data.rows.splice(i, 1);\n              i--;\n              // Mixed data\n              currentRow = self.processRow(currentRow);\n              sortArray = $.extend(true, currentRow, sortArray);\n              break;\n            }\n          }\n        }\n        internalRedersValues[internalRedersValues.length] = sortArray;\n      }\n    }\n\n\n    // Get data\n    if (JSON.stringify(data.rows) !== JSON.stringify(data.originalRows) || internalRedersValues.length > 0) {\n      if (typeof data.rows !== \"undefined\" && internalRedersValues.length > 0) {\n        renderValues[properties.xpath].rows = $.merge($.merge([], self.processOldRows(data.rows)),\n        internalRedersValues);\n      } else if (typeof data.rows !== \"undefined\" && data.rows.length > 0) {\n        renderValues[properties.xpath].rows = self.processOldRows(data.rows);\n      } else {\n        renderValues[properties.xpath].rows = internalRedersValues;\n      }\n    }\n  },\n\n  /*\r\n     *   Add the render data to the given collection in order to send data to the server\r\n     */\n  collectData: function collectData(renderValues) {\n    var self = this;\n    self.collectOfflineTaskData(renderValues);\n  },\n\n  /*\r\n     *   Delete field id array objects\r\n     */\n  processOldRows: function processOldRows(rows) {\n    var newRows = [];\n    var tempRows = rows;\n    var self = this;\n    for (var col = 0, leng = tempRows.length; col < leng; col++) {\n      var temp = tempRows[col];\n      newRows[col] = $.grep(temp, function (n, i) {\n        return i > 0;\n      });\n\n      var details = {};\n      details.idRow = parseInt(temp[0] + '');\n      details.isNew = self.newRecords[temp[0]] ? true : false;\n      details.changes = self.changes[temp[0]] ? self.changes[temp[0]] : {};\n      newRows[col].push(details);\n    }\n\n    return newRows;\n  },\n  /*\r\n     *   Delete field id array\r\n     */\n  processRow: function processRow(row) {\n    return $.grep(row, function (n, i) {\n      return i > 0;\n    });\n  },\n  /*\r\n     *   Customizes the content drawing inside the cell\r\n     */\n  drawCell: function drawCell(column, key, value, isNewRow) {\n    var self = this;\n\n    if (column.key) return value;\n\n    if (_typeof(value) === \"object\" && value !== null && !isNewRow) {\n      value = value.hasOwnProperty(\"value\") ? value.value : value;\n    }\n\n    // Get render column                \n    var columnIndex = column.index - 1;\n    var renderColumn = self.columns[columnIndex];\n    var cellOverride = self.getCellOverride(key, column.index - 1);\n\n    self.newRecords = self.newRecords || {};\n\n    // Get cell properties\n    if (!self.cellMetadata[key]) self.cellMetadata[key] = {};\n    if (!self.cellMetadata[key][columnIndex]) self.cellMetadata[key][columnIndex] = {};\n    var properties = self.cellMetadata[key][columnIndex].properties || renderColumn.properties;\n\n    var visible = properties.visible !== undefined ? properties.visible : true;\n    var editable = properties.editable !== undefined ? properties.editable : true;\n\n    // Apply overrides from cellOverrides\n    visible = cellOverride.visible;\n    editable = properties.editable ? cellOverride.editable : false;\n\n    // Show editable cell when we are performing inline add operation\n    if (isNewRow) editable = true;\n\n    // If the cell we are drawing is the summary cell, we need to make it readonly\n    if (key === \"summary\") editable = false;\n\n    // Prepare value for upload column\n    if (renderColumn.properties.type === \"columnUpload\") {\n      if (self.offlineFiles[key] && self.offlineFiles[key][renderColumn.properties.xpath]) {\n        value = self.offlineFiles[key][renderColumn.properties.xpath].value;\n      } else\n      if (value && Array.isArray(value) && value.length > 0) {\n        value = self.dataService.database.convertUploadOnlineValueInOfflineValue(value);\n      }\n    }\n\n    renderColumn.properties.displayType = 'value';\n    renderColumn.setValue(key, value);\n    renderColumn.setSurrogateKey(key);\n    renderColumn.properties.data = renderColumn.properties.data || [];\n\n    // Column search\n    if (renderColumn.properties.type === \"columnSearch\" && value != null) {\n      for (var i = 0, len = renderColumn.properties.data.length; i < len; i++) {\n        if (renderColumn.properties.data[i].id == value) {\n          value = { id: renderColumn.properties.data[i].id, label: renderColumn.properties.data[i].value };\n        }\n      }\n    }\n\n    if ((renderColumn.properties.type === \"columnCombo\" || renderColumn.properties.type === \"columnList\") && value != null) {//|| renderColumn.properties.type == \"columnRadio\"\n      for (var i = 0, len = renderColumn.properties.data.length; i < len; i++) {\n        if (renderColumn.properties.data[i].id == value) {\n          value = [[renderColumn.properties.data[i].id, renderColumn.properties.data[i].value]];\n        }\n      }\n    }\n\n    // Column text\n    if (renderColumn.properties.type === \"columnText\" && bizagi.util.isEmpty(value) && value != null) {\n      value = \"\";\n    }\n\n    if (renderColumn.properties.type === \"columnImage\") {\n      if (self.editedImages[key] && self.editedImages[key][renderColumn.properties.xpath]) {\n        renderColumn.getDecorated(key).properties.isChanged = self.editedImages[key][renderColumn.properties.xpath].isChanged;\n      }\n    }\n\n    if (renderColumn.properties.type === \"columnUpload\") {\n      renderColumn.getDecorated(key).properties.xpathContext = self.properties.xpath + self.buildCellXpathFilter(key);\n    }\n\n    // Do the render\n    if (visible) {\n      if (editable) {\n        return self.drawEditableCell(renderColumn, properties, key, value, isNewRow);\n      } else {\n        return self.drawReadonlyCell(renderColumn, properties, key, value);\n      }\n    } else {\n      return \"\";\n    }\n  },\n\n  /*\r\n     *   Draws the editable version for the cell\r\n     */\n  drawEditableCell: function drawEditableCell(renderColumn, properties, key, value, isNewRow) {\n    var self = this;\n    var defer = new $.Deferred();\n\n    // Set editable\n    var originalEditable = renderColumn.properties.editable;\n    renderColumn.properties.editable = true;\n\n    // Fix problem when required property lose\n    renderColumn.overrideProperties({ required: properties.required });\n\n    // Render cell\n    $.when(renderColumn.render(key, value)).done(function (cell) {\n      // Register array with new records, just when this is a new-record\n      if (isNewRow && !self.newRecords[key]) {\n        self.newRecords[key] = { creationTimestamp: Date.now() };\n        self.changes[key] = {};\n      }\n\n      // convert all row visible\n      for (var j = 0; j < self.columns.length; j++) {\n        self.cellOverrides[key] = self.cellOverrides[key] || {};\n        self.getCellOverride(key, j).visible = self.getCellOverride(key, j).visible != undefined ? self.getCellOverride(key, j).visible : true;\n      }\n\n      // Add change handler  \n      renderColumn.getDecorated(key).bind(\"renderchange\", function (render) {\n        self.onCellChange(renderColumn, cell, key);\n      });\n\n      // Resolve cell\n      defer.resolve(cell);\n    });\n\n    // Restore editable\n    renderColumn.properties.editable = originalEditable;\n\n    // Return promise\n    return defer.promise();\n  },\n\n  /*\r\n     *   Draws the readonly version for the cell\r\n     */\n  drawReadonlyCell: function drawReadonlyCell(renderColumn, properties, key, value) {\n    var result = \"\";\n\n    // Use totalizer format when printing summary row\n    if (key === \"summary\") {\n      var originalFormat = renderColumn.properties.textFormat;\n      if (renderColumn.properties.totalize) {\n        renderColumn.properties.textFormat = renderColumn.properties.totalize.format;\n      }\n\n      result = renderColumn.renderSummary(key, value);\n\n      // Restore column format\n      renderColumn.properties.textFormat = originalFormat;\n    } else {\n      result = renderColumn.renderReadOnly(key, value);\n    }\n    return result;\n  },\n\n  /*\r\n     *   Defines the handler when a cell changes its value\r\n     */\n  onCellChange: function onCellChange(renderColumn, cell, key) {\n\n    var self = this;\n    var _value = renderColumn.getValue(key);\n    var compositeValue = renderColumn.getCompositeValue(key);\n\n    if (renderColumn.properties.type === \"columnDate\" && renderColumn.data.properties.showTime == true) {\n\n      if (!bizagi.util.isEmpty(_value)) {\n        var date = bizagi.util.dateFormatter.getDateFromInvariant(_value, true);\n        _value = bizagi.util.dateFormatter.formatInvariant(date, true);\n      } else if (_value === \"\") {\n        _value = \"\";\n      }\n    } else if (renderColumn.properties.type === \"columnDate\") {\n\n      if (!bizagi.util.isEmpty(_value)) {\n        var date = bizagi.util.dateFormatter.getDateFromInvariant(_value, false);\n        date.setHours(0, 0, 0, 0);\n        _value = bizagi.util.dateFormatter.formatInvariant(date, true);\n      } else if (_value === \"\") {\n        _value = \"\";\n      }\n    }\n    if (renderColumn.properties.type === \"columnImage\") {\n      var xpath = self.properties.xpath + self.buildCellXpathFilter(key) + \".\" + renderColumn.properties.xpath;\n      self.editedImages = self.editedImages || {};\n      self.editedImages[key] = self.editedImages[key] || {};\n      self.editedImages[key][renderColumn.properties.xpath] = {\n        id: key,\n        columnXpath: renderColumn.properties.xpath,\n        renderId: renderColumn.properties.id,\n        gridXpath: self.properties.xpath,\n        fullXpath: xpath,\n        value: _value,\n        offlineId: renderColumn.getDecorated(key).buildOfflineImageId(),\n        name: self.dataService.fileService.getOfflineImageName(_value),\n        isChanged: true };\n\n    }\n    if (renderColumn.properties.type === \"columnUpload\") {\n      var xpath = self.properties.xpath + self.buildCellXpathFilter(key) + \".\" + renderColumn.properties.xpath;\n      self.offlineFiles[key] = self.offlineFiles[key] || {};\n      self.offlineFiles[key][renderColumn.properties.xpath] = {\n        id: key,\n        columnXpath: renderColumn.properties.xpath,\n        renderId: renderColumn.properties.id,\n        gridXpath: self.properties.xpath,\n        fullXpath: xpath,\n        value: _value };\n\n\n    }\n\n    if (self.properties.allowEdit || self.grid.bizagi_grid_tablet(\"isNewRecord\", key)) {\n      var trigger = self.grid.bizagi_grid_tablet(\"isNewRecord\", key) ? false : true;\n      self.collectGridChange({\n        id: key,\n        xpath: renderColumn.properties.xpath,\n        value: _value,\n        compositeValue: compositeValue,\n        columnIndex: renderColumn.columnIndex,\n        trigger: trigger,\n        dataType: renderColumn.properties && renderColumn.properties.type });\n\n    }\n\n    // Update change in grid's component data\n    self.grid.bizagi_grid_tablet(\"changeCellValue\", key, renderColumn.columnIndex, _value);\n\n    // If the column has totalizers then we need to refresh the summary\n    if (renderColumn.properties.totalize && renderColumn.properties.totalize.operation) {\n      self.grid.bizagi_grid_tablet(\"refreshSummary\", renderColumn.columnIndex);\n    }\n  },\n  /*\r\n     *   Collect a single cell change made in the grid to send the data when the user saves the form\r\n     */\n  collectGridChange: function collectGridChange(params) {\n    var self = this;\n    params = params || {};\n    var id = params.id;\n    var xpath = params.xpath;\n    var value = params.value;\n    var trigger = typeof params.trigger !== \"undefined\" ? params.trigger : true;\n\n    self.changes[id] = self.changes[id] || {};\n    self.changes[id][xpath] = value;\n\n    if (trigger)\n    self.triggerRenderChange({ key: id, column: xpath });\n  },\n  /*\r\n     *   Executes when the cell is ready and inserted into the DOM\r\n     */\n  onCellReady: function onCellReady(column, key, cell, isNewRow) {\n    // Available editable\n    isNewRow = true;\n    bizagi.rendering.tablet.grid.prototype.onCellReady.apply(this, arguments);\n  },\n\n  /**\r\n      *  Adds a row to the grid\r\n      */\n  addRow: function addRow() {\n    bizagi.showMessageBox(bizagi.localization.getResource(\"render-tablet-error-userfield\"), bizagi.localization.getResource(\"render-tablet-error-userfield\"));\n  },\n\n  /**\r\n      *  Edits a row in the grid\r\n      */\n  editRow: function editRow(id) {\n  },\n\n  /**\r\n      *  Deletes a row to the grid\r\n      */\n  deleteRow: function deleteRow(id) {\n    var self = this;\n\n    if (!id || id == 0) {\n      bizagi.showMessageBox(bizagi.localization.getResource(\"render-grid-message-no-selected-row\"), bizagi.localization.getResource(\"render-grid-header-no-selected-row\"));\n      return;\n    }\n\n    bizagi.showConfirmationBox(this.getResource(\"render-grid-delete-confirmation\")).done(function () {\n      // Save before deletion\n      self.saveInlineAddedRows();\n\n      // Do a grid record deletion\n      $.when(self.submitDeleteRequest(id)).\n      done(function () {\n        // Reload grid\n        self.fetchData();\n\n        // Trigger the event\n        //'key' must be included to trigger a single call to actions and validations\n        //line 310 bizagi.command.controllers.action\n        self.triggerRenderChange({ rowDeleted: true, changed: false, key: id });\n      });\n    });\n  },\n\n  /**\r\n      *  Edits the entire row (inline) in another slide\r\n      */\n  editInline: function editInline(id) {\n  },\n  /**\r\n      * Retrieve the data for the new rows and push them into the server\r\n      * @param keys\r\n      * @param bRefresh\r\n      */\n  saveInlineAddedRows: function saveInlineAddedRows(keys, bRefresh) {\n    var self = this;\n\n    // Update data\n    self.updateRowsFromChanges();\n    self.updateNewRowsAsSaved();\n  },\n\n  /**\r\n      * Update rows as saved\r\n      */\n  updateNewRowsAsSaved: function updateNewRowsAsSaved() {\n    var self = this;\n\n    if (!bizagi.util.isEmpty(self.newRecords)) {\n      self.triggerGridPluginHandler(\"hideHeaderButtons\");\n\n      Object.keys(self.newRecords || []).\n      forEach(function (key) {\n        self.setRowAsSaved(key);\n      });\n    }\n  },\n\n  updateRowsFromChanges: function updateRowsFromChanges() {\n    var self = this;\n    var rows = self.processChanges();\n\n    if (!bizagi.util.isEmpty(rows)) {\n      self.properties.data.rows = self.mergeArray(self.properties.data.rows, rows);\n    }\n  },\n\n  mergeArray: function mergeArray(a, b) {\n    var self = this;\n    var result = bizagi.clone(a);\n    b.forEach(function (row) {\n      var key = row[0];\n      var rowToModify = self.getRowByKey(result, key);\n      if (bizagi.util.isEmpty(rowToModify))\n      result.push(row);else\n\n      rowToModify = self.mergeRow(rowToModify, row);\n    });\n    return result;\n  },\n\n  getRowByKey: function getRowByKey(a, id) {\n    var result = a.filter(function (r) {return r[0] == id;});\n    if (result.length == 0) return null;\n    return result[0];\n  },\n\n  mergeRow: function mergeRow(rowA, rowB) {\n    rowB.forEach(function (item, i) {\n      if (item != null && item != undefined)\n      rowA[i] = item;\n    });\n    return rowA;\n  },\n\n  /*\r\n     * Removes invalid records \r\n     */\n  removeNewRecords: function removeNewRecords(ui) {\n    var self = this;\n\n    if (ui && ui.keys) {\n      $.each(ui.keys, function (_, key) {\n        if (self.newRecords[key]) {\n          delete self.newRecords[key];\n          delete self.changes[key];\n          delete self.offlineFiles[key];\n        }\n      });\n    }\n  },\n\n  /*\r\n     *   Fetch the data into a deferred\r\n     */\n  getRemoteData: function getRemoteData(params) {\n    var self = this;\n    var properties = self.properties;\n\n    // Set params\n    params = params || {};\n\n    // Check if a custom method has been given\n    if (properties.overrideGetRemoteData) {\n      var result = properties.overrideGetRemoteData(params);\n      return result != null ? result.promise() : null;\n    }\n\n    // Default ajax call\n    var defer = new $.Deferred();\n\n    // Resolve with remote data\n    var data = properties.data;\n\n    // Resolve with fetched data    \n    properties.page = data.page;\n    properties.records = data.records;\n    properties.totalPages = data.totalPages;\n\n    // Check RTL\n    if (self.isRTL()) {\n      data.rows = self.changeOrderData(data.rows);\n    }\n\n    defer.resolve(data);\n\n    return defer.promise();\n  },\n  /*\r\n     *   Submits a grid delete record request for the given id \r\n     *   Returns a deferred\r\n     */\n  submitDeleteRequest: function submitDeleteRequest(id) {\n    var self = this;\n    var properties = self.properties;\n    var data = self.properties.data;\n    var statusAction = false;\n    // Found row by id\n    var currentRow = [];\n    for (var i = 0, length = data.rows.length; i < length; i++) {\n      if (data.rows[i][0] == id) {\n        currentRow = data.rows[i];\n\n        data.rows.splice(i, 1);\n        i--;\n\n        data.records--;\n        statusAction = true;\n        var xpath = properties.xpath + self.buildCellXpathFilter(id);\n\n        var delInfo = {\n          url: properties.deleteUrl,\n          idRender: properties.id,\n          xpath: xpath,\n          xpathContext: properties.xpathContext,\n          idPageCache: properties.idPageCache,\n          contexttype: properties.contextType,\n          prepare: true };\n\n        self[\"deleted-records\"][id] = delInfo;\n\n        delete self.newRecords[id];\n        delete self.editedImages[id];\n        delete self.offlineFiles[id];\n        delete self.changes[id];\n\n        break;\n      }\n    }\n\n    return data.rows;\n  },\n\n  isValidGrid: function isValidGrid() {\n    var self = this;\n    var errorsMessage = [];\n    var form = self.getFormContainer();\n\n    if (typeof form.validationController !== \"undefined\")\n    form.validationController.clearValidationMessages();\n\n    self.isValid(errorsMessage);\n\n    if (errorsMessage.length > 0) {\n      if (typeof form.validationController !== \"undefined\") {\n        for (var index = 0; index < errorsMessage.length; index++) {\n          form.validationController.showValidationMessage(errorsMessage[index].message, errorsMessage[index].xpath);\n        }\n      }\n\n      return false;\n    } else {\n      return true;\n    }\n  },\n\n  /*\r\n      *   Returns the row indexes for the data\r\n      */\n  getIndexes: function getIndexes() {\n    var self = this;\n    var data = self.mergeArray(self.properties.data.rows, self.getDataNewRows());\n    return $.map(data, function (item, i) {\n      return item[0];\n    });\n  } });","function _typeof(obj) {\"@babel/helpers - typeof\";if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {_typeof = function _typeof(obj) {return typeof obj;};} else {_typeof = function _typeof(obj) {return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;};}return _typeof(obj);} /**\r\n                                                                                                                                                                                                                                                                                                                                                                                *   Name: Bizagi Tablet Render Search Extension\r\n                                                                                                                                                                                                                                                                                                                                                                                *   Author: Bizagi UI Forms\r\n                                                                                                                                                                                                                                                                                                                                                                                *   Comments:\r\n                                                                                                                                                                                                                                                                                                                                                                                *   -   This script will redefine the Search render class to adjust to tablet devices\r\n                                                                                                                                                                                                                                                                                                                                                                                */\n\n// Extends from render tablet base\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.search\", bizagi.rendering.search.prototype);\n// Extends itself\nbizagi.rendering.tablet.search.extend(\"bizagi.rendering.tablet.search\", {\n  ADVANCED_SEARCH_ID: -1,\n  ADVANCED_ADDITION_ID: -2,\n  CLEAR_SEARCH_ID: -3,\n  NO_RESULTS_SEARCH_ID: -4,\n  DEFAULT_SEARCH_ID: \"\",\n  SEARCH_MIN_LENGTH: 3,\n  SEARCH_DELAY: 250,\n  SEARCH_MAX_RECORDS: 50 },\n{\n\n  /**\r\n   * Update or init the element data\r\n   * @param {} data submitData\r\n   * @returns {}\r\n   */\n  initializeData: function initializeData(data) {\n    var self = this;\n\n    // Call base\n    self._super(data);\n\n    // Check if offline forms is supported\n    this.isOfflineForm = bizagi.util.isOfflineForm({ context: this });\n    this.properties.submitOnChange = this.isOfflineForm ? false : this.properties.submitOnChange;\n\n    // Store reference of all ajax request in order to run only one instance of them\n    this.deferredReference = null;\n  },\n\n  renderReadOnly: function renderReadOnly() {\n    var template = this.renderFactory.getTemplate(\"readonly\");\n    var value = this.getDisplayValue();\n    var label = value.label || value.value;\n\n    if (typeof label != \"undefined\") {\n      if (_typeof(label) == \"object\")\n      label = label.join(\" - \");\n    } else {\n      label = \"\";\n    }\n\n    if (typeof label == \"string\") {\n      if (value.additionallabel) {\n        label += \" - \" + value.additionallabel;\n      }\n\n      label = bizagi.util.sanitizeHTML(label);\n    }\n\n    return $.fasttmpl(template, {\n      value: label,\n      editable: this.properties.editable });\n\n  },\n\n  /**\r\n      * Template method to implement in each device to customize each render after processed\r\n      * @returns {}\r\n      */\n  postRender: function postRender() {\n    this.searchInput = $(\".bz-input-icon\", this.getControl());\n  },\n\n  postRenderReadOnly: function postRenderReadOnly() {\n    this.searchInput = $(\".bz-input-icon\", this.getControl());\n  },\n\n  /**\r\n      * Template method to implement in each device to customize the render's behaviour\r\n      * to add handlers\r\n      * @returns {}\r\n      */\n  configureHandlers: function configureHandlers() {\n    var self = this;\n    var control = self.getControl();\n\n    // Select new item\n    $(\".bz-input-icon\", control).on(\"click\", function () {\n      if (!self.properties.advancedSearch || self.isOfflineForm) {\n        self._simplySearchView();\n      } else {\n        self._advanceSearchView();\n      }\n    });\n\n    $(\".bz-icn--clear\", control).bind(\"click\", function (event) {\n      // Change display icon\n      $(\".bz-input-icon\", control).addClass(\"bz-input-icon--empty\");\n\n      // Call clean data\n      self.cleanData();\n\n      // Submit info to server\n      self.readyActionExecution().done(function () {\n        if (self.properties.submitOnChange) {\n          self.submitData();\n        }\n      });\n\n      event.stopPropagation();\n    });\n\n  },\n\n  /**\r\n      * Configure the modalView Handlers for the new suggest control\r\n      * @param {} inputContainer\r\n      * @returns {}\r\n      */\n  configureModalViewHandlers: function configureModalViewHandlers(modalView) {\n    var self = this;\n\n    // Configuring list as a selectable element\n    self.modalViewList = $(\".bz-list\", modalView.content);\n\n    // Suggest\n    var suggestFilter = bizagi.util.debounce(function (value) {\n      self.autoCompleteSearchResults($.trim(value));\n    }, self.Class.SEARCH_DELAY);\n\n    $(\"[data-action=close]\", modalView.header).bind(\"click\", function () {\n      modalView.close();\n    });\n\n    var $clearButton = $(\".bz-modal-view__clear\", modalView.header);\n    var $searchInput = $(\".bz-modal-view__search\", modalView.header);\n\n    $clearButton.bind(\"click\", function () {\n      $searchInput.val(\"\").trigger(\"clean\");\n    });\n\n    // Setting the initial selected display value\n    $(\".bz-list\", modalView.content).on(\"click\", \"li\", function () {\n      var item = $.data(this).item;\n\n      if (!item || item && item.id == self.Class.NO_RESULTS_SEARCH_ID)\n      return;\n\n      self.selectItem(item);\n\n      modalView.close();\n    });\n\n    // Filtering list\n    $searchInput.bind(\"clean keyup\", function () {\n      if (this.value == \"\") {\n        $clearButton.removeClass(\"bz-modal-view__clear--visible\");\n      } else {\n        $clearButton.addClass(\"bz-modal-view__clear--visible\");\n      }\n      suggestFilter(this.value);\n    }).on(\"focus\", function () {\n      modalView.header.addClass(\"bz-modal-view__header--active\");\n    }).on(\"blur\", function () {\n      modalView.header.removeClass(\"bz-modal-view__header--active\");\n    });\n  },\n\n\n  /**\r\n      * Opens the search slide\r\n      * @private\r\n      */\n  _advanceSearchView: function _advanceSearchView() {\n    var self = this;\n    var properties = self.properties;\n    var formSearchParams = $.extend({}, self.getParams(), {\n      container: self.getFormContainer().container,\n      title: properties.displayName || \"\",\n      allowNew: properties.allowNew });\n\n\n    // Create slide search object\n    var searchForm = new bizagi.rendering.tablet.slide.searchForm(\n    self.dataService,\n    self.renderFactory,\n    properties.searchForms, {\n      allowFullSearch: properties.allowFullSearch,\n      maxRecords: properties.maxRecords,\n      idRender: properties.id,\n      navigation: self.getParams().navigation,\n      idPageCache: properties.idPageCache,\n      orientation: properties.orientation || \"ltr\",\n      editable: properties.editable },\n    formSearchParams);\n\n    // Render the search form\n    searchForm.render({\n      idRender: properties.id,\n      xpath: properties.xpath,\n      xpathContext: properties.xpathContext,\n      idPageCache: properties.idPageCache }).\n    done(function (item) {\n      // Set data\n      self.setValue(item);\n\n      self.readyActionExecution().done(function () {\n        var form = self.getFormContainer();\n\n        if (!self.properties.submitOnChange) {\n          $.when(form.submitData()).done(function () {\n            self.refreshControl();\n          });\n        }\n      });\n    });\n  },\n\n  /**\r\n      * Simply search autocomplete\r\n      * @private\r\n      */\n  _simplySearchView: function _simplySearchView() {\n    var self = this;\n    var content = self.getContentTemplate();\n\n    self.searchInput.mobileView({\n      customHeader: $.fasttmpl(self.renderFactory.getTemplate(\"modal-header-search\"), {}),\n      orientation: self.properties.orientation || \"\",\n      contentTemplate: content,\n      style: \"width: 80%; height: 70%\",\n      close: function close() {\n        self.triggerGlobalHandler(\"modalViewDidDisappear\", {});\n      },\n      afterOpenAnimation: function afterOpenAnimation(event) {\n        $(\".bz-modal-view__search\", event.view.header).focus();\n      },\n      open: function open(event) {\n        self.triggerGlobalHandler(\"closeModalValidationMessage\", {});\n        self.triggerGlobalHandler(\"modalViewDidAppear\", {});\n      },\n      configureActions: function configureActions(context) {\n        self.configureModalViewHandlers(context);\n      } });\n\n  },\n\n  autoCompleteSearchResults: function autoCompleteSearchResults(currentValue) {\n    var self = this;\n\n    $.when(self.processRequest({ term: currentValue })).\n    done(function (response) {\n\n      self.modalViewList.find(\"li\").remove();\n\n      for (var i = 0, length = response.length; i < length; i++) {\n        var searchItem = self.renderSearchItem(response[i]);\n\n        searchItem.appendTo(self.modalViewList);\n      }\n    });\n  },\n\n  renderSearchItem: function renderSearchItem(item) {\n    var self = this;\n    var template = self.renderFactory.getTemplate(\"search.item\");\n\n    var searchItem = $.tmpl(template, {\n      id: item.id,\n      label: item.label,\n      value: item.value });\n\n\n    searchItem.data(\"item\", item);\n\n    return searchItem;\n  },\n\n  processRequest: function processRequest(req) {\n    var self = this;\n    var properties = self.properties;\n    var deferred = new $.Deferred();\n\n    // Create array for response objects\n    var suggestions = [];\n\n    if (self.properties.allowSuggest && req.term.length >= self.properties.searchLength) {\n\n      // Update term property to reflect the search\n      properties.term = req.term;\n\n      var getSuggestData = self.isOfflineForm ? self.getOfflineData() : self.getData();\n\n      // Cancel previous request in order to improve the performance\n      if (self.deferredReference && typeof self.deferredReference.reject === \"function\" && self.deferredReference.state() !== \"resolved\") {\n        self.deferredReference.reject({ hideStatus: true });\n      }\n\n      self.deferredReference = getSuggestData.done(function (data) {\n        if (data && data.length > 0) {\n          data = data.slice(0, properties.maxRecords);\n\n          if (data.length > self.Class.SEARCH_MAX_RECORDS) {\n            data = data.slice(0, self.Class.SEARCH_MAX_RECORDS);\n\n            suggestions.push({\n              id: self.Class.NO_RESULTS_SEARCH_ID,\n              label: self.getResource(\"render-search-maximum-records-allowed\"),\n              value: \"\" });\n\n\n\n          } else {\n            data = data.slice(0, properties.maxRecords);\n          }\n\n          // Default value\n          suggestions.push({\n            id: self.Class.DEFAULT_SEARCH_ID,\n            label: self.getResource(\"render-combo-empty-value\"),\n            value: \"\" });\n\n\n          $.each(data, function (i, val) {\n            if (properties.maxRecords === 0 || i < properties.maxRecords) {\n              var parseValue = bizagi.util.performTermMatches(val.value, req.term);\n\n              suggestions.push({ id: val.id, label: parseValue, value: val.value });\n            }\n          });\n\n        } else {\n          suggestions.push({\n            id: self.Class.NO_RESULTS_SEARCH_ID,\n            label: self.getResource(\"render-grid-no-records\"),\n            value: \"\" });\n\n        }\n\n        deferred.resolve(suggestions);\n\n      }).fail(function () {\n        deferred.reject();\n      });\n    } else {\n      deferred.resolve(suggestions);\n    }\n\n    return deferred.promise();\n  },\n\n  /**\r\n      * Sets the value to show and calls the method to sets the control value\r\n      * @param {object} value\r\n      * @param {int} value.id\r\n      * @param {string} value.label\r\n      * @param {string=} value.additionallabel\r\n      * @example\r\n      *   value = {\r\n      *     id: 123,\r\n      *     label: \"xx\",\r\n      *     additionallabel: \"yyyy\"\r\n      *   }\r\n      */\n  setDisplayValue: function setDisplayValue(value) {\n    var self = this;\n    var label = \"\";\n\n    value = self.mapValue(value);\n\n    if (value !== null && typeof value !== \"undefined\" && typeof value.id !== \"undefined\") {\n      if (value.additionallabel && value.label) {\n        label = value.label + \" - \" + value.additionallabel;\n      } else if (value.label) {\n        label = value.label;\n      } else {\n        label = \"\";\n      }\n\n      var inputText = self.searchInput.find(\"input\");\n      inputText.val(label);\n      inputText.attr(\"id\", value.id);\n\n      if (value.id !== \"\" && self.properties.allowClear) {\n        $(\".bz-input-icon\", self.getControl()).removeClass(\"bz-input-icon--empty\");\n      }\n\n      if (self.properties.editable) {\n        self.setValue(value, true);\n      }\n    }\n  },\n\n  /**\r\n      * on the tablet only sends the id to submit in the tablet it send the id and the value\r\n      * @returns {}\r\n      */\n  submitData: function submitData() {\n    var self = this;\n    var data = {};\n\n    // Add current data\n    data[self.properties.xpath] = self.getValue();\n\n    // Executes submit on change\n    if (self.properties.submitOnChange && data[self.properties.xpath].id != undefined)\n    self.submitOnChange(data, true);\n  },\n\n  /**\r\n      * Cleans the control's data\r\n      * @returns {}\r\n      */\n  cleanData: function cleanData() {\n    var value = { id: \"\", value: \"\" };\n\n    if (bizagi.util.isEmpty(this.value))\n    value = {};\n\n    this.setValue(value);\n    this.setDisplayValue(value);\n  },\n\n  getContentTemplate: function getContentTemplate() {\n    var template = this.renderFactory.getTemplate(\"search.items\");\n    var content = $.fasttmpl(template, {});\n\n    return $.trim(content);\n  },\n\n  selectItem: function selectItem(item) {\n    var self = this;\n    var previousValue = self.hasValue();\n    var label = Array.isArray(item.value) ? item.value.join(\" - \") : item.value;\n\n    self.setDisplayValue({ id: item.id, label: label });\n\n    if (self.properties.allowClear) {\n\n      if (item.id === self.Class.DEFAULT_SEARCH_ID) {\n        self.searchInput.find(\".bz-search__clear\").addClass(\"bz-search--hidden\");\n        self.searchInput.find(\".bz-search__icon\").removeClass(\"bz-search--hidden\");\n      } else {\n        if (!previousValue && item.id !== self.Class.DEFAULT_SEARCH_ID) {\n          self.searchInput.find(\".bz-search__clear\").removeClass(\"bz-search--hidden\");\n          self.searchInput.find(\".bz-search__icon\").addClass(\"bz-search--hidden\");\n        }\n      }\n    }\n  },\n\n  /**\r\n      * Get offline data for request\r\n      * @param request\r\n      */\n  getOfflineData: function getOfflineData() {\n    var self = this;\n    var dataList = self.properties.data || [];\n    var filter = (self.properties.term || \"\").toLowerCase();\n\n    return $.when(filter.startsWith(\"%%\") ? dataList : dataList.filter(function (item) {\n      var value = item && item.value ? item.value : \"\";\n      if (_typeof(value) === \"object\") {\n        value = value.toString();\n      }\n      return value.toLowerCase().indexOf(filter) > -1;\n    }));\n  } });","function _typeof(obj) {\"@babel/helpers - typeof\";if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {_typeof = function _typeof(obj) {return typeof obj;};} else {_typeof = function _typeof(obj) {return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;};}return _typeof(obj);} /**\r\n                                                                                                                                                                                                                                                                                                                                                                                *   Name: Bizagi Tablet Render list Extension\r\n                                                                                                                                                                                                                                                                                                                                                                                *   Author: UI Forms Team\r\n                                                                                                                                                                                                                                                                                                                                                                                *   Comments:\r\n                                                                                                                                                                                                                                                                                                                                                                                *   -   This script will redefine the list render class to adjust to tablet devices\r\n                                                                                                                                                                                                                                                                                                                                                                                */\n\n// Extends from render tablet base\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.list\", bizagi.rendering.combo.prototype);\n// Extends itself\nbizagi.rendering.tablet.list.extend(\"bizagi.rendering.tablet.list\", bizagi.rendering.list.prototype);\n// Extends itself\nbizagi.rendering.tablet.list.extend(\"bizagi.rendering.tablet.list\", {}, {\n\n  /*\r\n                                                                            *   Template method to implement in each children to customize each control\r\n                                                                            */\n  renderControl: function renderControl() {\n    var template = this.renderFactory.getTemplate(\"list\");\n\n    return $.fasttmpl(template, {\n      editable: this.properties.editable,\n      value: this.getDisplayValue() });\n\n\n  },\n\n  /**\r\n      * Method to render non editable values\r\n      * @returns {*|jQuery}\r\n      */\n  postRenderReadOnly: function postRenderReadOnly() {\n    // Prevent call base\n  },\n\n  /**\r\n      * Add event handlers to the combo control\r\n      */\n  configureHandlers: function configureHandlers() {\n    var self = this;\n    var control = self.getControl();\n\n    if (self.getMode() !== \"execution\") {\n      return;\n    }\n\n    $(\".bz-form-list\", control).bind(\"click\", function () {\n\n      $(this).mobileView({\n        customHeader: $.fasttmpl(self.renderFactory.getTemplate(\"modal-header-search\"), {}),\n        displayName: self.properties.displayName || \"\",\n        orientation: self.properties.orientation || \"\",\n        contentTemplate: \"\",\n        style: \"width: 80%; height: 70%\",\n        close: function close() {\n          self.triggerGlobalHandler(\"modalViewDidDisappear\", {});\n        },\n\n        open: function open() {\n          self.triggerGlobalHandler(\"closeModalValidationMessage\", {});\n          self.triggerGlobalHandler(\"modalViewDidAppear\", {});\n        },\n\n        configureActions: function configureActions(context) {\n          $.when(self.renderCombo({})).done(function (list) {\n            $(\".bz-modal-view__content\", context.content).html(list);\n            self.configureModalViewHandlers(context);\n          });\n        } });\n\n    });\n\n  },\n\n  processComboData: function processComboData(data) {\n    var self = this;\n    data.forEach(function (value) {\n      self.validateValue(value);\n    });\n  },\n\n  /**\r\n      * Setting the display value, always you call a setDisplayValue yor are performinng a setValue under the hood.\r\n      * */\n  setDisplayValue: function setDisplayValue(value) {\n    var comboValue;\n    var control = this.getControl();\n\n    value = this.mapValue(value);\n\n    if (value && _typeof(value) === \"object\" && typeof value.label !== \"undefined\") {\n\n      if (value.label !== \"\" && !bizagi.util.isNumeric(value.label)) {\n        comboValue = value.label;\n      } else {\n        var selected = this.findDataValueById(value.value);\n        comboValue = selected ? selected.value : \"\";\n      }\n\n      if ($.isArray(comboValue)) {\n        comboValue = comboValue.join(\" - \");\n      }\n\n      value = { \"id\": value.id, \"value\": comboValue };\n    }\n\n    $(\"input\", control).val(this.formatItem(value.value));\n\n    //Set Value\n    this.selectedValue = value;\n    this.setValue(value);\n  },\n\n  /**\r\n      * Set the handlers for the modal elements\r\n      * @param {kendoModalObject} context full modal object\r\n      */\n  configureModalViewHandlers: function configureModalViewHandlers(context) {\n    var self = this;\n\n    $(\".bz-list__item\", context.content).on(\"click\", function () {\n      var valueObjet = {\n        \"id\": $(this).data(\"value\"),\n        \"value\": $(this).text() };\n\n\n      if (valueObjet.id == \"\") {\n        valueObjet.value = \"\";\n      }\n\n      self.setDisplayValue(valueObjet);\n      self.trigger(\"select\", [valueObjet, false]);\n      context.close();\n    });\n\n    var $elementsList = $(\".bz-list li\", context.content);\n    var $clearButton = $(\".bz-modal-view__clear\", context.header);\n    var $searchInput = $(\".bz-modal-view__search\", context.header);\n\n    $(\"[data-action=close]\", context.header).bind(\"click\", function () {\n      context.close();\n    });\n\n    $clearButton.bind(\"click\", function () {\n      $searchInput.val(\"\").trigger(\"change\");\n    });\n    // Filtering list\n    $searchInput.bind(\"change keyup\", function () {\n      if (this.value == \"\") {\n        $clearButton.removeClass(\"bz-modal-view__clear--visible\");\n      } else {\n        $clearButton.addClass(\"bz-modal-view__clear--visible\");\n      }\n      self.filterList(this.value, $elementsList);\n    }).focus();\n  },\n\n  /**\r\n      * Filtering list of elements\r\n      * @returns {}\r\n      */\n  filterList: function filterList(search, $li) {\n\n    $li.filter(function () {\n      var stringContainer = $(this).text().toUpperCase();\n      var stringToSearch = search.toUpperCase();\n\n      if (stringContainer.indexOf(stringToSearch) >= 0) {\n        return $(this);\n      } else {\n        $(this).hide();\n      }\n    }).show();\n  },\n\n  /**\r\n      * Print the list of elements to show in the modal\r\n      * @param {object} data list of elements to print\r\n      */\n  renderComboTemplate: function renderComboTemplate(data) {\n    var template = this.renderFactory.getTemplate(\"list-items\");\n    var value = this.getValue();\n    value = value !== null && typeof value !== \"undefined\" ? value : { \"id\": \"\", \"value\": \"\" };\n\n    return $.fasttmpl(template, {\n      \"items\": data,\n      \"selectedId\": value.id,\n      \"hasItems\": data.length > 0 },\n    {\n      \"validateItem\": this.validateValue });\n\n  },\n\n  getElementsToStylize: function getElementsToStylize($context) {\n    return this.properties.editable ? $(\"input\", $context) : $(\".readonly-control\", $context);\n  } });","function _typeof(obj) {\"@babel/helpers - typeof\";if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {_typeof = function _typeof(obj) {return typeof obj;};} else {_typeof = function _typeof(obj) {return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;};}return _typeof(obj);} /*\r\n                                                                                                                                                                                                                                                                                                                                                                               *   Name: BizAgi Tablet Column Decorator Extension\r\n                                                                                                                                                                                                                                                                                                                                                                               *   Author: Diego Parra\r\n                                                                                                                                                                                                                                                                                                                                                                               *   Comments:\r\n                                                                                                                                                                                                                                                                                                                                                                               *   -   This script will redefine the column decorator class to adjust to tablet devices\r\n                                                                                                                                                                                                                                                                                                                                                                               */\n\n\nbizagi.rendering.tablet.columns.column.extend(\"bizagi.rendering.tablet.columns.combo\", {}, bizagi.rendering.columns.combo.prototype);\n// Extends itself\nbizagi.rendering.tablet.columns.combo.extend(\"bizagi.rendering.tablet.columns.combo\", {}, {\n  /*\r\n                                                                                            *   Sets the internal value\r\n                                                                                            */\n  setValue: function setValue(surrogateKey, value) {\n    var self = this;\n    var decorated = self.getDecorated(surrogateKey);\n    // Check is offline form\t    \n    var isOfflineForm = bizagi.util.isOfflineForm({ context: self });\n\n    if (decorated === null) {\n      return;\n    }\n\n    // Perform default set value when rendering summary row\n    if (surrogateKey == \"summary\") return self._super(surrogateKey, value);\n\n    if (isOfflineForm && (typeof value == \"number\" || typeof value == \"string\")) {\n      var newValue = _typeof(self.properties.data) == \"object\" ? self.properties.data.find(function (item) {return item.id == value;}) : value;\n\n      self._super(surrogateKey, newValue);\n      decorated.selectedValue = value;\n    } else if (self.properties.type == \"columnRadio\") {\n      self._super(surrogateKey, value);\n      decorated.selectedValue = value;\n    } else if (value && value.length > 0) {\n\n      // Create the value property\n      var newValue = {\n        id: value[0][0],\n        value: value[0].length > 2 ? $.grep(value[0], function (item, i) {return i != 0;}) : value[0][1] };\n\n      // Call base\n      self._super(surrogateKey, newValue);\n      decorated.selectedValue = newValue.value;\n    } else if (value && value.id && value.value) {\n      self._super(surrogateKey, value);\n      decorated.selectedValue = value.value;\n    } else if (value && typeof value == \"number\") {\n      self._super(surrogateKey, value);\n    } else if (isOfflineForm && value !== null && _typeof(value) === \"object\" && value.value) {\n      self._super(surrogateKey, value.value);\n      decorated.selectedValue = value.value;\n    } else {\n      // Set null values when the entry array is null\n      self._super(surrogateKey, null);\n      decorated.selectedValue = \"\";\n    }\n  } });","/**\r\n *   Name: Bizagi Tablet slide view implementation\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   Serves as an slide form that can render a inner form\r\n */\n\n// Extends itself\n$.Class.extend(\"bizagi.rendering.tablet.slide.view\", {}, {\n  /* CONSTRUCTOR\r\n                                                            =====================================================*/\n  init: function init(dataService, renderFactory, slideFormParams) {\n    var self = this;\n\n    // Define instance variables\n    self.dataService = dataService;\n    self.renderFactory = renderFactory;\n    self.slideFormParams = slideFormParams || {};\n    self.slideFormDeferred = new $.Deferred();\n\n    self.container = self.slideFormParams.navigation.createRenderContainer({ title: self.slideFormParams.title });\n  },\n\n  buttons: [],\n\n  processFormButtons: function processFormButtons(form) {\n    var self = this;\n\n    var onSaveClick = function onSaveClick() {\n      if (form) {\n        // Perform validations\n        if (form.validateForm()) {\n\n          // Collect data\n          var data = {};\n          form.collectRenderValues(data);\n\n          if (self.slideFormParams.allowGetOriginalFormValues) {\n            data.formValues = form.children;\n          }\n\n          // Add page cache for this form\n          data.idPageCache = form.getPageCache();\n\n          // Call user callback\n          if (self.slideFormParams.onSave) {\n            $.when(self.slideFormParams.onSave(data)).\n            done(function (result) {\n              if (!result || result === true || result.type === \"success\") {\n                // Close slide\n                self.goBack();\n\n                // Resolve deferred\n                self.slideFormDeferred.resolve(data);\n\n              } else if (result.type === \"validationMessages\") {\n                // Add validation messages\n                form.addValidationMessage(result.messages);\n              } else if (result.type === \"error\") {\n                // Add error messages\n                form.addErrorMessage(result.message);\n              }\n            }).fail(function (dataFail) {\n\n              var message = dataFail.responseText ? dataFail.responseText : typeof dataFail === \"string\" ? dataFail : dataFail.toString();\n\n              // Convert String to object\n              if (typeof message === \"string\") {\n                try {\n                  message = JSON.parse(message).message;\n                } catch (e) {\n                  message = message.match(/\"message\":(.*)\",/)[0];\n                  message = message.substr(11, message.length - 13);\n                }\n\n              } else if (!message.message) {\n                message = dataFail;\n              }\n\n              form.validateForm();\n              form.clearValidationMessages();\n              form.addValidationMessage(message);\n\n              // Close slide\n              self.goBack();\n\n              //reject defered\n              self.slideFormDeferred.resolve(data);\n            });\n\n          } else {\n            // Close slide\n            self.goBack();\n\n            //reject defered\n            self.slideFormDeferred.reject();\n          }\n        }\n      }\n    };\n\n    var onCancelClick = function onCancelClick() {\n      // Close slide\n      self.goBack();\n      //reject defered\n      self.slideFormDeferred.reject();\n    };\n\n    form.buttons = [$.extend(form.buttons[0] || {},\n    {\n      \"caption\": bizagi.localization.getResource(\"render-form-dialog-box-save\"),\n      \"actions\": [\"submitData\", \"refresh\"],\n      \"submitData\": true,\n      \"refresh\": true,\n      \"ordinal\": 0,\n      \"action\": \"save\",\n      \"save\": true,\n      \"style\": \"\",\n      callback: onSaveClick }),\n\n    $.extend(form.buttons[1] || {}, {\n      \"caption\": bizagi.localization.getResource(\"render-form-dialog-box-close\"),\n      \"actions\": [\"submitData\", \"refresh\"],\n      \"submitData\": true,\n      \"refresh\": true,\n      \"ordinal\": 1,\n      \"action\": \"back\",\n      \"save\": true,\n      \"style\": \"\",\n      callback: onCancelClick })];\n\n\n\n    // If form is editable, add \"save\" button\n    if (!self.slideFormParams.showSaveButton) {\n      form.buttons.shift();\n    }\n\n    //self._renderButtons(form);\n  },\n\n  /*\r\n      *   Render the form\r\n      *   The params are the same that will be send to the ajax service\r\n      *   Returns a deferred\r\n      */\n  render: function render(params) {\n    var self = this;\n\n    // Fill content\n    self.renderSlideForm(params);\n\n    // Return promise\n    return self.slideFormDeferred.promise();\n  },\n\n  /* RENDERS slideForm\r\n      =====================================================*/\n  renderSlideForm: function renderSlideForm(params) {\n\n    var self = this;\n    var defer = new $.Deferred();\n\n    bizagi.loading.start();\n\n    // Load template and data\n    $.when(self.dataService.getFormData(params)).then(function (data) {\n      /*** SUCCESS FILTER **/\n      if (params.recordXPath) {\n        data.form.properties.recordXpath = params.recordXPath;\n      }\n\n      // Apply editable param\n      if (!self.slideFormParams.showSaveButton || params.editable === false) {\n        data.form.properties.editable = false;\n      }\n\n      if (typeof data.form.properties !== \"undefined\") {\n        data.form.properties.orientation = self.slideFormParams.orientation || \"ltr\";\n      }\n\n      // Render dialog template\n      var form = self.renderFactory.getContainer({\n        type: \"form\",\n        data: data.form,\n        navigation: self.slideFormParams.navigation,\n        view_container: self.container });\n\n\n      form.params = $.extend({}, form.params, params.formParams);\n\n      self.processFormButtons(form);\n\n      self.form = form;\n\n      // Return rendering promise\n      return form.render();\n\n    }).done(function (element) {\n\n      // Append form in the slide view\n      self.container.element.html(element);\n\n      if (!params.isRefresh) {\n        self.slideFormParams.navigation.navigate(self.container.id);\n      }\n\n      //self.container.setNavigationButtons(self.form);\n\n      // Remove default form buttons\n      $(\".ui-bizagi-button-container .action-button\", self.form.container).remove();\n      // Add Button\n      $(\".ui-bizagi-button-container\", self.form.container).append(self.buttonContainer);\n\n      // Publish an event to check if the form has been set in the DOM\n      self.form.triggerHandler(\"ondomincluded\");\n\n      // Attach a refresh handler to recreate all the form\n      self.form.bind(\"refresh\", function (data, refreshParams) {\n        refreshParams.formParams = refreshParams.params || self.form.params;\n        self.render(refreshParams);\n      });\n    }).fail(function (message) {\n      /*** Form load failure ***/\n\n      var errorTemplate = self.renderFactory.getCommonTemplate(\"form-error\");\n      var error_message = message.message || \"Error\";\n\n      $.fasttmpl(errorTemplate, { message: error_message }).appendTo(self.container.element);\n      // Navigate on view\n      self.slideFormParams.navigation.navigate(self.container.id);\n    }).always(function () {\n      bizagi.loading.stop();\n    });\n\n    return defer.promise();\n  },\n\n  // Go back and destroy\n  goBack: function goBack() {\n    this.container.destroy();\n  },\n\n  /**\r\n      * Process render buttons\r\n      */\n  _renderButtons: function _renderButtons(form) {\n    var self = this;\n    var content = $(\"<div class='bz-slide-button-container'></div>\");\n\n    $.each(form.buttons, function (ui, value) {\n      $(\"<div class='action-button'>\" + value.caption + \"</div>\").click(\n      value.callback).\n      appendTo(content);\n    });\n\n    self.buttonContainer = content;\n  } });","/**\r\n *   Name: Bizagi Tablet slide form implementation\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   Serves as an slide form that can render a inner form\r\n */\n\n// Extends itself\n$.Class.extend('bizagi.rendering.tablet.slide.form', {}, {\n\n  /* CONSTRUCTOR\r\n                                                            =====================================================*/\n  init: function init(dataService, renderFactory, slideFormParams) {\n\n    var self = this;\n\n    // Define instance variables\n    self.dataService = dataService;\n    self.renderFactory = renderFactory;\n    self.slideFormParams = slideFormParams || {};\n\n    if (self.slideContainer && self.slideContainer.destroy) {\n      self.slideContainer.destroy();\n    }\n\n    // Create container\n    self.slideContainer = self.slideFormParams.navigation.createRenderContainer({ title: self.slideFormParams.title });\n    self.configureViewHandlers();\n  },\n\n  /**\r\n      * Go back and destroy\r\n      * @returns {}\r\n      */\n  goBack: function goBack() {\n    var self = this;\n    self.slideContainer.destroy();\n  },\n\n  /**\r\n      * Handlers de la vista de kendo\r\n      * @returns {}\r\n      */\n  configureViewHandlers: function configureViewHandlers() {\n    var self = this;\n  },\n\n  /**\r\n      * Render the form\r\n      * The params are the same that will be send to the ajax service\r\n      * @param {} params\r\n      * @returns {} Returns a deferred\r\n      */\n  render: function render(params) {\n    var self = this;\n    // Fill content\n    self.renderSlideForm(params);\n  },\n\n  /* RENDERS slideForm\r\n      =====================================================*/\n  renderSlideForm: function renderSlideForm(params) {\n\n    var self = this;\n\n    var defer = new $.Deferred();\n\n    // Load template and data\n    $.when(self.dataService.getFormData(params)).then(function (data) {\n      /*** SUCCESS FILTER **/\n      // Apply editable param\n      if (params.editable === false) {\n        data.form.properties.editable = false;\n      }\n\n      // Render dialog template\n      // Extends from container tblet base\n      var formClass = bizagi.rendering.tablet.form.extend({\n        submitForm: function submitForm() {\n          if (self.form) {\n            this.endLoading();\n            // Perform validations\n            if (self.form.validateForm()) {\n              // Collect data\n              var data = {};\n\n              self.form.collectRenderValues(data);\n\n              // Add page cache for this form\n              data.idPageCache = self.form.getPageCache();\n\n              // Call user callback\n              if (self.slideFormParams.onSave) {\n                $.when(self.slideFormParams.onSave(data)).\n                done(function (result) {\n                  if (result === null || result === true || result.type === \"success\") {\n                    defer.resolve();\n                    self.goBack();\n                  } else if (result.type === \"validationMessages\") {\n                    // Add validation messages\n                    self.form.addValidationMessage(result.messages);\n                    // Update original value to use as reference to other futures changes in the dialogBox\n                    $.each(data, function (key, value) {\n                      var renders = self.form.getRenders(key);\n                      $.each(renders, function (i, render) {\n                        render.updateOriginalValue();\n                      });\n                    });\n                  } else if (result.type === \"error\") {\n                    // Add error messages\n                    self.form.addErrorMessage(result.message);\n                  }\n                });\n\n              } else {\n                defer.resolve();\n                self.goBack();\n              }\n            }\n          }\n        } });\n\n\n      var containerParams = $.extend({\n        type: \"form\",\n        data: data.form,\n        navigation: self.slideFormParams.navigation,\n        view_container: self.slideContainer },\n      {\n        renderFactory: self.renderFactory,\n        dataService: self.renderFactory.dataService });\n\n\n      // Stop creating forms like there's no tomorrow\n      if (!self.form) {\n        self.form = new formClass(containerParams);\n      }\n\n      // Return rendering promise\n      return self.form.render();\n    }).done(function (element) {\n      // Append form  in the view\n      self.slideContainer.element.html(element);\n\n      // Navigate on view\n      self.slideFormParams.navigation.navigate(self.slideContainer.id);\n\n      $(\".ui-bizagi-button-container div\", self.form.container).remove();\n\n      $(\".ui-bizagi-button-container\", self.form.container).\n      append('<div ordinal=\"0\" id=\"formButton0\" class=\"action-button ui-bizagi-form-button\">Save</div>').\n      delegate('div[ordinal=\"0\"]', \"click\", function () {\n        self.form.submitForm();\n      });\n\n      $(\".ui-bizagi-button-container\", self.form.container).\n      append('<div ordinal=\"1\" id=\"formButton1\" class=\"action-button ui-bizagi-form-button\">' +\n      bizagi.localization.getResource(\"render-form-dialog-box-cancel\") + \"</div>\").\n      delegate('div[ordinal=\"1\"]', \"click\", function () {\n        self.slideFormParams.onCancel && self.slideFormParams.onCancel();\n        self.goBack();\n      });\n\n      // Publish an event to check if the form has been set in the DOM\n      self.form.triggerHandler(\"ondomincluded\");\n\n      // Attach a refresh handler to recreate all the form\n      self.form.bind(\"refresh\", function () {\n        self.renderSlideForm(params);\n      });\n    }).fail(function (xhr, errorType, message) {\n      /*** FAIL FILTER **/\n      var errorTemplate = self.renderFactory.getCommonTemplate(\"form-error\");\n      var error_message = message.message || \"Error\";\n\n      $.fasttmpl(errorTemplate, { message: error_message }).appendTo(self.slideContainer.element);\n      // Navigate on view\n      self.slideFormParams.navigation.navigate(self.slideContainer.id);\n    });\n\n    return defer.promise();\n  } });","/**\r\n *   Name: Bizagi Tablet slide grid view implementation\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   Serves as an slide view that will show hidden columns for a grid\r\n */\n\n// Extends itself\n$.Class.extend(\"bizagi.rendering.tablet.slide.grid\", {}, {\n\n  /* CONSTRUCTOR\r\n                                                            =====================================================*/\n  init: function init(dataService, renderFactory, slideFormParams) {\n\n    var self = this;\n\n    // Define instance variables\n    this.dataService = dataService;\n    this.renderFactory = renderFactory;\n    this.slideFormDeferred = new $.Deferred();\n    this.slideFormParams = slideFormParams || {};\n\n    // Create container\n    self.container = self.slideFormParams.navigation.createRenderContainer({ title: self.slideFormParams.title });\n  },\n\n  /**\r\n      * Render the grid view form\r\n      * The params are the same that will be send to the ajax service\r\n      * @param {} params\r\n      * @returns {} Returns a deferred\r\n      */\n  render: function render(params) {\n    var self = this;\n\n    // Fill content\n    self.renderSlideForm(self.slideForm, params);\n\n    self.slideFormDeferred.resolve();\n\n    // Return promise\n    return self.slideFormDeferred.promise();\n  },\n\n  /* RENDERS slideForm\r\n      =====================================================*/\n  renderSlideForm: function renderSlideForm(slideForm, params) {\n\n    var self = this;\n    var data = self.transformData(params);\n\n    // Load template and data\n    self.form = self.renderFactory.getContainer({\n      type: \"form\",\n      data: data.form,\n      navigation: self.slideFormParams.navigation,\n      view_container: self.container });\n\n\n    self.form.buttons = [$.extend(self.form.buttons[0] || {},\n    {\n      \"caption\": bizagi.localization.getResource(\"render-form-dialog-box-save\"),\n      \"actions\": [\"submitData\", \"refresh\"],\n      \"submitData\": true,\n      \"refresh\": true,\n      \"ordinal\": 0,\n      \"action\": \"save\",\n      \"save\": true,\n      \"style\": \"\",\n      // This callback avoid to call the default processButton in the form\n      callback: function callback() {\n        self.goBack();\n        // Resolve deferred with form data\n        var data = {};\n        self.form.collectRenderValues(data);\n        self.slideFormDeferred.resolve(data);\n      } }),\n\n    $.extend(self.form.buttons[1] || {},\n    {\n      \"caption\": bizagi.localization.getResource(\"render-form-dialog-box-close\"),\n      \"actions\": [\"submitData\", \"refresh\"],\n      \"submitData\": true,\n      \"refresh\": true,\n      \"ordinal\": 1,\n      \"action\": \"back\",\n      \"save\": true,\n      \"style\": \"\",\n      //This callback avoid to call the default processButton in the form\n      callback: function callback() {\n        // Close slide\n        self.goBack();\n        self.slideFormDeferred.reject();\n      } })];\n\n\n\n    // Add save button if the form is editable\n    if (!self.slideFormParams.allowEdition) {\n      self.form.buttons.shift();\n    }\n\n    $.when(self.form.render()).\n    done(function (element) {\n\n      // Append form in the slide view\n      self.container.element.html(element);\n\n      self.slideFormParams.navigation.navigate(self.container.id);\n\n      self.container.setNavigationButtons(self.form);\n\n      // Remove default form buttons\n      $(\".ui-bizagi-button-container .action-button\", self.form.container).remove();\n\n      // Add Button\n      $(\".ui-bizagi-button-container\", self.form.container).append(self.buttonContainer);\n\n      // Publish an event to check if the form has been set in the DOM\n      self.form.triggerHandler(\"ondomincluded\");\n    });\n  },\n\n  /**\r\n      * Transform data into a JSON standard rendering format\r\n      * @param params\r\n      * @returns {[]}\r\n      */\n  transformData: function transformData(params) {\n    var self = this;\n    var row = params.row;\n    var columns = params.columns;\n\n    // Set xpath context\n    var xpathContext = params.xpathContext.length > 0 ?\n    params.xpathContext + \".\" + params.xpath + \"[\" + params.row[0] + \"]\" :\n    params.xpath + \"[id=\" + params.row[0] + \"]\";\n\n    var data = {\n      type: \"form\",\n      form: {\n        elements: [],\n        pageCacheId: params.pageCacheId,\n        sessionId: params.sessionId,\n        properties: {\n          xpathContext: xpathContext },\n\n        actions: self.transformActions(params.xpath, params.actions),\n        validations: self.transformValidations(params.xpath, params.validations) } };\n\n\n\n    $.each(row, function (i, item) {\n\n      // Skip first data (key not need to be rendered)\n      if (i > 0) {\n        var element = { render: { properties: $.extend({}, columns[i - 1].properties) } };\n\n        // Hack properties\n        element.render.properties.type = self.mapRenderType(element.render.properties.type);\n        element.render.properties.displayType = 'both';\n        if (self.slideFormParams.allowEdition == false) element.render.properties.editable = false;\n        element.render.properties.value = self.mapValue(element.render.properties.type, item);\n        if (element.render.properties.recalculate) element.render.properties.data = null;\n\n        // Check columnVisible property\n        if (typeof element.render.properties.columnVisible != \"undefined\") {\n          element.render.properties.visible = element.render.properties.columnVisible;\n        }\n\n        // Fix upload columns\n        if (element.render.properties.type == \"upload\") {\n          element.render.properties.isColumn = true;\n        }\n\n        // Fix search columns\n        if (element.render.properties.type == \"search\") {\n          var value = element.render.properties.value;\n          if (value.length > 0) {\n            value = [].concat(value[0]);\n            element.render.properties.value = {\n              id: value[0],\n              label: value[1],\n              additionallabel: value[2] || undefined };\n\n          }\n        }\n\n\n        // Add element\n        data.form.elements.push(element);\n      }\n    });\n\n    return data;\n  },\n\n  /**\r\n      * Map column renderType into normal render\r\n      * @param type\r\n      * @returns {string}\r\n      */\n  mapRenderType: function mapRenderType(type) {\n    type = type.replaceAll(\"tablet\", \"\").replaceAll(\"column\", \"\");\n\n    //some exceptions\n    if (type === \"FormLink\") return \"formLink\";\n\n    type = type.toLowerCase();\n    return type;\n  },\n\n  /**\r\n      * Method to translate grid values into render values\r\n      * @param type\r\n      * @param value\r\n      * @returns {[]}\r\n      */\n  mapValue: function mapValue(type, value) {\n    if ([\"combo\", \"radio\", \"list\"].includes(type)) {\n      if (value && value.length > 0) {\n\n        // Transform the value property\n        return [{\n          id: value[0][0],\n          value: value[0].length > 2 ? $.grep(value[0], function (item, i) {\n            return i !== 0;\n          }) : value[0][1] }];\n\n\n      } else {\n        return null;\n      }\n    }\n\n    // Else: Don't do anything\n    return value;\n  },\n\n  /**\r\n      * Parse form actions into just grid form actions\r\n      * @param xpath\r\n      * @param actions\r\n      * @returns {[]}\r\n      */\n  transformActions: function transformActions(xpath, actions) {\n    var self = this;\n    var gridActions = [];\n\n    if (bizagi.util.isEmpty(actions)) return gridActions;\n\n    $.each(actions, function (index, action) {\n      var bDependencyFound = false;\n      for (var i = 0; i < action.dependencies.length; i++) {\n        if (action.dependencies[i].indexOf(xpath) != -1) {\n          bDependencyFound = true;\n        }\n      }\n\n      if (bDependencyFound) {\n        var newAction = JSON.parse(JSON.encode(action));\n\n        // Replace dependencies\n        for (var j = 0; j < newAction.dependencies.length; j++) {\n          newAction.dependencies[j] = newAction.dependencies[j].replaceAll(xpath + \"[].\", \"\");\n        }\n\n        // Replace conditions\n        self.transformConditions(xpath, newAction.conditions);\n\n        // Replace commands\n        self.transformCommands(xpath, newAction.commands);\n        self.transformCommands(xpath, newAction.elseCommands);\n\n        // Add to grid actions\n        gridActions.push(newAction);\n      }\n    });\n\n    return gridActions;\n  },\n\n  /**\r\n      * Parse form validations into just grid form validations\r\n      * @param xpath\r\n      * @param validations\r\n      * @returns {[]}\r\n      */\n  transformValidations: function transformValidations(xpath, validations) {\n    var self = this;\n    var gridValidations = [];\n\n    if (bizagi.util.isEmpty(validations)) return gridValidations;\n\n    $.each(validations, function (index, validation) {\n      var newValidation = JSON.parse(JSON.encode(validation));\n\n      // Replace conditions\n      self.transformConditions(xpath, newValidation.conditions);\n\n      // Add to grid actions\n      gridValidations.push(newValidation);\n\n    });\n\n    return gridValidations;\n  },\n\n  /**\r\n      * Parse a single condition or a complex condition in order to prepare a grid action/validation\r\n      * @param xpath\r\n      * @param condition\r\n      */\n  transformConditions: function transformConditions(xpath, condition) {\n    var self = this;\n\n    if (condition.expressions) {\n      for (var index in condition.expressions) {\n        self.transformConditions(xpath, condition.expressions[index]);\n      }\n    } else if (condition.simple) {\n      self.transformConditions(xpath, condition.simple);\n    } else if (condition.complex) {\n      self.transformConditions(xpath, condition.complex);\n    } else {\n      if (condition.xpath) {\n        condition.xpath = condition.xpath.replaceAll(xpath + \"[].\", \"\");\n        if (condition.argumentType === 'xpath') {\n          condition.argument = condition.argument.replaceAll(xpath + \"[].\", \"\");\n        }\n      } else {\n        // Apply to button and label controls\n        if (condition && condition.renderId) {\n          condition.renderId = condition.renderId.replaceAll(xpath + \"[].\", \"\");\n        }\n      }\n    }\n  },\n\n  /**\r\n      * Parse a command action to prepare a grid action\r\n      * @param xpath\r\n      * @param commands\r\n      */\n  transformCommands: function transformCommands(xpath, commands) {\n    var refreshIndex = null;\n    if (commands == null || commands.length === 0) return;\n\n    for (var i = 0; i < commands.length; i++) {\n      if (commands[i].command === \"refresh\") {\n        refreshIndex = i;\n      } else {\n        if (commands[i].xpath) {\n          commands[i].xpath = commands[i].xpath.replaceAll(xpath + \"[].\", \"\");\n        }\n        if (commands[i].argumentType === 'xpath') {\n          commands[i].argument = commands[i].argument.replaceAll(xpath + \"[].\", \"\");\n        }\n\n        if (!commands[i].xpath && commands[i].renderId) {\n          commands[i].renderId = commands[i].renderId.replaceAll(xpath + \"[].\", \"\");\n        }\n      }\n    }\n\n    if (refreshIndex != null) {\n      commands.splice(i, 1);\n    }\n  },\n\n  /**\r\n      * Go back and destroy\r\n      */\n  goBack: function goBack() {\n    this.container.destroy();\n  } });","/**\r\n *   Name: Bizagi Tablet slide Grid AdHoc implementation\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   Serves as an slide view that will show hidden columns for a grid\r\n */\n\n// Extends itself\n$.Class.extend('bizagi.rendering.tablet.slide.adhocForm', {}, {\n\n  /* CONSTRUCTOR\r\n                                                                  =====================================================*/\n  init: function init(renderFactory, slideFormParams) {\n    var self = this;\n\n    // Define instance variables\n    this.renderFactory = renderFactory;\n    this.slideFormDeferred = new $.Deferred();\n    this.slideFormParams = slideFormParams || {};\n\n    // Create container\n    self.container = self.slideFormParams.navigation.createRenderContainer({ title: self.slideFormParams.title });\n  },\n\n  /**\r\n      * Render the grid view form\r\n      * The params are the same that will be send to the ajax service\r\n      * @param params\r\n      * @returns Returns a deferred\r\n      */\n  render: function render(params) {\n    var self = this;\n\n    // Fill content\n    self.renderSlideForm(params);\n    // Return promise\n    return self.slideFormDeferred.promise();\n  },\n\n  /* RENDERS slideForm\r\n      =====================================================*/\n  renderSlideForm: function renderSlideForm(params) {\n\n    var self = this;\n    var data = self.transformData(params);\n\n    // Load template and data\n    self.form = self.renderFactory.getContainer({\n      type: \"form\",\n      data: data.form,\n      navigation: this.slideFormParams.navigation,\n      view_container: self.container });\n\n\n    self.form.buttons = [$.extend(self.form.buttons[0] || {},\n    {\n      \"caption\": bizagi.localization.getResource(\"render-form-dialog-box-save\"),\n      \"actions\": [\"submitData\", \"refresh\"],\n      \"submitData\": true,\n      \"refresh\": true,\n      \"ordinal\": 0,\n      \"action\": \"save\",\n      \"save\": true,\n      \"style\": \"\",\n      // This callback avoid to call the default processButton in the form\n      callback: function callback() {\n        if (self.form.validateForm()) {\n          self.goBack();\n          // Resolve deferred with form data\n          var data = {};\n          self.form.collectRenderValues(data);\n          self.slideFormDeferred.resolve(data);\n        }\n      } }),\n\n    $.extend(self.form.buttons[1] || {}, {\n      \"caption\": bizagi.localization.getResource(\"render-form-dialog-box-close\"),\n      \"actions\": [\"submitData\", \"refresh\"],\n      \"submitData\": true,\n      \"refresh\": true,\n      \"ordinal\": 1,\n      \"action\": \"back\",\n      \"save\": true,\n      \"style\": \"\",\n      //This callback avoid to call the default processButton in the form\n      callback: function callback() {\n        // Close slide\n        self.goBack();\n        self.slideFormDeferred.reject();\n      } })];\n\n\n\n    // Add save button if the form is editable\n    if (!self.slideFormParams.allowEdition) {\n      self.form.buttons.shift();\n    }\n\n    $.when(self.form.render()).\n    done(function (element) {\n\n      if (params.row[0] == \"mock_id\") {// If it is an add form\n        $.each(data.elementsWithDefaultValue, function (i, item) {\n          var render = self.form.getRender(item.xpath + \".\" + item.id);\n          if (!render) {\n            render = self.form.getRender(item.xpath);\n          }\n          var defaultValue = bizagi.util.isArray(item.defaultValue) ? item.defaultValue[0] : item.defaultValue;\n          render.setDisplayValue(defaultValue);\n        });\n      }\n\n      // Append form in the slide view\n      self.container.element.html(element);\n\n      self.slideFormParams.navigation.navigate(self.container.id);\n\n      //self.container.setNavigationButtons(self.form);\n\n      // Remove default form buttons\n      $(\".ui-bizagi-button-container .action-button\", self.form.container).remove();\n\n      // Add Button\n      $(\".ui-bizagi-button-container\", self.form.container).append(self.buttonContainer);\n\n      // Publish an event to check if the form has been set in the DOM\n      self.form.triggerHandler(\"ondomincluded\");\n    });\n  },\n\n  /**\r\n      * Transform data into a JSON standard rendering format\r\n      * @param params\r\n      * @returns {[]}\r\n      */\n  transformData: function transformData(params) {\n    var self = this;\n    var row = params.row;\n    var columns = params.columns;\n    var isAddForm = false;\n\n    // Set xpath context\n    var xpathContext = params.xpathContext.length > 0 ?\n    params.xpathContext + \".\" + params.xpath + \"[\" + params.row[0] + \"]\" :\n    params.xpath + \"[id=\" + params.row[0] + \"]\";\n\n    var data = {\n      type: \"form\",\n      form: {\n        elements: [],\n        pageCacheId: params.pageCacheId,\n        sessionId: params.sessionId,\n        properties: {\n          xpathContext: xpathContext },\n\n        actions: self.transformActions(params.xpath, params.actions),\n        validations: self.transformValidations(params.xpath, params.validations) },\n\n      elementsWithDefaultValue: [] };\n\n\n    if (row[0] === \"mock_id\") {\n      isAddForm = true;\n    }\n\n    $.each(row, function (i, item) {\n\n      // Skip first data (key not need to be rendered)\n      if (i > 0) {\n        var columnProperties = columns[i - 1].properties;\n        var element = { render: { properties: $.extend({}, columnProperties) } };\n\n        // Hack properties\n        element.render.properties.type = self.mapRenderType(element.render.properties.type);\n        element.render.properties.defaultvalue = typeof element.render.properties.defaultvalue !== \"undefined\" ? element.render.properties.defaultvalue : element.render.properties.defaultValue;\n        element.render.properties.displayType = 'both';\n        if (self.slideFormParams.allowEdition == false) element.render.properties.editable = false;\n        element.render.properties.value = self.mapValue(element.render.properties.type, item);\n        if (element.render.properties.recalculate) element.render.properties.data = null;\n\n        // Check defaultValue property\n        if (typeof element.render.properties.defaultvalue !== \"undefined\") {\n          if (typeof element.render.properties.value === \"undefined\" || element.render.properties.value == null) {\n            //element.render.properties.value = element.render.properties.defaultvalue;\n            data.elementsWithDefaultValue.push({\n              id: element.render.properties.id,\n              xpath: element.render.properties.xpath,\n              defaultValue: element.render.properties.defaultvalue });\n\n\n          }\n        }\n\n        // Check columnVisible property\n        if (typeof element.render.properties.columnVisible !== \"undefined\") {\n          element.render.properties.visible = element.render.properties.columnVisible;\n        }\n\n        // Fix readonly columns\n        if (element.render.properties.type === \"readonly\") {\n          element.render.properties.type = \"text\";\n          element.render.properties.editable = false;\n        }\n\n        // Fix upload columns\n        if (element.render.properties.type === \"upload\") {\n          element.render.properties.isColumn = true;\n        }\n\n        // Fix search columns\n        if (element.render.properties.type === \"search\") {\n          var value = element.render.properties.value;\n\n          if (value == null) {\n            element.render.properties.value = {};\n          } else if (value.length > 0) {\n            value = [].concat(value[0]);\n            element.render.properties.value = {\n              id: value[0],\n              label: value[1],\n              additionallabel: value[2] || undefined };\n\n          }\n        }\n        var isDisabledControl = [\"document\", \"formLink\", \"upload\", \"uploadecm\", \"image\", \"search\"].includes(element.render.properties.type);\n        var isExclusiveCheck = (element.render.properties.isExclusive || false) && \"boolean\" === element.render.properties.type;\n\n        if (isExclusiveCheck || isAddForm && isDisabledControl) {\n          element.render.properties.editable = false;\n        } else if (isExclusiveCheck) {\n          element.render.properties.value = value;\n          element.render.properties.editable = false;\n        }\n\n        // Add element\n        data.form.elements.push(element);\n      }\n\n    });\n\n    return data;\n  },\n\n  /**\r\n      * Map column renderType into normal render\r\n      * @param type\r\n      * @returns {string}\r\n      */\n  mapRenderType: function mapRenderType(type) {\n    type = type.replaceAll(\"tablet\", \"\").replaceAll(\"column\", \"\");\n\n    //some exceptions\n    if (type === \"FormLink\") return \"formLink\";\n\n    type = type.toLowerCase();\n    return type;\n  },\n\n  /**\r\n      * Method to translate grid values into render values\r\n      * @param type\r\n      * @param value\r\n      * @returns {[]}\r\n      */\n  mapValue: function mapValue(type, value) {\n    if ([\"combo\", \"radio\", \"list\"].includes(type)) {\n      if (value && value.length > 0) {\n\n        // Transform the value property\n        return [{\n          id: value[0][0],\n          value: value[0].length > 2 ? $.grep(value[0], function (item, i) {\n            return i !== 0;\n          }) : value[0][1] }];\n\n\n      } else {\n        return null;\n      }\n    }\n\n    // Else: Don't do anything\n    return value;\n  },\n\n  /**\r\n      * Parse form actions into just grid form actions\r\n      * @param xpath\r\n      * @param actions\r\n      * @returns {[]}\r\n      */\n  transformActions: function transformActions(xpath, actions) {\n    var self = this;\n    var gridActions = [];\n\n    if (bizagi.util.isEmpty(actions)) return gridActions;\n\n    $.each(actions, function (index, action) {\n      var bDependencyFound = false;\n      for (var i = 0; i < action.dependencies.length; i++) {\n        if (action.dependencies[i].indexOf(xpath) != -1) {\n          bDependencyFound = true;\n        }\n      }\n\n      if (bDependencyFound) {\n        var newAction = JSON.parse(JSON.encode(action));\n\n        // Replace dependencies\n        for (var j = 0; j < newAction.dependencies.length; j++) {\n          newAction.dependencies[j] = newAction.dependencies[j].replaceAll(xpath + \"[].\", \"\");\n        }\n\n        // Replace conditions\n        self.transformConditions(xpath, newAction.conditions);\n\n        // Replace commands\n        newAction.commands = self.transformCommands(xpath, newAction.commands);\n        newAction.elseCommands = self.transformCommands(xpath, newAction.elseCommands);\n\n        // Add to grid actions\n        gridActions.push(newAction);\n      }\n    });\n\n    return gridActions;\n  },\n\n  /**\r\n      * Parse form validations into just grid form validations\r\n      * @param xpath\r\n      * @param validations\r\n      * @returns {[]}\r\n      */\n  transformValidations: function transformValidations(xpath, validations) {\n    var self = this;\n    var gridValidations = [];\n\n    if (bizagi.util.isEmpty(validations)) return gridValidations;\n\n    $.each(validations, function (index, validation) {\n      var newValidation = JSON.parse(JSON.encode(validation));\n\n      // Replace conditions\n      self.transformConditions(xpath, newValidation.conditions);\n\n      // Add to grid actions\n      gridValidations.push(newValidation);\n\n    });\n\n    return gridValidations;\n  },\n\n  /**\r\n      * Parse a single condition or a complex condition in order to prepare a grid action/validation\r\n      * @param xpath\r\n      * @param condition\r\n      */\n  transformConditions: function transformConditions(xpath, condition) {\n    var self = this;\n\n    if (condition.expressions) {\n      for (var index in condition.expressions) {\n        self.transformConditions(xpath, condition.expressions[index]);\n      }\n    } else if (condition.simple) {\n      self.transformConditions(xpath, condition.simple);\n    } else if (condition.complex) {\n      self.transformConditions(xpath, condition.complex);\n    } else {\n      if (condition.xpath) {\n        condition.xpath = condition.xpath.replaceAll(xpath + \"[].\", \"\");\n        if (condition.argumentType === 'xpath') {\n          condition.argument = condition.argument.replaceAll(xpath + \"[].\", \"\");\n        }\n      } else {\n        // Apply to button and label controls\n        if (condition && condition.renderId) {\n          condition.renderId = condition.renderId.replaceAll(xpath + \"[].\", \"\");\n        }\n      }\n    }\n  },\n\n  /**\r\n      * Parse a command action to prepare a grid action\r\n      * @param xpath\r\n      * @param commands\r\n      */\n  transformCommands: function transformCommands(xpath, commands) {\n    if (commands === null || commands === undefined) return;\n    return commands.reduce(function (previousValue, currentValue) {\n      if (![\"refresh\", \"submit-data\", \"execute-rule\", \"execute-interface\", \"execute-sap\", \"execute-connector\", \"execute-excel-bot\", \"execute-pipeline\"].includes(currentValue.command)) {\n        if (currentValue.xpath) {\n          currentValue.xpath = currentValue.xpath.replaceAll(xpath + \"[].\", \"\");\n        }\n        if (currentValue.argumentType === 'xpath') {\n          currentValue.argument = currentValue.argument.replaceAll(xpath + \"[].\", \"\");\n        }\n\n        if (!currentValue.xpath && currentValue.renderId) {\n          currentValue.renderId = currentValue.renderId.replaceAll(xpath + \"[].\", \"\");\n        }\n        previousValue.push(currentValue);\n      }\n      return previousValue;\n    }, []);\n  },\n\n  /**\r\n      * Go back and destroy\r\n      */\n  goBack: function goBack() {\n    this.container.destroy();\n  } });","/**\r\n *   Name: Bizagi Tablet slide view Upload implementation\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   Serves as an slide view that will show an upload file without exiting the application\r\n */\n\n// Extends itself\n$.Class.extend('bizagi.rendering.tablet.slide.upload', {}, {\n\n  /* CONSTRUCTOR\r\n                                                             =====================================================*/\n  init: function init(dataService, renderFactory, slideFormParams) {\n\n    var self = this;\n\n    // Define instance variables\n    this.dataService = dataService;\n    this.renderFactory = renderFactory;\n    this.slideFormDeferred = new $.Deferred();\n    this.slideFormParams = slideFormParams || {};\n\n    // Create container    \t\n    self.slideContainer = self.slideFormParams.navigation.createRenderContainer({ title: self.slideFormParams.title });\n\n    self.processButtons().\n    done(function (data) {\n      self.slideFormDeferred.resolve(data);\n    }).fail(function () {\n      self.slideFormDeferred.reject();\n    });\n  },\n\n  /**\r\n      * Shows the slideForm form container in the browser\r\n      * @returns {} Returns a promise that the dialog will be closed\r\n      */\n  processButtons: function processButtons() {\n    var self = this;\n    var dfd = new $.Deferred();\n\n    // Create buttons object\n    var slideOptions = { buttons: [] };\n\n    // Add cancel button by default\n    var onClose = function onClose() {\n      // Close slide\n      self.goBack();\n      //reject defered\n      dfd.reject();\n    };\n    slideOptions.buttons.push({\n      text: bizagi.localization.getResource(\"workportal-case-dialog-box-close\"),\n      caption: bizagi.localization.getResource(\"render-form-dialog-box-close\"),\n      actions: [\"submitData\", \"refresh\"],\n      submitData: false,\n      refresh: false,\n      ordinal: 0,\n      action: \"back\",\n      save: true,\n      style: \"\",\n      //This callback avoid to call the default processButton in the form\n      callback: onClose,\n      click: onClose });\n\n\n    // Apply dialog plugin\n    this.slideFormParams = $.extend(slideOptions, this.slideFormParams);\n    self._renderButtons(this.slideFormParams);\n\n    // Return promise\n    return dfd.promise();\n  },\n\n  /**\r\n      * Render the grid view form\r\n      * The params are the same that will be send to the ajax service\r\n      * @param {} params\r\n      * @returns {} Returns a deferred\r\n      */\n  render: function render(params) {\n    var self = this;\n\n    // Fill content\n    self.renderUploadFile(self.slideForm, params);\n\n    // Return promise\n    return self.slideFormDeferred.promise();\n  },\n\n  /* Render the file inside a frame\r\n     =====================================================*/\n  renderUploadFile: function renderUploadFile(slideForm, params) {\n    var self = this;\n    var template = self.renderFactory.getCommonTemplate(\"uploadSlide\");\n\n    // Render template\n    var content = $.fasttmpl(template, { url: params.url });\n\n    // Append content in the slide view\n    self.slideContainer.element.html(content);\n\n    // Navigate on view\n    self.slideFormParams.navigation.navigate(self.slideContainer.id);\n    // Add Button\n    // $(\".ui-bizagi-button-container\", self.slideContainer).append(self.buttonContainer);\n\n    // No need to create a real form cause it just shows the back button\n    var virtualForm = $.extend({\n      originalProperties: {\n        uniqueId: 101,\n        id: 101 } },\n\n    self.slideFormParams);\n    virtualForm.container = self.slideContainer.element;\n\n    self.slideFormParams.navigation.setNavigationButtons(virtualForm);\n\n    content.find(\".ui-slide-upload-link\").click(function () {\n      $.when(bizagi.showConfirmationBox(bizagi.localization.getResource(\"render-tablet-slide-upload-confirmation\"))).\n      done(function () {\n        window.location.href = params.url;\n      });\n    });\n  },\n\n  /**\r\n      * Go back and destroy\r\n      * @returns {}\r\n      */\n  goBack: function goBack() {\n    var self = this;\n\n    self.slideContainer.destroy();\n  },\n\n  /**\r\n      * Process render buttons\r\n      * @param {} options\r\n      * @returns {}\r\n      */\n  _renderButtons: function _renderButtons(options) {\n    var self = this;\n    var content = $(\"<div class=\\\"bz-slide-button-container\\\"></div>\");\n\n    $.each(options.buttons, function (ui, value) {\n      $(\"<div class=\\\"action-button\\\">\" + value.text + \"</div>\").click(\n      value.click).\n      appendTo(content);\n    });\n\n    self.buttonContainer = content;\n  } });","/**\r\n *   Name: Bizagi Tablet slide form implementation\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   Serves as an slide form that can render a inner form\r\n */\n\n// Extends itself\n$.Class.extend('bizagi.rendering.tablet.startForm', {}, {\n\n  /* CONSTRUCTOR\r\n                                                           =====================================================*/\n  init: function init(dataService, renderFactory, slideFormParams) {\n\n    var self = this;\n\n    // Define instance variables\n    self.dataService = dataService;\n    self.renderFactory = renderFactory;\n    self.slideFormParams = slideFormParams || {};\n\n    // Create container        \n    self.slideContainer = self.slideFormParams.navigation.createRenderContainer({ title: self.slideFormParams.title });\n    self.configureViewHandlers();\n  },\n\n  /**\r\n      * Handlers kendo view\r\n      * @returns {}\r\n      */\n  configureViewHandlers: function configureViewHandlers() {\n    var self = this;\n  },\n\n  /**\r\n      * Go back and destroy\r\n      * @returns {}\r\n      */\n  goBack: function goBack() {\n    var self = this;\n    self.slideContainer.destroy();\n  },\n\n  /**\r\n      * Render the form\r\n      * The params are the same that will be send to the ajax service\r\n      * @param {} params\r\n      * @returns {} Returns a deferred\r\n      */\n  render: function render(params) {\n    var self = this;\n    // Fill content\n    self.renderSlideForm(params);\n  },\n\n  /* RENDERS slideForm\r\n      =====================================================*/\n  renderSlideForm: function renderSlideForm(params) {\n\n    var self = this;\n\n    var defer = new $.Deferred();\n\n    // Load template and data\n    $.when(self.dataService.getStartForm(params)).then(function (data) {\n      /*** SUCCESS FILTER **/\n      // Apply editable param\n      if (params.editable === false) {\n        data.form.properties.editable = false;\n      }\n\n      // Render dialog template\n      var formClass = bizagi.rendering.tablet.form.extend({\n        submitForm: function submitForm() {\n          if (self.form) {\n            this.endLoading();\n            // Perform validations\n            if (self.form.validateForm()) {\n              // Collect data\n              var data = {};\n\n              self.form.collectRenderValues(data);\n\n              // Add page cache for this form\n              data.idPageCache = self.form.getPageCache();\n\n              // Call user callback\n              if (self.slideFormParams.onSave) {\n                $.when(self.slideFormParams.onSave(data)).\n                done(function (result) {\n                  if (result == null || result == true || result.type == \"success\") {\n                    defer.resolve();\n                    self.goBack();\n                  } else if (result.type == \"validationMessages\") {\n                    // Add validation messages\n                    self.form.addValidationMessage(result.messages);\n                    // Update original value to use as reference to other futures changes in the dialogBox\n                    $.each(data, function (key, value) {\n                      var renders = self.form.getRenders(key);\n                      $.each(renders, function (i, render) {\n                        render.updateOriginalValue();\n                      });\n                    });\n                  } else if (result.type == \"error\") {\n                    // Add error messages\n                    self.form.addErrorMessage(result.message);\n                  }\n                });\n\n              } else {\n                defer.resolve();\n                self.goBack();\n              }\n            }\n          }\n        } });\n\n\n      var containerParams = $.extend({\n        type: \"form\",\n        data: data.form,\n        navigation: self.slideFormParams.navigation,\n        view_container: self.slideContainer },\n      {\n        renderFactory: self.renderFactory,\n        dataService: self.renderFactory.dataService });\n\n\n      self.form = new formClass(containerParams);\n\n\n      // Attach a refresh handler to recreate all the form\n      self.form.bind(\"refresh\", function (_, refreshParams) {\n        refreshParams = $.extend({\n          selectedTabs: self.form.getSelectedTabs(),\n          isRefresh: true },\n        params, refreshParams, { idStartScope: self.form.properties.idStartScope });\n\n        self.renderSlideForm(refreshParams);\n      });\n\n      self.form.buttons = [\n      $.extend(\n      self.form.buttons[0] || {},\n      {\n        \"caption\": self.slideFormParams.saveButtonLabel,\n        \"actions\": [\"submitData\", \"refresh\"],\n        \"submitData\": true,\n        \"refresh\": true,\n        \"ordinal\": 0,\n        \"action\": \"save\",\n        \"save\": true,\n        \"style\": \"\" })];\n\n\n      // Return rendering promise\n      return self.form.render();\n    }).done(function (element) {\n      // Append form  in the view\n      self.slideContainer.element.html(element);\n\n      if (!params.isRefresh) {\n        self.slideFormParams.navigation.navigate(self.slideContainer.id);\n      }\n\n      $('.ui-bizagi-button-container div', self.form.container).remove();\n\n      $('.ui-bizagi-button-container', self.form.container).append('<div ordinal=\"0\" id=\"formButton0\" class=\"action-button ui-bizagi-form-button\">' + (self.slideFormParams.saveButtonLabel ? self.slideFormParams.saveButtonLabel : bizagi.localization.getResource(\"render-form-dialog-box-save\")) + '</div>').delegate('div[ordinal=\"0\"]', 'click', function () {\n        self.form.submitForm();\n      });\n\n      $('.ui-bizagi-button-container', self.form.container).append('<div ordinal=\"1\" id=\"formButton1\" class=\"action-button ui-bizagi-form-button\">' + bizagi.localization.getResource(\"render-form-dialog-box-cancel\") + '</div>').delegate('div[ordinal=\"1\"]', 'click', function () {\n        self.slideFormParams.onCancel && self.slideFormParams.onCancel();\n        self.goBack();\n      });\n\n      //self.view.scroller.reset();\n      // Publish an event to check if the form has been set in the DOM\n      self.form.triggerHandler(\"ondomincluded\");\n    }).fail(function (xhr, errorType, message) {\n      /*** FAIL FILTER **/\n      var errorTemplate = self.renderFactory.getCommonTemplate(\"form-error\");\n      var error_message = message.message || \"Error\";\n\n      $.fasttmpl(errorTemplate, { message: error_message }).appendTo(self.slideContainer.element);\n      // Navigate on view\n      self.slideFormParams.navigation.navigate(self.slideContainer.id);\n    });\n\n    return defer.promise();\n  } });","/**\r\n *   Name: Bizagi tablet ECM Slide Implementation\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will shows a ECM form\r\n */\n$.Class.extend(\"bizagi.rendering.tablet.slide.ecm\", {}, {\n\n  /**\r\n                                                           * Constructor\r\n                                                           * @param dataService\r\n                                                           * @param renderFactory\r\n                                                           * @param slideFormParams\r\n                                                           */\n  init: function init(dataService, renderFactory, slideFormParams) {\n    var self = this;\n\n    // Define instance variables\n    self.dataService = dataService;\n    self.renderFactory = renderFactory;\n\n    self.slideFormParams = slideFormParams || {};\n    self.slideFormDeferred = new $.Deferred();\n\n    // Create container\n    self.container = self.slideFormParams.navigation.createRenderContainer({ title: self.slideFormParams.title });\n  },\n\n  /**\r\n      * Render the form\r\n      * @param params\r\n      */\n  render: function render(params) {\n\n    // Fill content\n    this.renderSlideForm(params);\n\n    // Return promise\n    return this.slideFormDeferred.promise();\n  },\n\n  renderSlideForm: function renderSlideForm(params) {\n    var self = this;\n    var data = self.getMetadataForm(params);\n\n    // Load template and data\n    self.form = self.renderFactory.getContainer({\n      type: \"form\",\n      data: data.form,\n      navigation: self.slideFormParams.navigation,\n      view_container: self.container });\n\n\n    // Binds the view close event\n    /* self.container.element.bind(\"close\", function () {\r\n         // delete self.container;\r\n         console.log(\"closed!\");\r\n     });*/\n\n    $.when(self.form.render()).\n    done(function ($renderEdition) {\n\n      // Append form in the slide view\n      self.container.element.html($renderEdition);\n\n      self.slideFormParams.navigation.navigate(self.container.id);\n\n      self.processButtons(self.form, params);\n      self.container.setNavigationButtons(self.form);\n\n      // Publish an event to check if the form has been set in the DOM\n      self.form.triggerHandler(\"ondomincluded\");\n\n      // Attach a refresh handler to recreate all the form\n      /*self.form.bind(\"refresh\", function () {\r\n          // self.renderSlideForm(params);\r\n      });*/\n\n    }).always(function () {\n      self.slideFormDeferred.resolve();\n    });\n\n  },\n\n  /**\r\n      * Shows the slideForm form container in the browser\r\n      * @returns {} Returns a promise that the dialog will be closed\r\n      */\n  processButtons: function processButtons(form, params) {\n    var self = this;\n\n    form.buttons = [\n    {\n      ordinal: 0,\n      action: \"save\",\n      caption: bizagi.localization.getResource(\"render-form-dialog-box-save\"),\n      callback: self.onSaveDataMetadataForm.bind(self, params.fileData) },\n\n    {\n      ordinal: 1,\n      action: \"back\",\n      caption: bizagi.localization.getResource(\"render-form-dialog-box-close\"),\n      callback: function callback() {\n        self.slideFormParams.onCancel({});\n        self.goBack();\n      } }];\n\n\n\n    // Add save button if the form is editable\n    if (!self.slideFormParams.editable) {\n      form.buttons.shift();\n    }\n  },\n\n  /**\r\n      * Process render data\r\n      * @param params\r\n      * @returns {{form: *, type: string}}\r\n      */\n  getMetadataForm: function getMetadataForm(params) {\n    var self = this;\n    var data = {\n      type: \"form\",\n      form: {\n        elements: [],\n        pageCacheId: params.pageCacheId,\n        sessionId: params.sessionId,\n        properties: {\n          id: 101,\n          xpathContext: params.xpathContext,\n          editable: self.slideFormParams.editable,\n          orientation: self.slideFormParams.orientation || \"ltr\" } } };\n\n\n\n\n    // Mapping metadata to render\n    $.each(params.metadata, function (index, item) {\n      var renderType = self.getRenderType(item.metadataType);\n\n      var newRender = Object.assign({\n        \"id\": index + 1,\n        \"xpath\": item.metadataId,\n        \"displayName\": item.description,\n        \"required\": bizagi.util.parseBoolean(item.required) === true,\n        \"editable\": bizagi.util.parseBoolean(item.readOnly) === false,\n        \"value\": item.value },\n      renderType);\n\n      data.form.elements.push({ \"render\": { \"properties\": newRender } });\n    });\n\n    return data;\n  },\n\n  /**\r\n      * Get type of render\r\n      * @param type\r\n      * @returns {*}\r\n      */\n  getRenderType: function getRenderType(type) {\n    switch (type.toUpperCase()) {\n      case \"INTEGER\":\n        return {\n          type: \"number\",\n          dataType: 2,\n          allowDecimals: false,\n          thousands: false };\n\n      case \"DECIMAL\":\n        return {\n          type: \"number\",\n          dataType: 10,\n          allowDecimals: true,\n          thousands: true };\n\n      case \"DATETIME\":\n        return { type: \"date\", dataType: 12 };\n      case \"BOOL\":\n        return { type: \"boolean\", dataType: 5 };\n      case \"STRING\":\n      default:\n        return {\n          type: \"text\",\n          dataType: 15,\n          maxLength: 50,\n          autoExtend: false };}\n\n\n\n  },\n\n  /**\r\n      * Save data to ECM form\r\n      * @returns {jQuery}\r\n      * @param fileData\r\n      */\n  onSaveDataMetadataForm: function onSaveDataMetadataForm(fileData) {\n    var self = this;\n    var deferred = $.Deferred();\n\n    if (self.form.validateForm()) {\n      // Check if the add form has data\n      var formData = {};\n      self.form.collectRenderValuesForSubmit(formData);\n\n      // Turn off flag\n      $.forceCollectData = false;\n\n      if (!bizagi.util.isMapEmpty(formData)) {\n\n        var metadataValues = Object.keys(formData).\n        map(function (key, index) {\n          return { \"idMetadata\": key, \"value\": formData[key] };\n        });\n\n        var params = {\n          \"idFileUpload\": fileData.idFileUpload,\n          \"fileName\": fileData.fileName,\n          \"idPageCache\": fileData.idPageCache,\n          \"xpathContext\": fileData.xpathContext,\n          \"xPath\": fileData.xpath,\n          \"idAttrib\": fileData.idAttrib };\n\n\n        params.metaValues = JSON.encode({ metadataValues: metadataValues });\n        bizagi.loading.start();\n\n        $.when(self.dataService.updateECMMetadata(params)).\n        done(function (fileProperties) {\n          if (fileProperties && fileProperties.idFileUpload) {\n\n            self.slideFormParams.onSave({\n              update: true,\n              idFileUpload: fileProperties.idFileUpload,\n              fileName: fileData.fileName });\n\n\n            deferred.resolve({ update: true });\n          }\n\n          self.goBack();\n\n        }).fail(function (message) {\n          self.form.addValidationMessage(message.message);\n          deferred.reject();\n        }).always(function () {\n          bizagi.loading.stop();\n        });\n      } else {\n        self.slideFormParams.onSave({ update: false });\n        deferred.resolve({ update: false });\n        self.goBack();\n      }\n    }\n\n    deferred.promise();\n  },\n\n  /**\r\n      * Go back and destroy\r\n      */\n  goBack: function goBack() {\n    this.container.destroy();\n  } });","/**\r\n *   Name: Bizagi Tablet Container Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the container class to adjust to tablet devices\r\n */\n\n// Extends itself\nbizagi.rendering.container.extend(\"bizagi.rendering.tablet.container\", {}, {\n  /**\r\n                                                                              * Starts waiting signal for async stuff\r\n                                                                              */\n  startLoading: function startLoading() {\n  },\n\n  /**\r\n      * Ends waiting for async stuff\r\n      */\n  endLoading: function endLoading() {\n  } });","/**\r\n *   Name: Bizagi Tablet Render Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the render class to adjust to tablet devices\r\n */\n\n// Extends from render base\nbizagi.rendering.render.extend(\"bizagi.rendering.tablet.render\", bizagi.rendering.render.base.prototype);\n// Extends itself\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.render\", {}, {\n\n  /**\r\n                                                                               * Update or init the element data\r\n                                                                               * @param data\r\n                                                                               */\n  initializeData: function initializeData(data) {\n    this._super(data);\n\n    var formContainer = this.getFormContainer();\n    this.formParams = formContainer.getParams();\n  },\n\n  /**\r\n      * Returns the label element usually to apply styles\r\n      */\n  getLabel: function getLabel() {\n    if (!this.label)\n    this.label = $(\".bz-form-label label\", this.element || this.observableElement);\n\n    return this.label;\n  },\n\n  /**\r\n      * Return the label\r\n      */\n  getFormattingLabel: function getFormattingLabel() {\n    // TODO: Despues de cambiar a genome desktop, validar se solo se deja este metodo en la base\n    return this.getLabel();\n  },\n\n  /**\r\n      * Template method to get the control element\r\n      */\n  getControl: function getControl() {\n    if (!this.control || this.control.length === 0)\n    this.control = $(\".bz-control\", this.element || this.observableElement);\n\n    if (!this.control || this.control.length === 0) return null;\n\n    return this.control;\n  },\n\n  /**\r\n      * Template method to get the control filler element\r\n      */\n  getControlFiller: function getControlFiller() {\n    if (!this.controlFiller)\n    this.controlFiller = $(\".bz-form-item__control\", this.element || this.observableElement);\n\n    return this.controlFiller;\n  },\n\n  getContainerMessage: function getContainerMessage() {\n    if (!this.containerMessage)\n    this.containerMessage = $(\".bz-form-message__text\", this.element || this.observableElement);\n\n    return this.containerMessage;\n  },\n\n  getColumnContainerMessage: function getColumnContainerMessage() {\n    if (!this.containerMessage)\n    this.containerMessage = $(\".bz-form-cell-message__text\", this.element || this.observableElement);\n\n    return this.containerMessage;\n  },\n\n  /**\r\n      * Starts waiting signal for async stuff\r\n      */\n  startLoading: function startLoading() {\n  },\n\n  /**\r\n      * Ends waiting for async stuff\r\n      */\n  endLoading: function endLoading() {\n  },\n\n  /**\r\n      * Return the right display option class\r\n      * @param {} displayType\r\n      */\n  getDisplayOptionClass: function getDisplayOptionClass(displayType) {\n    if (displayType === \"normal\" || displayType === \"both\") {\n      return \"bz-form-item--display-normal\";\n    } else if (displayType === \"vertical\") {\n      return \"bz-form-item--display-vertical\";\n    } else if (displayType === \"reversed\") {\n      return \"bz-form-item--display-reversed\";\n    } else if (displayType === \"label\") {\n      return \"bz-form-item--display-label\";\n    } else if (displayType === \"value\") {\n      return \"bz-form-item--display-value\";\n    }\n  },\n\n  /**\r\n      * Customizes render display type with custom css classes\r\n      * @param displayType\r\n      */\n  changeDisplayOption: function changeDisplayOption(displayType) {\n    // var self = this,\n    // el = self.element;\n\n    // Clean old display type\n    // el.removeClass('ui-bizagi-render-display-normal ui-bizagi-render-display-vertical ui-bizagi-render-display-reversed')\n    //   .removeClass('ui-bizagi-render-display-vertical-reversed ui-bizagi-render-display-label ui-bizagi-render-display-value');\n    // el.addClass(self.getDisplayOptionClass(displayType));\n  },\n\n  /**\r\n      * Return the right align class\r\n      * @param alignType\r\n      * @returns {*}\r\n      */\n  getAlignClass: function getAlignClass(alignType) {\n    return alignType;\n  },\n\n  /**\r\n      * Customizes render label align\r\n      * @param alignType\r\n      */\n  changeLabelAlign: function changeLabelAlign(alignType) {\n    // var self = this;\n\n    // Get label\n    // var label = self.getLabel();\n\n    // Remove old label align\n    // label.removeClass('ui-bizagi-render-align-left ui-bizagi-render-align-center ui-bizagi-render-align-right');\n\n    // Set label align\n    // label.addClass(self.getAlignClass(alignType));\n  },\n\n  /**\r\n      * Customizes render value align\r\n      * @param alignType\r\n      */\n  changeValueAlign: function changeValueAlign(alignType) {\n    // var self = this;\n\n    // Get control\n    // var controlFiller = self.getControlFiller();\n    //\n    // // Remove old value align\n    // controlFiller.removeClass('ui-bizagi-render-align-left ui-bizagi-render-align-center ui-bizagi-render-align-right');\n    //\n    // // Set value align\n    // controlFiller.addClass(self.getAlignClass(alignType));\n  },\n\n  /**\r\n      * Customizes render label and value width\r\n      * TODO: Review implementation on execution\r\n      */\n  customizeRenderWidth: function customizeRenderWidth() {\n    var self = this;\n    var label = self.getLabel();\n    var properties = self.properties;\n    var controlFiller = self.getControlFiller();\n\n    // Read values\n    // If the label width or the value width are 0, the BAS means that no value is used, so we need to adjust them to 50%\n    var labelWidth = properties.labelWidth ? properties.labelWidth != '0' ? properties.labelWidth : '50%' : null;\n    var valueWidth = properties.valueWidth ? properties.valueWidth != '0' ? properties.valueWidth : '50%' : null;\n\n    // Normalize percentages\n    if (labelWidth && !valueWidth) {\n      labelWidth = bizagi.util.percent2Number(labelWidth);\n      valueWidth = 100 - labelWidth;\n\n    } else if (!labelWidth && valueWidth) {\n      valueWidth = bizagi.util.percent2Number(valueWidth);\n      labelWidth = 100 - valueWidth;\n\n    } else {\n      labelWidth = bizagi.util.percent2Number(labelWidth);\n      valueWidth = bizagi.util.percent2Number(valueWidth);\n\n      // Check 100% percentage\n      if (labelWidth + valueWidth != 100) {\n        valueWidth = 100 - labelWidth;\n      }\n    }\n\n    // Now apply width\n    label.width(labelWidth + \"%\");\n    controlFiller.width(valueWidth - 0.01 + \"%\");\n  },\n\n  /**\r\n      * Adds a validation message to the render\r\n      * @param message\r\n      */\n  setValidationMessage: function setValidationMessage(message) {\n    // Call base\n    this._super(message);\n    var dataType = bizagi.util.normalizeType(this.properties.type);\n    var isGridControl = dataType === \"grid\" || dataType === \"groupedgrid\";\n    var isColumn = this.grid && this.column && /column/.test(dataType);\n    var $message = isColumn ? this.getColumnContainerMessage() : this.getContainerMessage();\n\n    if (message && message.length > 0) {\n      message = message.replace(/<\\w+>([^<]*)<\\/\\w+>/g, \"$1\");\n\n      $message.attr(\"data-error\", message);\n      $message.text(message);\n\n      if (this.element) {\n        isGridControl ? this.element.addClass(\"bz-form-item-grid--error\") : this.element.addClass(\"bz-form-item--error\");\n      }\n    } else {\n      $message.text(\"\");\n      if (this.element) {\n        isGridControl ? this.element.removeClass(\"bz-form-item-grid--error\") : this.element.removeClass(\"bz-form-item--error\");\n      }\n    }\n\n  },\n\n  /**\r\n      * Sets the value in the rendered control\r\n      */\n  setDisplayValue: function setDisplayValue(value) {\n    var self = this;\n    var control = self.getControl();\n\n    // Set internal value\n    self.setValue(value, false);\n\n    if (!self.properties.editable && self.properties.display !== \"check\") {\n      // Render as simple value\n      var displayValue = self.getDisplayValue(value);\n\n      if (typeof displayValue == \"string\" || typeof displayValue == \"number\") {\n        $(control).html(\"<label class='bz-form-label'>\" + displayValue + \"</label>\");\n      }\n    }\n  },\n\n  /**\r\n      * in mobiles, don't apply styles to icon's elements\r\n      */\n  getElementsToStylize: function getElementsToStylize(context) {\n    return $(\".bz-input, .bz-input-icon__input\", context);\n  },\n\n  getFormParams: function getFormParams() {\n    return this.formParams || {};\n  },\n\n  changeRequired: function changeRequired(argument) {\n    // Update properties\n    this.properties.required = argument;\n\n    if (bizagi.util.parseBoolean(argument) && this.properties.editable) {\n      this.element.addClass(\"bz-form-item--required\");\n    } else {\n      this.element.removeClass(\"bz-form-item--required\");\n    }\n\n    // Perform validations again to check if the form is valid after this change\n    this.triggerRenderValidate();\n  },\n\n  changeRequiredLabel: function changeRequiredLabel(argument) {\n  },\n\n  /**\r\n      * Sets the value in the rendered control\r\n      */\n  clearDisplayValue: function clearDisplayValue() {\n    var self = this;\n    var control = self.getControl();\n\n    var input = control.find(\"input\").filter(function (index, ele) {\n      return ele.type !== \"file\" && ele.type !== \"radio\" && ele.type !== \"checkbox\";\n    });\n\n    if (input.length > 0) {\n      input.val(self.getValue());\n    } else {\n      self.setDisplayValue(\"\");\n    }\n  } });","/**\r\n *   Name: Bizagi Tablet Form Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the container class to adjust to tablet devices\r\n *   -   Will apply a desktop form template\r\n */\n\n// Extends from container tablet base\nbizagi.rendering.tablet.container.extend(\"bizagi.rendering.tablet.form\", bizagi.rendering.form.prototype);\n// Auto extend\nbizagi.rendering.tablet.form.extend(\"bizagi.rendering.tablet.form\", {}, {\n\n  /**\r\n                                                                           * CONSTRUCTOR\r\n                                                                           *\r\n                                                                           * @param {} params\r\n                                                                           * @returns {}\r\n                                                                           */\n  init: function init(params) {\n    var self = this;\n    params = params || {};\n    // Define variables\n    self.warnings = {};\n    self.errors = {};\n    if (params.syncError) {\n      params.data.properties.editable = params.isOfflineErrorMode !== true;\n      var syncMessage = params.syncError.type == \"business\" ? params.syncError.message : undefined;\n      if (!bizagi.util.isEmpty(syncMessage)) {\n        try {\n          syncMessage = $.makeArray(syncMessage);\n          syncMessage.forEach(function (currentMessage) {\n            self.errors[currentMessage] = currentMessage;\n          });\n        } catch (e) {\n          console.error(\"syncErrorMessage could not be parsed as array\", syncMessage);\n          self.errors[syncMessage] = syncMessage;\n        }\n      }\n      delete params.syncError;\n    }\n    self.isOfflineErrorMode = params.isOfflineErrorMode === true;\n    self.showToastOnSuccessSync = params.showToastOnSuccessSync === true;\n    self.removeSyncErrorOnSubmit = params.removeSyncErrorOnSubmit === true;\n    // Call base\n    this._super(params);\n  },\n\n  /*\r\n     *   Template method to implement in each device to customize the container's behaviour to add handlers\r\n     */\n  configureHandlers: function configureHandlers() {\n    var self = this;\n    var form = self.container;\n\n    // Process complex-gateway\n    self.configureComplexGateway();\n\n    // Process buttons\n    self.processButtons(form);\n\n    // Check for dom included event\n    self.bind(\"ondomincluded\", function () {\n      var $canvas = self.getValidationsContainer();\n\n      // Creates validation controller after the form is ready\n      self.validationController = new bizagi.command.controllers.validation(self, self.validations, $canvas);\n      // Creates action controller after the form is ready\n      self.actionController = new bizagi.command.controllers.action(self, self.actions);\n\n      // Resolve this deferred to start executing DOM dependant plugins\n      self.readyDeferred.resolve();\n    });\n\n\n    //Event to notify the native code the form will be showing a modal view \n    self.bind(\"modalViewDidAppear\", function () {\n      self.params.navigation.modalViewDidAppear();\n    });\n\n    self.bind(\"closeModalValidationMessage\", function () {\n      if (self.validationController) {\n        self.validationController.clearValidationMessages();\n      }\n    });\n\n    //Event to notify the native code the form will be hiding a modal view \n    self.bind(\"modalViewDidDisappear\", function () {\n      self.params.navigation.modalViewDidDisappear();\n    });\n\n    // Add network listener\n    self.configureNetworkHandlers();\n  },\n\n  /**\r\n      * Template method to implement in each device to customize each container after processed\r\n      *\r\n      * @param {} container\r\n      * @returns {}\r\n      */\n  postRenderContainer: function postRenderContainer(container) {\n    var self = this;\n    var properties = self.properties;\n    self._super(container);\n    var buttons = self.getButtons();\n\n    //disable overflow-scrolling touch untill the form is loaded QA-2178\n    if (bizagi.util.isiOSTabletDevice()) {\n      $(\".km-native-scroller\").css(\"-webkit-overflow-scrolling\", \"inherit\");\n    }\n\n    // Show warnings\n    if (!bizagi.util.isObjectEmpty(self.warnings)) {\n      var warningContainer = $('<ul class=\"ui-bizagi-form-warnings\"></ul>');\n      for (var key in self.warnings) {\n        warningContainer.append($('<li>' + key + '</li>'));\n      }\n\n      // Add button\n      $(\"<button>\" + \"X\" + \"</button>\").appendTo(warningContainer);\n\n      // Append to body \n      warningContainer.prependTo(self.container);\n      warningContainer.click(function () {\n        warningContainer.detach();\n      });\n    }\n\n    // Show errors\n    if (!bizagi.util.isEmpty(self.errors)) {\n      for (var ekey in self.errors) {\n        setTimeout(function () {\n          self.addValidationMessage(ekey);\n        }, 1);\n      }\n    }\n\n    //Set button length\n    var lengthButtons = buttons ? buttons.length : 0;\n\n    if (lengthButtons) {\n\n      $(document).data(\"auto-save\", \"auto-save\");\n\n      //bind event auto-save\n      $(document).unbind(\"save-form\").bind(\"save-form\", function (e, deferredSave) {\n        if (self.allowOnlineActions()) {\n          self.autoSaveEvents(deferredSave);\n        } else {\n          deferredSave.resolve();\n        }\n      });\n\n      //bind event beforeunload\n      $(window).unbind('beforeunload').bind('beforeunload', function (e) {\n        var newData = {};\n        self.collectRenderValues(newData);\n\n        //if there are changes in the form show a message\n        if (!$.isEmptyObject(newData) && $(document).data('auto-save'))\n        return bizagi.localization.getResource(\"confirmation-savebox-message2\");\n\n        return;\n      });\n    }\n\n    //enable overflow-scrolling touch to avoid black frame over the form QA-2178\n    if (bizagi.util.isiOSTabletDevice()) {\n      setTimeout(function () {\n        $(\".km-native-scroller\").css(\"-webkit-overflow-scrolling\", \"touch\");\n      }, 1000);\n    }\n\n\n    // Process Sections opened\n    var formParams = this.getParams() || {};\n    var selectedSections = $.extend([], formParams.selectedSection);\n    this.setParam(\"selectedSection\", []);\n    if (selectedSections.length > 0) {\n      selectedSections.forEach(function (id) {\n        var section = self.getRenderById(id);\n        if (typeof section !== \"undefined\") {\n          section.expand();\n        }\n      });\n    }\n  },\n\n  /**\r\n      * Auto Save Events\r\n      *\r\n      * @param {} deferredSave\r\n      * @param {} saveBox\r\n      * @returns {}\r\n      */\n  autoSaveEvents: function autoSaveEvents(deferredSave, saveBox) {\n    var self = this;\n    var data = {};\n\n    if (self.isOfflineErrorMode) {\n      deferredSave.resolve();\n      return;\n    }\n\n    self.collectRenderValues(data);\n\n    if (!$.isEmptyObject(data)) {\n      var isStartForm = self.properties.formtype === \"startform\";\n      var message = isStartForm ? bizagi.localization.getResource(\"confirmation-savebox-message4\") : bizagi.localization.getResource(\"confirmation-savebox-message1\");\n\n      var confirmation = isStartForm ? bizagi.showConfirmationBox(message, \"Bizagi\", \"warning\", [{ label: bizagi.localization.getResource(\"confirmation-box-ok\"), action: \"resolve\" }, { label: bizagi.localization.getResource(\"confirmation-box-cancel\"), action: \"reject\" }]) :\n      bizagi.showSaveBox(message, \"Bizagi\", \"warning\");\n      $.when(confirmation).\n      done(function () {\n        if (!isStartForm) {\n          bizagi.loading.start();\n          $.when(self.saveForm()).\n          always(function () {\n            if (self.params.isOfflineForm && self.params.offlineType === \"task\" && self.online) {\n              var syncDeferred = new $.Deferred();\n              var syncParams = $.extend({ deferred: syncDeferred }, self.params);\n              $(document).trigger(\"tryPushCase.offline\", syncParams);\n              $.when(syncDeferred).\n              then(function () {\n                deferredSave.resolve();\n              }).\n              fail(function () {\n                console.log(\"Auto-Save Sync Error\", arguments);\n                //Resolve the save to allow back to the inbox\n                deferredSave.resolve();\n              }).always(function () {\n                bizagi.loading.stop();\n              });\n            } else\n            {\n              bizagi.loading.stop();\n              deferredSave.resolve();\n            }\n          });\n        } else {\n          deferredSave.resolve();\n        }\n      }).fail(function () {\n        if (isStartForm) {\n          deferredSave.reject();\n        } else {\n          deferredSave.resolve();\n        }\n      });\n    } else {\n      deferredSave.resolve();\n    }\n  },\n\n  internalSubmitForm: function internalSubmitForm(buttonProperties) {\n    var self = this;\n    // Assemble the actions\n    var actions = [];\n\n    var defer = $.Deferred();\n    var submitDataAction = null;\n    var executeButtonAction = null;\n    var performAction = null;\n    var checkpointAction = null;\n    var commitAction = null;\n\n    var data = {};\n\n    // Fill data hash\n    if (buttonProperties.submitData || buttonProperties.executeRule || buttonProperties.createnewcase) {\n      // Collect data\n      data = self.collectRenderValuesForSubmit();\n    }\n\n    // Start asynchronous operation\n    $.when(self.startLoading()).done(function () {\n      $('html, body').animate({ scrollTop: $('.ui-bizagi-loading-icon') }, 'slow');\n    });\n\n    // Prepare actions\n    if (buttonProperties.executeRule) {// When the button has to execute any rule (MUST SUBMIT DATA BEFORE ALWAYS)\n\n      submitDataAction = self.dataService.submitData({\n        action: \"SUBMITDATA\",\n        data: data,\n        xpathContext: self.properties.xpathContext,\n        idPageCache: self.properties.idPageCache,\n        prepare: true });\n\n      submitDataAction.tag = \"submitData\";\n\n      checkpointAction = self.prepareCheckpointAction(buttonProperties.id);\n\n      // Reset data because when an execute rule operation has been performed, it saved already all the data\n      data = {};\n      executeButtonAction = self.dataService.executeButton({\n        idRender: buttonProperties.id,\n        xpathContext: self.properties.xpathContext || \"\",\n        idPageCache: self.properties.idPageCache,\n        prepare: true });\n\n      executeButtonAction.tag = \"executeRule\";\n\n      commitAction = self.prepareCommitAction(buttonProperties.id);\n    }\n\n    if (buttonProperties.next || buttonProperties.back || buttonProperties.save || buttonProperties.createnewcase || buttonProperties.nextWithoutValidations) {\n      // Verify transitions\n      if (self.transitions) {\n        var transitions = [];\n        $.each(this.activeTransitions, function (key, value) {\n          value ? transitions.push(key) : \"\";\n        });\n\n        if (bizagi.util.countProps(transitions) == 0) {\n          bizagi.showMessageBox(bizagi.localization.getResource(\"render-widget-complexgateway-path\"), bizagi.\n          localization.getResource(\"render-widget-complexgateway-error\"), \"info\", false);\n          self.endLoading();\n          defer.reject();\n          return defer.promise();\n        }\n      }\n\n      performAction = self.dataService.submitData({\n        action: buttonProperties.action,\n        forcePlanCompletion: buttonProperties.forcePlanCompletion,\n        data: data,\n        xpathContext: self.properties.xpathContext,\n        idPageCache: self.properties.idPageCache,\n        prepare: true,\n        transitions: transitions || \"\",\n        contexttype: self.properties.contextType,\n        surrogatekey: self.properties.surrogateKey });\n\n\n      performAction.tag = \"performAction\";\n    }\n\n    if (executeButtonAction) {\n      actions.push(submitDataAction);\n\n      //Validates if the method CHECKPOINT is supported\n      if (checkpointAction) {\n        actions.push(checkpointAction);\n      }\n\n      actions.push(executeButtonAction);\n\n      ///Validates if the method COMMIT is supported\n      if (commitAction) {\n        actions.push(commitAction);\n      }\n\n    }\n\n    if (performAction) {\n      actions.push(performAction);\n    }\n\n    // Execute the batch\n    bizagi.chrono.initAndStart(\"submitForm-ajax\");\n\n    //Evaluate if there are deferreds to evaluate, like inline add in grid, that must send a ADDRELATIONWITHDATA before to savedata\n    var flowControlDeferred = new $.Deferred();\n    if (data && data.deferreds) {\n      $.when.apply($, data.deferreds).\n      done(function (response) {\n        flowControlDeferred.resolve(response);\n        delete data.deferreds;\n      }).\n      fail(function () {\n        flowControlDeferred.reject();\n        console.log(\"Error: It was not possible resolve async actions on form \");\n      });\n    } else {\n      flowControlDeferred.resolve();\n    }\n\n    $.when(flowControlDeferred).done(function () {\n      bizagi.util.tablet.startLoading();\n      $.when(self.dataService.multiaction().execute({ actions: actions })).done(function (responses) {\n        bizagi.chrono.stop(\"submitForm-ajax\");\n        // Find validations\n        var bHasValidations;\n        $.each(responses, function (i, response) {\n          if (response.result.type == \"validationMessages\") {\n            // Something went wrong, we gotta display messages in notifications grid\n            self.addValidationMessage(response.result.messages);\n            bHasValidations = true;\n          }\n          if (response.result.type == \"alertMessages\") {\n            // Something went wrong, we are gonna display messages in an alert\n            bizagi.showMessageBox(response.result.messages.join(','), bizagi.localization.getResource(\"workportal-general-word-information\", \"Information\"));\n            bHasValidations = true;\n          }\n        });\n\n        if (!bHasValidations) {\n          // Everything went ok .. succesfully response from the server\n          if (!self.postProcessButton(responses, buttonProperties)) {\n            return;\n          }\n\n          // After successfully response refresh the form\n          if (buttonProperties.refresh) {\n            self.refreshForm();\n          }\n\n          // If needs routing publish an event\n          if (buttonProperties.routing) {\n            self.triggerHandler(\"routing\", {\n              idCase: self.params.idCase,\n              buttonPropertiesAction: buttonProperties.action });\n\n          }\n\n          // Create case\n          if (buttonProperties.createnewcase) {\n            if (responses.length > 0) {\n              self.triggerHandler(\"routing\", {\n                idCase: responses[0].result.IdCase,\n                caseNumber: responses[0].result.CaseNumber });\n\n            }\n          }\n        } else {\n          if (buttonProperties.executeRule) {\n            self.sendRollbackAction(buttonProperties.id);\n          }\n        }\n\n        //Removes the nonSupportedMethods to prevent further iterations\n        delete self.nonSupportedMethods;\n\n        defer.resolve();\n      }).fail(function (res, res2, response) {\n        if (buttonProperties.executeRule) {\n          self.sendRollbackAction(buttonProperties.id);\n        }\n\n        if (response && response.error && (response.error.errorType === \"WaitForCompletionPlanException\" ||\n        response.error.errorType === \"InvalidPlanStateException\" || response.error.errorType === \"CustomMessageException\")) {\n          self.endLoading();\n          $.when(bizagi.showConfirmationBox(bizagi.localization.getResource(response.error.message), null, false)).then(function () {\n            return $.when(self.internalSubmitForm($.extend({}, buttonProperties, { forcePlanCompletion: true })));\n          }).done(function () {\n            defer.resolve();\n          }).fail(function () {\n            defer.reject();\n          });\n        } else {\n          self.failHandler({ \"error\": typeof response === \"undefined\" ? bizagi.localization.getResource(\"workportal-general-error\") : response });\n          defer.reject(response);\n        }\n      }).always(function () {\n        bizagi.util.tablet.stopLoading();\n      });\n    }).always(function () {\n      bizagi.util.tablet.stopLoading();\n    });\n\n    return defer.promise();\n  },\n\n  prepareCheckpointAction: function prepareCheckpointAction(id) {\n    return bizagi.util.validateFeatureSupport(\"commitRollbackActions\") ? this._super(id) : null;\n  },\n\n  prepareCommitAction: function prepareCommitAction(id) {\n    return bizagi.util.validateFeatureSupport(\"commitRollbackActions\") ? this._super(id) : null;\n  },\n\n  /**\r\n      * Retorna el pane donde se pintó la forma para facilitar navegacion de kendo\r\n      * @returns {*}\r\n      */\n  getPane: function getPane() {\n    var self = this;\n    return self.pane;\n  },\n\n  /* TEMPLATE METHOD TO GET THE BUTTONS OBJECTS\r\n      ======================================================*/\n  getButtons: function getButtons() {\n    var self = this;\n\n    if (self.getParams() && (handler = self.getParams().getButtons))\n    handler(self);\n\n    return $(\".ui-bizagi-button-container :button\", self.container);\n  },\n\n  processButtons: function processButtons() {\n    var self = this;\n    var params = self.getParams();\n\n    //si no es con un if es con un publish\n    if (params && params.processButtons) {\n      var handler = params.processButtons;\n      handler(self);\n    }\n\n    var properties = self.properties;\n    var buttons = self.getButtons();\n\n    properties.buttons = self.buttons || buttons;\n\n    //to cache a submit Data Buttom if exist\n    self.saveButton = null;\n    self.nextButton = null;\n\n    //Set saveButton and nextButton if exist\n    for (var i = 0, length = properties.buttons.length; i < length; i++) {\n      if (properties.buttons[i].action == 'save') {\n        self.saveButton = properties.buttons[i];\n      } else if (properties.buttons[i].action == 'next') {\n        self.nextButton = properties.buttons[i];\n      }\n    }\n\n    var navigation = self.getNavigation();\n\n    if (typeof navigation !== \"undefined\") {\n      //si tiene un viewContainer sera porque es una forma dentro de container de edicion\n      var view_container = self.getViewContainer();\n      if (typeof view_container !== \"undefined\") {\n        view_container.setNavigationButtons(self);\n      } else {\n        navigation.setNavigationButtons(self);\n      }\n    }\n\n    self._super();\n  },\n\n  /*\r\n      *   Refresh the current form\r\n      */\n  refreshForm: function refreshForm(focus, showLoading) {\n    var self = this;\n    var properties = self.properties;\n    var params = self.getParams();\n    var deferred = $.Deferred();\n    var options;\n\n    focus = focus || self.getFocus();\n    showLoading = showLoading != false ? true : showLoading;\n\n    // Normalize new focus structure if not present\n    if (focus && !focus.id) {\n      focus = {\n        id: focus };\n\n    }\n\n    options = {\n      idCase: self.params.idCase || \"\",\n      idWorkitem: self.params.idWorkitem || \"\",\n      idTask: self.params.idTask || \"\",\n      focus: focus,\n      selectedTabs: self.getSelectedTabs(),\n      selectedSection: self.getSelectedSection(),\n      xpathContext: properties.xpathContext,\n      idPageCache: properties.idPageCache,\n      isRefresh: true,\n      action: self.getEndPointAction(),\n      idStartScope: self.properties.idStartScope || \"\",\n      navigation: params.navigation,\n      view_container: params.view_container };\n\n\n    if (self.isOfflineRefreshWithEdition) {\n      options.isEdited = true;\n      self.isOfflineRefreshWithEdition = false;\n    }\n\n    if (params.postRenderEdit || params.processButtons) {\n      options.isOfflineForm = self.params.isOfflineForm || false;\n      options.formsRenderVersion = self.params.formsRenderVersion || 0;\n      options.postRenderEdit = params.postRenderEdit;\n      options.processButtons = params.processButtons;\n      options.originalParams = params.originalParams || {};\n      options.getButtons = params.getButtons;\n    }\n\n    $(\".km-native-scroller\").css(\"-webkit-overflow-scrolling\", \"inherit\");\n\n    // Notify the refresh event so the consumer takes the decision about what to do\n    if (showLoading) {\n      self.startLoading();\n    }\n\n    $.when(self.triggerHandler(\"refresh\", options)).done(function () {\n\n      setTimeout(function () {\n        $(\".km-native-scroller\").css(\"-webkit-overflow-scrolling\", \"touch\");\n      }, 1000);\n\n      deferred.resolve();\n    }).fail(function () {\n      deferred.reject();\n    }).always(function () {\n      if (showLoading) {\n        self.endLoading();\n      }\n    });\n    return deferred.promise();\n  },\n\n  checkWidgetsData: function checkWidgetsData() {\n    var popupResponse = null;\n    if (bizagi.workportal.tablet.popup) {\n      if (bizagi.workportal.tablet.popup.instance) {\n        if (bizagi.workportal.tablet.popup.instance.getResponseValues) {\n          popupResponse = bizagi.workportal.tablet.popup.instance.getResponseValues(bizagi.workportal.tablet.popup.instance.getResponseValuesParams);\n          if (popupResponse === null) {\n            bizagi.showMessageBox(bizagi.localization.getResource(\"workportal-widget-complexgateway-path\"),\n            bizagi.localization.getResource(\"workportal-widget-complexgateway-error\"));\n            return -1;\n          } else {\n            bizagi.workportal.tablet.popup.instance.dontClose = false;\n            bizagi.workportal.tablet.popup.instance.close();\n          }\n        }\n      }\n    }\n\n    return popupResponse;\n  },\n\n  repaintComplexGateway: function repaintComplexGateway() {\n    var self = this;\n    if (self.focus !== undefined) {\n      if (self.focus.idCaseObject !== undefined) {\n        if (self.focus.idCaseObject.isComplex !== undefined) {\n          self.dataService.getWorkitems({\n            idCase: self.focus.idCaseObject.idCase }).\n          done(function (data) {\n            if (data.workItems.length == 1) {\n              if (data.workItems[0].taskType == \"ComplexGateway\") {\n                var transitions = data.workItems[0].transitions;\n\n                self.currentPopup = \"complexgateway\";\n                $(document).triggerHandler(\"popupWidget\", {\n                  widgetName: bizagi.workportal.widgets.widget.BIZAGI_WORKPORTAL_WIDGET_COMPLEXGATEWAY,\n                  options: {\n                    transitions: transitions,\n                    sourceElement: \".ui-bizagi-form\",\n                    insertAfter: \".ui-bizagi-form .ui-bizagi-button-container\",\n                    height: 'auto',\n                    offset: \"8 0\", //x y\n                    activeScroll: false,\n                    dontClose: true,\n                    closed: function closed() {\n                      self.currentPopup = null;\n                    } } });\n\n\n              }\n            }\n          });\n        }\n      }\n    }\n  },\n\n  /* METHOD TO ADD WARNINGS TO THE FORM\r\n     ======================================================*/\n  addWarning: function addWarning(message) {\n    var self = this;\n    self.warnings[message] = message;\n  },\n\n  /* METHOD TO ADD ERRORS TO THE FORM\r\n     ======================================================*/\n  addError: function addError(message) {\n    var self = this;\n    self.errors[message] = message;\n  },\n\n  /*  Executes a single button action\r\n     ======================================================= */\n  processButton: function processButton(buttonProperties) {\n    var self = this;\n    var deferred = $.Deferred();\n\n    // Disable routing button\n    if (!bizagi.util.isObjectEmpty(self.errors)) {\n      deferred.resolve();\n      if (bizagi.util.parseBoolean(buttonProperties.routing))\n      return deferred.promise();\n    }\n\n    // Call base\n    return this._super(buttonProperties);\n  },\n\n\n  getNavigation: function getNavigation() {\n    var params = this.getFormContainer().getParams();\n    return params.navigation;\n  },\n\n  getViewContainer: function getViewContainer() {\n    var params = this.getFormContainer().getParams();\n    return params.view_container;\n  },\n\n  isFloatingButtonsEnabled: function isFloatingButtonsEnabled() {\n    var navigation = this.getNavigation();\n    return navigation && navigation.isFloatingButtonsEnabled();\n  },\n\n  isFormButtonsEnabled: function isFormButtonsEnabled() {\n    var navigation = this.getNavigation();\n    return navigation && navigation.isFormButtonsEnabled();\n  },\n\n  /**\r\n      *   Adds an overlay to the form, and sets a waiting message\r\n      *\r\n      *   @argument {bool} delay Apply delay\r\n      */\n  startLoading: function startLoading() {\n    bizagi.loading.start();\n  },\n\n  /*\r\n     *   Removes the overlay and restores the form edition\r\n     */\n  endLoading: function endLoading() {\n    bizagi.loading.stop();\n  },\n\n  dispose: function dispose(params) {\n    var self = this;\n\n    // Active refresh on tablet\n    if (typeof params === \"undefined\" || typeof params.isRefresh === \"undefined\" || params.isRefresh == false) {\n      self._super();\n    }\n  },\n\n  failHandler: function failHandler(error) {\n    var self = this;\n    self._super(error);\n\n    var error_obj = {};\n    try {\n      error_obj = JSON.parse(error) || {};\n    } catch (e) {\n      error_obj = error.length && error.length > 1 ? error[0] : error;\n    } finally {\n\n      //This double validation has the purpose to get the real error object from two different levels ( error.error or error.error.error )\n      if (error_obj.error) error_obj = error_obj.error;\n      if (error_obj.error) error_obj = error_obj.error;\n\n      //trigger the routing event in order to refresh the case\n      if (typeof error_obj.code !== \"undefined\" && error_obj.code === \"AUTH_ERROR\") {\n        self.refreshAfterSessionIdle();\n      }\n    }\n  },\n\n  /**\r\n      * Display session IDLE message error and routing to process\r\n      */\n  refreshAfterSessionIdle: function refreshAfterSessionIdle() {\n    $.notifier.add({\n      title: bizagi.localization.getResource(\"workportal-sessiontimeout-expired-title\", \"Your session has expired\"),\n      text: bizagi.localization.getResource(\"render-idle-expired-error\", \"Idle timer expired. For safety reasons this view will be refreshed automatically in 5 seconds. Note that any unsaved data is lost.\").replace(\"%s\", \"5\"),\n      sticky: false,\n      overlay: true,\n      time: 5000,\n      after_close: this.routingToProcess.bind(this) });\n\n  },\n\n  /**\r\n      * Refresh the process\r\n      */\n  routingToProcess: function routingToProcess() {\n    var self = this;\n    var params = self.params || {};\n    var form = self.getFormContainer();\n    var isStartForm = form && form.isStartForm();\n\n    if (isStartForm) {\n      var processParams = params && params.originalParams || {};\n      if (processParams && processParams.idProcess) {\n        bizagi.webpart.publish(\"render-start-form\", {\n          params: {\n            showProcess: true,\n            hasStartForm: true,\n            fromNewCase: true,\n            idProcess: processParams.idProcess,\n            displayName: processParams.displayName || \"\",\n            mapping: {},\n            type: \"Process\" } });\n\n\n      }\n    } else {\n      self.triggerHandler(\"routing\", {\n        idCase: params.idCase,\n        idWorkitem: params.idWorkitem });\n\n    }\n  },\n\n  /**\r\n      * Build the container html\r\n      * @returns {*|jQuery}\r\n      */\n  renderContainer: function renderContainer() {\n    var self = this;\n    var properties = this.properties;\n    var template = self.renderFactory.getTemplate(\"form\");\n    var idCase = \"\";\n\n    // Render the form\n    var html = $.fasttmpl(template, {\n      buttons: self.buttons,\n      transitions: self.transitions,\n      uniqueId: properties.uniqueId,\n      helptext: properties.helpText,\n      mode: self.getMode(),\n      queryForm: self.getFormType() == \"queryForm\",\n      summaryForm: self.params.summaryForm || false,\n      globalForm: self.properties.displayAsReadOnly || false,\n      idCase: idCase,\n      displayName: self.params.displayName || idCase,\n      processPath: properties.processPath,\n      breadCrumb: properties.breadCrumb,\n      orientation: properties.orientation });\n\n\n    // Render children\n    html = self.replaceChildrenHtml(html, self.renderChildrenHtml());\n    return html;\n  },\n\n  /**\r\n      * Publish a global event that the facade will replicate, also will be triggered in the form\r\n      */\n  triggerGlobalHandler: function triggerGlobalHandler(eventType, data) {\n    var self = this;\n\n    if (!self.parent) {\n      if (self.observableElement) {\n        self.observableElement.trigger(eventType, data);\n      }\n    } else {\n      self.parent.triggerGlobalHandler(eventType, data);\n    }\n\n    return self._super(eventType, data);\n  },\n\n  /**\r\n      * Configure actions to complex-gateway\r\n      */\n  configureComplexGateway: function configureComplexGateway() {\n    var self = this;\n    var complexGatewayContainer;\n    var form = self.container;\n\n    if (form.length > 1) {\n      $(form.children()).each(function () {\n        if ($(this).hasClass('.bz-complex-gateway'))\n        complexGatewayContainer = this;\n      });\n    } else {\n      complexGatewayContainer = $(\".bz-complex-gateway\", form);\n    }\n\n    // activeTransitions is used to store ids of activities in Complex Gateway\n    self.activeTransitions = {};\n\n    // Set events for complex gateway interface\n    $(\".bz-checkbox__input\", complexGatewayContainer).on(\"click\", function () {\n      var $selected = $(this);\n      var transitionId = $selected.data(\"value\") || \"\";\n\n      if (typeof self.activeTransitions[transitionId] == \"undefined\") {\n        self.activeTransitions[transitionId] = false;\n      }\n\n      self.activeTransitions[transitionId] = $selected.is(':checked') || false;\n\n    });\n  },\n\n  /**\r\n      * Perform validation container\r\n      * @param form\r\n      * @param mainForm\r\n      * @returns {*}\r\n      */\n  getValidationsContainer: function getValidationsContainer(mainForm) {\n    var form = this;\n    var navigation = form.getNavigation();\n\n    if (typeof navigation !== \"undefined\") {\n      var view_container = form.getViewContainer();\n      var $currentView = typeof view_container !== \"undefined\" ? view_container.view : navigation.view;\n\n      if ($currentView && $currentView.footer) {\n        return $currentView.footer;\n      }\n    }\n\n    return this._super(form, mainForm);\n  } });","/**\r\n *   Name: Bizagi tablet Panel Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the container class to adjust to tablet devices\r\n */\n\n// Extends from container tablet base\nbizagi.rendering.tablet.container.extend(\"bizagi.rendering.tablet.panel\", bizagi.rendering.panel.prototype);\n// Extends itself\nbizagi.rendering.tablet.panel.extend(\"bizagi.rendering.tablet.panel\", {}, {});","/**\r\n *   Name: Bizagi Tablet ContentPanel Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the content panel class to adjust to tablet devices\r\n */\n\n// Extends from container tablet base\nbizagi.rendering.tablet.container.extend(\"bizagi.rendering.tablet.contentPanel\", bizagi.rendering.contentPanel.prototype);\n// Extends itself\nbizagi.rendering.tablet.contentPanel.extend(\"bizagi.rendering.tablet.contentPanel\", {}, {});","/*\r\n*   Name: Bizagi tablet Nested Form Extension\r\n*   Author: UI Forms Team\r\n*   Comments:\r\n*   -   This script will define a nested form container class for tablet devices\r\n*/\n\n// Extends from panel tablet base\nbizagi.rendering.tablet.panel.extend(\"bizagi.rendering.tablet.nestedForm\", {}, {});","/**\r\n *   Name: Bizagi Tablet Tab Container Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the container class to adjust to tablet devices\r\n */\n\n// Extends from container tablet base\nbizagi.rendering.tablet.container.extend(\"bizagi.rendering.tablet.tab\", bizagi.rendering.tab.prototype);\n// Auto extend\nbizagi.rendering.tablet.tab.extend(\"bizagi.rendering.tablet.tab\", {}, {\n\n  /* POST RENDER CONTAINER ACTIONS\r\n                                                                        =================================================*/\n  postRenderContainer: function postRenderContainer(container) {\n    var self = this;\n\n    this._super(container);\n\n    container.material_bizagi_tabs({\n      direction: this.properties.orientation,\n      active_index_tab: this.activeTab }).\n    on(\"updateActive\", function (ev, info) {\n      ev.stopPropagation();\n\n      self.setActiveTab(info.index);\n\n    });\n\n    $(\"> .bz-tabs > .bz-tab\", container).rippleEffect();\n  } });","/**\r\n *   Name: Bizagi Tablet Panel Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the container class to adjust to tablet devices\r\n */\n\n// Extends from container tablet base\nbizagi.rendering.tablet.container.extend(\"bizagi.rendering.tablet.tabItem\", bizagi.rendering.tabItem.prototype);\n// Extends itself\nbizagi.rendering.tablet.tabItem.extend(\"bizagi.rendering.tablet.tabItem\", {}, {\n  /**\r\n                                                                                 * Change selected item\r\n                                                                                 *\r\n                                                                                 * @param {} argument\r\n                                                                                 * @returns {}\r\n                                                                                 */\n  setAsActiveContainer: function setAsActiveContainer(argument) {\n    var self = this;\n\n    $.when(self.ready()).done(function () {\n      var tabItem = $(\"[data-reference='#ui-bizagi-tab-\" + self.properties.id + \"']\", self.parent.tabs);\n\n      tabItem.css(\"display\", \"\");\n      tabItem.click();\n    });\n  },\n  /* \r\n     *   Focus on container\r\n     */\n  focus: function focus() {\n    // Activate the tab if it hasn't been loaded\n    this.activate();\n\n    // Set this tab as an active container\n    this.setAsActiveContainer();\n\n    // Call base\n    this._super();\n  },\n\n  /**\r\n      *  Hides / Show container\r\n      *\r\n      * @param {} argument\r\n      * @returns {}\r\n      */\n  changeVisibility: function changeVisibility(argument) {\n    var self = this;\n\n    // Store in properties\n    self.properties.visible = bizagi.util.parseBoolean(argument);\n\n    $.when(self.ready()).done(function () {\n      var tabItem = $(\"[data-reference='#ui-bizagi-tab-\" + self.properties.id + \"']\", self.parent.tabs);\n      var activeTab = self.parent.container.material_bizagi_tabs(\"getActiveTab\");\n\n      // Hide - show the render\n      if (self.properties.visible) {\n        tabItem.css(\"display\", \"\");\n        if (self.properties.counter === activeTab.index) {\n          self.container.css(\"display\", \"\");\n          self.setAsActiveContainer();\n        } else {\n          self.container.css(\"display\", \"none\");\n        }\n      } else {\n        self.container.css(\"display\", \"none\");\n        tabItem.css(\"display\", \"none\");\n\n        // If we are focus in the same tab is going to be invisible\n        activeTab = self.parent.container.material_bizagi_tabs(\"getActiveTab\");\n\n        if (self.properties.counter === activeTab.index) {\n          self.parent.container.material_bizagi_tabs(\"moveToNextTab\");\n        } else {\n          self.parent.container.material_bizagi_tabs(\"refreshPositions\");\n        }\n      }\n    });\n  },\n\n  afterToRefresh: function afterToRefresh() {\n    var self = this;\n    self._super();\n    $.when(self.ready()).done(function () {\n      self.parent.container.material_bizagi_tabs(\"refreshTab\", self.properties.id);\n    });\n  } });","/*\r\n*   Name: BizAgi tablet Horizontal Container Extension\r\n*   Author: UI Forms Team\r\n*   Comments:\r\n*   -   This script will redefine the horizontal container class to adjust to tablet devices\r\n*/\n\n// Extends from container tablet base\nbizagi.rendering.tablet.container.extend(\"bizagi.rendering.tablet.horizontal\", bizagi.rendering.horizontal.prototype);\n// Auto extend\nbizagi.rendering.tablet.horizontal.extend(\"bizagi.rendering.tablet.horizontal\", {}, {});","/*\r\n*   Name: Bizagi tablet Layout Extension\r\n*   Author: UI Forms Team\r\n*   Comments:\r\n*   -   This script will redefine the layout class to adjust to tablet devices\r\n*/\n\n// Extends from container desktop base\nbizagi.rendering.tablet.container.extend(\"bizagi.rendering.tablet.layout\", bizagi.rendering.layout.prototype);\n// Extends itself\nbizagi.rendering.tablet.layout.extend(\"bizagi.rendering.tablet.layout\", {}, {});","/*\r\n*   Name: Bizagi Tablet Accordion Container Extension\r\n*   Author: UI Forms Team\r\n*   Comments:\r\n*   -   This script will redefine the container class to adjust to tablet devices\r\n*/\n\n// Extends from container tablet base\nbizagi.rendering.tablet.container.extend(\"bizagi.rendering.tablet.accordion\", bizagi.rendering.accordion.prototype);\n// Extends itself\nbizagi.rendering.tablet.accordion.extend(\"bizagi.rendering.tablet.accordion\", {}, {});","/*\r\n*   Name: BizAgi Tablet Panel Extension\r\n*   Author: UI Forms Team\r\n*   Comments:\r\n*   -   This script will redefine the container class to adjust to tablet devices\r\n*/\n\n// Extends from container tablet base\nbizagi.rendering.tablet.container.extend(\"bizagi.rendering.tablet.accordionItem\", bizagi.rendering.accordionItem.prototype);\n// Extends itself\nbizagi.rendering.tablet.accordionItem.extend(\"bizagi.rendering.tablet.accordionItem\", {}, {\n\n\n  /* \r\n                                                                                            *   Change selected item \r\n                                                                                            */\n  setAsActiveContainer: function setAsActiveContainer(argument) {\n\n  },\n\n  /* \r\n     *   Focus on container\r\n     */\n  focus: function focus() {\n    this.setAsActiveContainer();\n\n    // Call base\n    this._super();\n  } });","/*\r\n *   Name: Bizagi Tablet Group Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the group class to adjust to tablet devices\r\n */\n\n// Extends from container tablet base\nbizagi.rendering.tablet.container.extend(\"bizagi.rendering.tablet.group\", bizagi.rendering.group.prototype);\n// Auto extend\nbizagi.rendering.tablet.group.extend(\"bizagi.rendering.tablet.group\", {}, {\n\n  /**\r\n                                                                            * Method to customize the container's behaviour to add handlers\r\n                                                                            */\n  configureHandlers: function configureHandlers() {\n    var self = this;\n    $(\">h5.bz-collapsible__header\", self.container).bind(\"click\", function () {\n      $(self.container).toggleClass(\"bz-collapsible--collapsed\");\n    });\n  },\n\n  /**\r\n      * Template method to implement in each device to customize each container after processeds\r\n      * @param {} group      \r\n      */\n  postRenderContainer: function postRenderContainer(group) {\n    // Call base\n    this._super(group);\n    if (this.properties.collapse) {\n      this.collapse();\n    }\n  },\n\n  /**\r\n     * Check if group its open\r\n     * \r\n     * @return boolean\r\n     */\n  isOpen: function isOpen() {\n    return this.container.hasClass(\"bz-collapsible--collapsed\") ? false : true;\n  },\n\n  /**\r\n      * Focus on container     \r\n      */\n  focus: function focus() {\n    // Expand container\n    this.expand();\n\n    // Call base\n    this._super();\n  },\n\n  /**\r\n      * Expands group container \r\n      * @returns {} \r\n      */\n  expand: function expand() {\n    if (!this.isOpen()) {\n      $(\">h5.bz-collapsible__header\", this.container).trigger(\"click\");\n    }\n  },\n\n  /**\r\n      * Collapses group container \r\n      * @returns {} \r\n      */\n  collapse: function collapse() {\n    if (this.isOpen()) {\n      $(\">h5.bz-collapsible__header\", this.container).trigger(\"click\");\n    }\n  },\n\n  /**\r\n      * Expands or collapse the container from actions\r\n      * @param {} argument      \r\n      */\n  toogleContainer: function toogleContainer(argument) {\n    if (argument) {\n      this.expand();\n    } else {\n      this.collapse();\n    }\n  } });","/*\r\n *   Name: Bizagi Tablet Section Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the section class to adjust to tablet devices\r\n */\n\n// Extends from container tablet base\nbizagi.rendering.tablet.container.extend(\"bizagi.rendering.tablet.section\", bizagi.rendering.section.prototype);\n// Auto extend\nbizagi.rendering.tablet.section.extend(\n\"bizagi.rendering.tablet.section\",\n{},\n{\n  /*\r\n   *   Render the container layout\r\n   */\n  renderContainer: function renderContainer() {\n    var self = this;\n    var properties = this.properties;\n    var template = self.renderFactory.getTemplate(\"section\");\n\n    // Render the panel\n    var html = $.fasttmpl(template, {\n      expandedClassIcon: self.expandedIcon,\n      displayName: properties.displayName,\n      editable: properties.editable,\n      orientation: properties.orientation,\n      uniqueId: properties.uniqueId,\n      isDesign: self.getMode() !== \"execution\",\n      messageValidation: properties.messageValidation,\n      guid: properties.guid,\n      displayAs: properties.displayAs });\n\n\n    // Render children\n    html = self.replaceChildrenHtml(html, self.renderChildrenHtml());\n    return html;\n  },\n\n  /**\r\n      * Method to customize the container's behaviour to add handlers\r\n      */\n  configureHandlers: function configureHandlers() {\n    var self = this;\n    //Fix para establecer la orientación correcta en el modal\n    var dir = self.getSectionOrientationRTL(self) ? \"rtl\" : \"ltr\";\n    $(self.container).attr(\"dir\", dir);\n\n    self.bind(\"reopenSection\", function () {\n      self.expand();\n    });\n\n    $(\">div.bz-section__content\", self.container).mobileModal({\n      displayName: self.properties.displayName,\n      displayNameParent: self.getParentDisplayName(),\n      anchor: $(\">div.bz-section__header\", self.container),\n      dir: dir,\n      appendTo: self.container,\n      onBeforeShow: function onBeforeShow(m) {\n        self.addToHistoryNavigation();\n        setTimeout(function () {\n          var p = self.getSectionParent(self.parent);\n          $('header[data-role=header]').css({ \"display\": \"none\" });\n          $(\"div[data-role=footer] .bz-form-buttons\").css({ \"display\": \"none\" });\n          if (!self.isFirstLevel(true)) {\n            $($('div[data-role=header]', p.container)[0]).css({ \"display\": \"none\" });\n          }\n        }, 250);\n      },\n\n      onShow: function onShow(m) {\n\n      },\n\n      onClose: function onClose(m) {\n        if (m) m.close();\n        self.removeFromHistoryNavigation();\n        var p = self.getSectionParent(self.parent);\n        if (self.isFirstLevel()) {\n          $('header[data-role=header]').css({ \"display\": \"block\" });\n          $(\"div[data-role=footer] .bz-form-buttons\").css({ \"display\": \"flex\" });\n        } else {\n          $($('div[data-role=header]', p.container)[0]).css({ \"display\": \"flex\" });\n        }\n      } });\n\n  },\n\n  /**\r\n      * Return true if the section is on the main form, or false if it is nested.\r\n      */\n  isFirstLevel: function isFirstLevel(isOpen) {\n    var form = this.getFormContainer();\n    var params = form.getParams() || {};\n    var selected = params.selectedSection;\n    if (typeof selected === \"undefined\") return true;\n    return isOpen ? selected.length <= 1 : selected.length === 0;\n  },\n\n  /**\r\n      * Set the selected section opened\r\n      */\n  addToHistoryNavigation: function addToHistoryNavigation() {\n    var form = this.getFormContainer();\n    var params = form.getParams() || {};\n    if (typeof params.selectedSection === \"undefined\") {\n      form.setParam(\"selectedSection\", []);\n      params = form.getParams();\n    }\n    params.selectedSection.push(this.properties.id);\n  },\n\n  /**\r\n      * Unset the actual section as a opened section\r\n      */\n  removeFromHistoryNavigation: function removeFromHistoryNavigation() {\n    var form = this.getFormContainer();\n    var params = form.getParams() || {};\n    if (typeof params.selectedSection !== \"undefined\") {\n      params.selectedSection.pop();\n    }\n  },\n\n  /**\r\n      * Check if group its open\r\n      *\r\n      * @return boolean\r\n      */\n  isOpen: function isOpen() {\n    return this.container.hasClass(\"bz-section--collapsed\") ? false : true;\n  },\n\n  /**\r\n      * Focus on container\r\n      */\n  focus: function focus() {\n    // Expand container\n    this.expand();\n\n    // Call base\n    this._super();\n  },\n\n  /**\r\n      * Expands group container\r\n      * @returns {}\r\n      */\n  expand: function expand() {\n    $(\">div.bz-section__header\", this.container).trigger(\"click\");\n  },\n\n  /**\r\n      * Collapses group container\r\n      * @returns {}\r\n      */\n  collapse: function collapse() {\n    if (this.isOpen()) {\n      $(\">div.bz-section__header\", this.container).trigger(\"click\");\n    }\n  },\n\n  /**\r\n      * Expands or collapse the container from actions\r\n      * @param {} argument\r\n      */\n  toogleContainer: function toogleContainer(argument) {\n    if (argument) {\n      this.expand();\n    } else {\n      this.collapse();\n    }\n  } });","/**\r\n *   Name: Bizagi tablet Search Form Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the container class to adjust to tablet devices\r\n */\n\nbizagi.rendering.tablet.form.extend(\"bizagi.rendering.tablet.searchForm\", bizagi.rendering.searchForm.prototype);\n// Extends itself\nbizagi.rendering.tablet.searchForm.extend(\"bizagi.rendering.tablet.searchForm\", {}, {\n  /**\r\n                                                                                       * Render the results of the query\r\n                                                                                       * @returns {*} Resolved in each device\r\n                                                                                       */\n  renderResult: function renderResult() {\n    var self = this;\n    var properties = self.properties;\n\n    // Creates grid definition\n    var data = {};\n    data.properties = {\n      displayName: self.getResource(\"render-search-advanced-results-label\"),\n      type: \"grid\",\n      xpath: \"searchForm\" + properties.id,\n      id: properties.id,\n      skipInitialLoad: true,\n      rowsPerPage: 10,\n      visible: false,\n      sortBy: properties.sortBy,\n      sortOrder: properties.sortOrder,\n      overrideGetRemoteData: function overrideGetRemoteData(params) {\n        return self.getRemoteData(params);\n      } };\n\n\n    data.elements = [];\n\n    // Creates columns\n    var columns = properties.columns;\n    $.each(columns, function (i) {\n      var column = {\n        render: {} };\n\n\n      column.render.properties = {\n        displayName: columns[i].caption,\n        xpath: columns[i].xpath,\n        editable: false };\n\n\n      $.extend(column.render.properties, self.parseAdditionalProperties(columns[i].dataType));\n\n      // Next conditional added to print only columns and not labels\n      // if type = label then column is not rendered on the results table\n      if (columns[i].dataType == 0)\n      column.render.properties.columnVisible = false;\n\n      // if column is number or monetary push allowDecimals property\n      if (columns[i].dataType == 7 || columns[i].dataType == 8)\n      column.render.properties.allowDecimals = columns[i].allowDecimals;\n\n      // if column is real or float set allowDecimals property to true\n      if (columns[i].dataType == 10 || columns[i].dataType == 11)\n      column.render.properties.allowDecimals = true;\n\n      // if column is date push showtime property\n      if (columns[i].dataType == 12)\n      column.render.properties.showTime = columns[i].showTime;\n\n      data.elements.push(column);\n    });\n\n    var grid = self.renderFactory.getRender({\n      type: \"grid\",\n      data: data,\n      parent: self,\n      mode: self.getMode() });\n\n\n    grid.properties.inlineAdd = false;\n    grid.properties.allowDelete = false;\n    grid.properties.allowAdd = false;\n    grid.properties.allowEdit = false;\n\n    // Saves reference\n    self.resultsGrid = grid;\n\n    return grid.render();\n  },\n\n  /**\r\n      * Template method to implement in each device to customize each container after processed\r\n      * @param container\r\n      */\n  postRenderContainer: function postRenderContainer(container) {\n    var self = this;\n    var searchCriteria = container.find(\".bz-container__search-criteria\");\n    var results = container.find(\".bz-container__search-results\");\n    var childrenElements = searchCriteria.children();\n    var mode = self.getMode();\n\n    // Process children elements\n    self.container = container;\n    $.each(childrenElements, function (i, childElement) {\n      childElement = $(childElement);\n      var id = Number(childElement.data(\"unique-id\"));\n      if (id) {\n        var child = self.childrenHash[id];\n        if (child) {\n          var type = child.getElementType();\n          if (type == bizagi.rendering.element.ELEMENT_TYPE_RENDER) child.postRenderElement(childElement);\n          if (type == bizagi.rendering.element.ELEMENT_TYPE_CONTAINER) child.postRenderContainer(childElement);\n        }\n      }\n    });\n\n    // Process result\n    var grid = $(results.children()[0]);\n    self.resultsGrid.postRenderElement(grid);\n\n    // Apply handlers\n    if (mode === \"execution\") {\n      self.configureHandlers();\n    }\n\n    // Configure view\n    if (mode === \"design\") {\n      self.configureDesignView();\n    }\n\n    // Configure view\n    if (mode === \"layout\") {\n      self.configureDesignView();\n      self.configureLayoutView();\n    }\n\n  },\n\n  /**\r\n      * Customize the container's behaviour to add handlers\r\n      */\n  configureHandlers: function configureHandlers() {\n    var self = this;\n\n    // Saves reference\n    self.criteriaContainer = $(\".bz-container__search-criteria\", self.container);\n    self.resultsContainer = $(\".bz-container__search-results\", self.container);\n\n    // Bind to grid row select event\n    self.resultsGrid.bind(\"rowSelected\", function (e, ui) {\n      if (self.properties.searchParams.hasOwnProperty(\"multiSelect\")) {\n        self.trigger(\"multiSelect\", ui);\n      } else {\n        // Trigger event to bubble up to main container\n        self.trigger(\"instanceSelected\", ui);\n      }\n    });\n  },\n\n  /**\r\n      * Refresh the result panel, making it to query data with current criteria\r\n      */\n  refreshResults: function refreshResults() {\n    var self = this;\n\n    self.trigger(\"instancerefresh\");\n\n    self.resultsGrid.refresh();\n  },\n\n  /**\r\n      * Method added for IPad version. Before showing search results form\r\n      */\n  onSearchFinished: function onSearchFinished() {\n    var self = this;\n\n    if (!self.properties.deviceMaxRecordsExceeded) {\n\n      // Next line returns visibility with the results of the search\n      self.resultsGrid.changeVisibility(true);\n\n      if (self.properties) {\n        if (self.properties.records == 0) {\n          $(\".bz-container__search-results label\", self.container).hide();\n        } else {\n          $(\".bz-container__search-results label\", self.container).show();\n        }\n      }\n    }\n  } });","/**\r\n *   Name: Bizagi Tablet Render Text Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the text render class to adjust to tablet devices\r\n */\n\n// Extends from render tablet base\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.text\", bizagi.rendering.text.prototype);\n// Extends itself\nbizagi.rendering.tablet.text.extend(\"bizagi.rendering.tablet.text\", {}, {\n\n  //#region Side effects functions\n\n  /**\r\n   * Template method to implement in each device to customize each render after processed\r\n   */\n  postRender: function postRender() {\n    // Call base\n    this._super();\n\n    // Set the default maxlenght for the input\n    if (this.properties.maxLength > 0) {\n      this.input.attr('maxlength', this.properties.maxLength);\n    }\n  },\n\n  renderReadOnly: function renderReadOnly() {\n    var template = this.renderFactory.getTemplate(\"text-readOnly\");\n    var value = this.getValue();\n\n    if (typeof value !== \"undefined\" && value !== null) {\n      value = bizagi.util.sanitizeHTML(value);\n    }\n\n    var data = {\n      value: value || \"\",\n      editable: this.properties.editable };\n\n\n    return $.fasttmpl(template, data);\n  },\n\n  /**\r\n      * Sets the value in the rendered control\r\n      * @param {} value\r\n      */\n  setDisplayValue: function setDisplayValue(value) {\n    var self = this;\n\n    value = this.validateValue(value, self.properties.maxLength);\n\n    // Set internal value\n    self.setValue(value, false);\n\n    // Set value in input\n    if (self.properties.editable) {\n      self.input.val(value);\n    } else {\n      $(\".bz-text-readonly\", self.getControl()).html(bizagi.util.sanitizeHTML(value));\n    }\n  },\n\n  attachRetypeDouble: function attachRetypeDouble() {\n    var self = this;\n    var element = self.element;\n\n    var input = $(\"input\", element);\n    if (!input || input.length === 0) return;\n\n    // Apply blur handler to check value\n    input.blur(function () {\n      var control = $(this);\n      self.retypeDouble(control);\n    });\n  },\n\n  /**\r\n      * Retype actions\r\n      * @param {} control\r\n      */\n  retypeDouble: function retypeDouble(control) {\n    var self = this;\n    var currentValue = control.val();\n    var isVisible = $(control).attr(\"type\") !== \"hidden\" && $(control).css(\"display\") !== \"none\" && $(control).css(\"visibility\") !== \"hidden\";\n\n    if (isVisible) {\n      if (!control.data(\"oldValue\") || $(this).data(\"oldValue\") === \"\") {\n\n        // Check that there is something in the value or if a value has already been set\n        if (currentValue === \"\" || currentValue === control.attr(\"newValue\")) return;\n\n        self.createTooltip(control, currentValue, self.getResource(\"render-number-retype\"));\n\n      } else {\n        // Check that there is something in the value\n        if (currentValue === \"\") return;\n\n        if (currentValue !== control.data(\"oldValue\")) {\n          self.setValue(\"\");\n\n          self.setValidationMessage(self.getResource(\"render-text-retype-error\"));\n          control.val(\"\");\n\n          setTimeout(function () {\n            control.focus();\n          }, 100);\n\n        } else {\n          control.data(\"newValue\", currentValue);\n        }\n        control.data(\"oldValue\", \"\");\n        if (control.data('ui-tooltip')) control.tooltip('destroy');\n      }\n    }\n  },\n\n  getElementsToStylize: function getElementsToStylize($context) {\n    return this.properties.editable ? $(\"input\", $context) : $(\".bz-text-readonly\", $context);\n  },\n\n  /**\r\n      * Helptext tooltip\r\n      * @param {} control\r\n      * @param {} currentValue\r\n      * @param {} currentTitle\r\n      */\n  createTooltip: function createTooltip(control, currentValue, currentTitle) {\n    this._super(control, currentValue, currentTitle);\n\n    $('body').bind('touchmove', function (e) {\n      $('body').unbind('touchmove');\n      if (control.data('ui-tooltip')) control.tooltip('destroy');\n    });\n  },\n\n  setValidationMessage: function setValidationMessage(message) {\n    // Call base\n    this._super(message);\n    if (this.cloneRender) {\n      this.cloneRender.setValidationMessage(message);\n    }\n  }\n\n  //#endregion Side effects functions\n});","/**\r\n *   Name: Bizagi Tablet Render Readonly Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the readonly render class to adjust to tablet devices\r\n */\n\n// Extends from render tablet base\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.readonly\", bizagi.rendering.readonly.prototype);\n// Extends itself\nbizagi.rendering.tablet.readonly.extend(\"bizagi.rendering.tablet.readonly\", {}, {});","/**\r\n *   Name: Bizagi Tablet Render Text Extension\r\n *   Author: UI Forms Team\r\n *   Comments: Extended text implementation\r\n */\n\n// Extends from render tablet base\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.extendedText\", bizagi.rendering.extendedText.prototype);\n// Extends itself\nbizagi.rendering.tablet.extendedText.extend(\"bizagi.rendering.tablet.extendedText\", {\n  minLines: 2,\n  maxLines: 8,\n  maxCharactersToShow: 200 },\n{\n\n  //#region Side effects functions\n\n  /**\r\n   * Template method to implement in each device to customize each render after processed\r\n   */\n  postRender: function postRender() {\n    var self = this;\n    self._super();\n    self.textarea = self.getControl().find(\"textarea\");\n    if (self.textarea) self.textarea.css({ resize: \"vertical\" });\n  },\n\n\n  /**\r\n      * Update or init the element data\r\n      * @param {} data\r\n      */\n  initializeData: function initializeData(data) {\n    // Call base\n    this._super(data);\n    var maxLines = this.properties.maxLines;\n    this.properties.maxLines = maxLines > this.Class.maxLines ? this.Class.maxLines : maxLines < this.Class.minLines ? this.Class.minLines : maxLines;\n\n    // Check if offline forms is supported\n    this.isOfflineForm = bizagi.util.isOfflineForm({ context: this });\n  },\n\n  /**\r\n      * Method to render non editable values\r\n      */\n  renderReadOnly: function renderReadOnly() {\n    var template = this.renderFactory.getTemplate(\"extendedText-readOnly\");\n    var value = this.getValue();\n    value = typeof value !== \"undefined\" && value !== null ? bizagi.util.sanitizeHTML(value) : \"\";\n    var showChar = this.Class.maxCharactersToShow;\n\n    var startString = value.substr(0, showChar);\n    var endString = value.substr(showChar - 1, value.length - showChar);\n\n    var data = {\n      \"value\": value,\n      \"startString\": startString,\n      \"endString\": endString };\n\n\n    return $.fasttmpl(template, data);\n  },\n\n  /**\r\n      * Sets the value in the redered control\r\n      * @param {} value\r\n      */\n  setDisplayValue: function setDisplayValue(value) {\n    var self = this;\n    value = !bizagi.util.isEmpty(value) && typeof value !== \"string\" ? value.toString() : value;\n    value = self.validateValue(typeof value == \"string\" ? value : \"\", self.properties.maxLength);\n\n    // Call base        \n    self.setValue(value, false);\n\n    // Set value in input\n    if (self.properties.editable) {\n      self.textarea.val(value);\n    } else {\n      var encodedText = bizagi.util.encodeHtmlText(self.getDisplayValue());\n      $(\".bz-textarea-readonly\", self.getControl()).html(encodedText);\n    }\n  },\n\n  /**\r\n      * Method to customize the render's behaviour to add handlers\r\n      */\n  configureHandlers: function configureHandlers() {\n    var self = this;\n\n    // Call base\n    self._super();\n\n    // Define max length of element\n    if (self.properties.maxLength > 0) {\n      self.textarea.attr(\"maxlength\", self.properties.maxLength);\n      self.actualMaxLength = self.properties.maxLength;\n    }\n    $(self.textarea).bind(\"focus keyup paste\", function (e) {\n      if (e.which === 8 || e.which === 46) {\n        var currentRow = self.textarea.prop(\"rows\");\n        if (currentRow > self.properties.maxLines) {\n          self.textarea.prop(\"rows\", self.properties.maxLines);\n        }\n      }\n      self.updateTextareaSize(this);\n    });\n\n    $(self.textarea).bind(\"blur\", function (e) {\n      self.textarea.prop(\"rows\", self.properties.maxLines);\n    });\n  },\n\n  /**\r\n      * Sets the functions when the control is readonly\r\n      */\n  configureHandlersReadOnly: function configureHandlersReadOnly() {\n    var self = this;\n\n    var $control = this.getControl();\n    $(\".bz-textarea-readonly\", $control).on(\"click\", \".bz-read-more\", function (e) {\n      if ($(e.delegateTarget).hasClass(\"bz-textarea-readonly--active\")) {\n        $(e.delegateTarget).removeClass(\"bz-textarea-readonly--active\");\n        $(this).html(self.getResource(\"workportal-project-discussion-comment-viewmore\"));\n      } else {\n        $(e.delegateTarget).addClass(\"bz-textarea-readonly--active\");\n        $(this).html(self.getResource(\"workportal-project-discussion-comment-viewless\"));\n      }\n      return false;\n    });\n  },\n\n  /**\r\n      * Changes control's height when it's auto extended\r\n      * @param {Object} control HTML Object\r\n      */\n  updateTextareaSize: function updateTextareaSize(textarea) {\n    if (this.properties.autoExtend) {\n      var currentRows = $(textarea).prop(\"rows\");\n      if (textarea.scrollHeight > textarea.offsetHeight && currentRows >= this.Class.minLines && currentRows < this.Class.maxLines) {\n        //Extend the rows\n        $(textarea).prop(\"rows\", currentRows + 1);\n        this.updateTextareaSize(textarea);\n      }\n    }\n  },\n\n  /**\r\n      * Handler of retype double actions\r\n      */\n  attachRetypeDouble: function attachRetypeDouble() {\n    var self = this;\n    var element = self.element;\n\n    var input = $(\"input, textarea\", element);\n    if (!input || input.length === 0) return;\n\n    // Apply blur handler to check value\n    input.blur(function () {\n      var control = $(this);\n      var previousValue = self.previousValue;\n      var value = self.value;\n\n      if (previousValue != null && value != previousValue) {\n        if ($(this).data(\"newValue\") != undefined && control.val() != $(this).data(\"newValue\")) {\n          $(this).data().newValue = undefined;\n        }\n      }\n\n      self.retypeDouble(control);\n    });\n  },\n\n  /**\r\n      * Retype actions\r\n      * @param {} control\r\n      */\n  retypeDouble: function retypeDouble(control) {\n    var self = this;\n    var currentValue = control.val();\n    var isVisible = $(control).attr(\"type\") !== \"hidden\" && $(control).css(\"display\") !== \"none\" && $(control).css(\"visibility\") !== \"hidden\";\n\n    if (isVisible) {\n      if (!control.data(\"oldValue\") || $(this).data(\"oldValue\") === \"\") {\n\n        // Check that there is something in the value or if a value has already been set\n        if (currentValue === \"\" || currentValue === control.attr(\"newValue\")) return;\n\n        self.createTooltip(control, currentValue, self.getResource(\"render-number-retype\"));\n\n      } else {\n        // Check that there is something in the value\n        if (currentValue === \"\") return;\n\n        if (currentValue !== control.data(\"oldValue\")) {\n          self.setValue(\"\");\n\n          self.setValidationMessage(self.getResource(\"render-text-retype-error\"));\n          control.val(\"\");\n\n          setTimeout(function () {\n            control.focus();\n          }, 100);\n\n        } else {\n          control.data(\"newValue\", currentValue);\n        }\n        control.data(\"oldValue\", \"\");\n        if (control.data('ui-tooltip')) control.tooltip('destroy');\n      }\n    }\n  },\n\n  /**\r\n      * Gets jQuery Object to stylize\r\n      * @param {jQuery Object} $context jQuery Object\r\n      */\n  getElementsToStylize: function getElementsToStylize($context) {\n    return this.properties.editable ? $(\"textarea\", $context) : $(\".bz-textarea-readonly\", $context);\n  },\n\n  /**\r\n      * Helptext tooltip\r\n      * @param {} control\r\n      * @param {} currentValue\r\n      * @param {} currentTitle\r\n      */\n  createTooltip: function createTooltip(control, currentValue, currentTitle) {\n    this._super(control, currentValue, currentTitle);\n\n    $('body').bind('touchmove', function (e) {\n      $('body').unbind('touchmove');\n      if (control.data('ui-tooltip')) control.tooltip('destroy');\n    });\n  },\n\n  setValidationMessage: function setValidationMessage(message) {\n    // Call base\n    this._super(message);\n\n    if (this.cloneRender) {\n      this.cloneRender.setValidationMessage(message);\n    }\n  }\n\n  //#endregion Side effects functions\n});","/**\r\n *   Name: Bizagi Tablet Render Label Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the label render class to adjust to tablet devices\r\n */\n\n// Extends from render tablet base\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.label\", bizagi.rendering.label.prototype);\n// Extends itself\nbizagi.rendering.tablet.label.extend(\"bizagi.rendering.tablet.label\", {}, {\n  /**\r\n                                                                            * Method to render non editable values\r\n                                                                            */\n  renderReadOnly: function renderReadOnly() {\n    this.setValue(this.properties.displayName);\n    return this._super();\n  },\n  /**\r\n      * Sets the value in the rendered control\r\n      */\n  setDisplayValue: function setDisplayValue(value) {\n    // DON'T DO ANYTHING\n  } });","/**\r\n *   Name: Bizagi Tablet Render Number Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the number render class to adjust to tablet devices\r\n */\n\n// Extends from render tablet base\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.number\", bizagi.rendering.number.prototype);\n// Extends itself\nbizagi.rendering.tablet.number.extend(\"bizagi.rendering.tablet.number\", {}, {\n\n  /**\r\n                                                                               * Method to customize each render after processed in read-only mode\r\n                                                                               * @returns {*|jQuery}\r\n                                                                               */\n  renderReadOnly: function renderReadOnly() {\n    var self = this;\n    var template = self.renderFactory.getTemplate(\"number\");\n\n    return $.fasttmpl(template, {\n      value: self.getDisplayValue(),\n      editable: self.properties.editable,\n      type: \"text\",\n      isDesign: self.getMode() !== \"execution\" });\n\n  },\n\n  /**\r\n      * Sets the value in the rendered control\r\n      * @param value\r\n      */\n  setDisplayValue: function setDisplayValue(value) {\n    var self = this;\n    // Call base\n    this.setValue(value, false);\n\n    // Set value in input\n    if (value !== null && value !== undefined) {\n      if (self.properties.editable) {\n        self.numericInput.val(bizagi.util.numberToFixedString(value));\n\n        self.value = self.properties.value = value;\n\n        // Formats the input\n        self.executeFormatCurrencyPlugin();\n      } else {\n        $(\".bz-input\", self.getControl()).val(bizagi.util.numberToFixedString(value)).formatCurrency(\n        {\n          symbol: self.properties.symbol,\n          positiveFormat: self.properties.positiveFormat,\n          negativeFormat: self.properties.negativeFormat,\n          decimalSymbol: self.properties.decimalSymbol,\n          digitGroupSymbol: self.properties.digitGroupSymbol,\n          groupDigits: self.properties.groupDigits,\n          roundToDecimalPlace: self.properties.numDecimals,\n          colorize: self.properties.colorize });\n\n\n      }\n    }\n  },\n\n  /**\r\n      * Retype function\r\n      */\n  attachRetypeDouble: function attachRetypeDouble() {\n    var self = this;\n    var element = self.element;\n\n    var input = $(\"input\", element);\n    if (!input || input.length === 0) return;\n\n    // Apply blur handler to check value\n    input.blur(function () {\n      var control = $(this);\n      var previousValue = self.previousValue;\n      var value = self.value;\n      var typeControl = self.parent.properties.type;\n\n      if (typeControl === \"grid\") {\n        if (previousValue != null && value !== previousValue) {\n          if ($(this).data(\"newValue\") !== undefined && control.val() !== $(this).data(\"newValue\"))\n          $(this).data().newValue = undefined;\n        }\n\n        self.retypeDouble(control);\n      } else {\n        self.retypeDouble(control);\n      }\n    });\n  },\n\n  /**\r\n      * Retype function\r\n      * @param control\r\n      */\n  retypeDouble: function retypeDouble(control) {\n    var self = this;\n    var currentValue = control.val();\n    var isVisible = $(control).attr(\"type\") !== \"hidden\" && $(control).css(\"display\") !== \"none\" &&\n    $(control).css(\"visibility\") !== \"hidden\";\n\n    if (isVisible && $(this).data(\"newValue\") == undefined) {\n\n      if (!control.data(\"oldValue\") || $(this).data(\"oldValue\") === \"\") {\n\n        // Check that there is something in the value or if a value has already been set\n        if (currentValue === \"\" || currentValue === control.attr(\"newValue\")) return;\n\n        self.createTooltip(control, currentValue, self.getResource(\"render-number-retype\"));\n\n      } else {\n        // Check that there is something in the value\n        if (currentValue === \"\") return;\n\n        if (currentValue !== control.data(\"oldValue\")) {\n          self.setValue(\"\");\n\n          self.createTooltip(control, \"\", self.getResource(\"render-text-retype-error\"));\n        } else {\n\n          control.data(\"newValue\", currentValue);\n          control.data(\"oldValue\", \"\");\n\n          // Destroy tooltips\n          control.tooltip(\"destroy\");\n        }\n      }\n    }\n  },\n\n  /**\r\n      * Context to apply styles\r\n      * @param context\r\n      * @returns {jQuery|HTMLElement}\r\n      */\n  getElementsToStylize: function getElementsToStylize($context) {\n    return $(\"input\", $context);\n  } });","/**\r\n *   Name: Bizagi Tablet Render Money Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the money render class to adjust to tablet devices\r\n */\n\n// Extends from render tablet base\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.money\", bizagi.rendering.number.prototype);\n// Extends itself\nbizagi.rendering.tablet.money.extend(\"bizagi.rendering.tablet.money\", bizagi.rendering.money.prototype);\n// Extends itself\nbizagi.rendering.tablet.money.extend(\"bizagi.rendering.tablet.money\", {}, {\n\n  /**\r\n                                                                             * Method to customize each render after processed in read-only mode\r\n                                                                             * @returns {*|jQuery}\r\n                                                                             */\n  renderReadOnly: function renderReadOnly() {\n    var self = this;\n    var template = self.renderFactory.getTemplate(\"number\");\n\n    return $.fasttmpl(template, {\n      value: self.getDisplayValue(),\n      editable: self.properties.editable,\n      type: \"text\",\n      isDesign: self.getMode() !== \"execution\" });\n\n  },\n\n  /**\r\n      * Sets the value in the rendered control\r\n      * @param {} value\r\n      * @returns {}\r\n      */\n  setDisplayValue: function setDisplayValue(value) {\n    var self = this;\n    // Call base\n    this.setValue(value, false);\n\n    // Set value in input\n    if (value !== null && value !== undefined) {\n      if (self.properties.editable) {\n        self.numericInput.val(bizagi.util.numberToFixedString(value));\n\n        self.value = self.properties.value = value;\n\n        // Formats the input\n        self.executeFormatCurrencyPlugin();\n      } else {\n        $(\".bz-input\", self.getControl()).val(bizagi.util.numberToFixedString(value)).formatCurrency(\n        {\n          symbol: self.properties.symbol,\n          positiveFormat: self.properties.positiveFormat,\n          negativeFormat: self.properties.negativeFormat,\n          decimalSymbol: self.properties.decimalSymbol,\n          digitGroupSymbol: self.properties.digitGroupSymbol,\n          groupDigits: self.properties.groupDigits,\n          roundToDecimalPlace: self.properties.numDecimals,\n          colorize: self.properties.colorize });\n\n\n      }\n    }\n  },\n\n  /**\r\n      * Context to apply styles\r\n      * @param context\r\n      * @returns {jQuery|HTMLElement}\r\n      */\n  getElementsToStylize: function getElementsToStylize($context) {\n    return $(\"input\", $context);\n  } });","/*\r\n *   Name: Bizagi Rendering Tablet numberScientificNotation\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define a base class to define the Scientific number notation\r\n */\n\n// Extends from render tablet base\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.numberScientificNotation\", bizagi.rendering.numberScientificNotation.prototype);\n// Extends itself\nbizagi.rendering.tablet.numberScientificNotation.extend(\"bizagi.rendering.tablet.numberScientificNotation\", {}, {\n\n  /*\r\n                                                                                                                   * Template method to implement in each device to customize each render after processed\r\n                                                                                                                   */\n  postRender: function postRender() {\n    var self = this;\n    var control = self.getControl();\n\n    self.inputDisplay = $('input', control).first();\n    self.numericInput = self.input = $('input', control).last();\n\n    // Add numeric plugin to avoid invalid keystrokes\n    self.numericInput.numericSN(self.properties.decimalSymbol);\n\n    // Attach Format Currency Plugin to format the input\n    self.attachFormatSientificNotation();\n\n  },\n\n  setDisplayValue: function setDisplayValue(value) {\n    var self = this;\n    var properties = self.properties;\n    var value = bizagi.util.scientificNotationFormat(value, properties.decimalSymbol, 38);\n    var displayValue = bizagi.util.scientificNotationFormat(value, properties.decimalSymbol, 20);\n\n\n    this._super(displayValue);\n\n    // Set value in input\n    if (value != null && properties.editable) {\n      self.numericInput.val(value);\n      self.inputDisplay.val(displayValue);\n    }\n\n  },\n\n  attachFormatSientificNotation: function attachFormatSientificNotation() {\n    var self = this;\n\n    self.inputDisplay.focus(function () {\n      $(this).val(self.getDisplayValue());\n    });\n\n    // Attach events\n    self.inputDisplay.blur(function () {\n      var form = self.getFormContainer();\n\n      if (typeof form.validationController == \"undefined\") {\n        var $canvas = form.getValidationsContainer();\n        form.validationController = new bizagi.command.controllers.validation(form, self.validations, $canvas);\n      }\n\n      var scientificNotationNumber = bizagi.util.scientificNotationFormat(self.inputDisplay.val(), self.properties.decimalSymbol, 38);\n      var scientificNotationNumberDisplay = bizagi.util.scientificNotationFormat(self.inputDisplay.val(), self.properties.decimalSymbol, 20);\n\n      self.numericInput.val(scientificNotationNumber);\n      self.inputDisplay.val(scientificNotationNumberDisplay);\n      // Updates internal value\n      self.setValue(scientificNotationNumber);\n    });\n  } });","/**\r\n *   Name: Bizagi Tablet Render Date Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the Date render class to adjust to tablet devices\r\n */\n\n// Extends from render tablet base\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.date\", bizagi.rendering.date.prototype);\n// Extends itself\nbizagi.rendering.tablet.date.extend(\"bizagi.rendering.tablet.date\", {\n  MAX_YEARS_DISPLAY: 100 },\n{\n  initializeData: function initializeData(data) {\n    // Call base\n    this._super(data);\n  },\n\n  /**\r\n      * Method to render non editable values\r\n      * @returns {*|jQuery}\r\n      */\n  renderReadOnly: function renderReadOnly() {\n    var self = this;\n    var properties = self.properties;\n    var dateFormat = properties.dateFormat;\n    var ud = bizagi.util.dateFormatter;\n\n    var format = dateFormat.substring(0, dateFormat.search(\"h|H\") != -1 ? dateFormat.search(\"h|H\") - 1 : dateFormat.length);\n    var value = ud.formatDate(ud.getDateFromFormat(self.getValue(), format, self.i18n), properties.fullFormat);\n    var data = {\n      value: self.getMode() !== \"execution\" ? properties.fullFormat : value,\n      editable: properties.editable };\n\n\n    var template = this.renderFactory.getTemplate(\"readonly\");\n    return $.fasttmpl(template, data);\n  },\n\n  /**\r\n      * Method to customize each render after processed in read-only mode\r\n      */\n  postRenderReadOnly: function postRenderReadOnly() {\n    this.input = $(\"input\", this.getDateControl());\n  },\n\n  configureHandlers: function configureHandlers() {\n    var self = this;\n    var dateControl = self.getControl();\n    var inputDate = $(\".bz-input-icon\", dateControl);\n\n    self.configureMobiscollCalendar();\n    self.calendarInstance = inputDate.mobiscroll(\"getInst\");\n\n    // Bind event on input date\n    inputDate.on(\"focus\", function (e) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      if (bizagi.util.isCordovaSupported() && bizagi.util.isAndroidDevice()) {\n        cordova.plugins.Keyboard.disableScroll(true);\n        cordova.plugins.Keyboard.close();\n      }\n      self.calendarInstance.show();\n    });\n\n    inputDate.attr(\"keyboard\", \"disable\");\n  },\n\n  /**\r\n      * Initializes the Mobiscroll Calendar with the indicated configuration\r\n      */\n  configureMobiscollCalendar: function configureMobiscollCalendar() {\n    var self = this;\n    var properties = self.properties;\n    var controlElements = properties.showTime ? [\"calendar\", \"time\"] : [\"calendar\"];\n    var dateControl = self.getControl();\n    var inputDate = $(\".bz-input-icon\", dateControl);\n    var orientation = self.getOrientation();\n\n    inputDate.mobiscroll().calendar({\n      mode: \"mixed\",\n      touchUi: true,\n      display: \"bottom\",\n      controls: controlElements,\n      min: self.getNormalizeDate(new Date(properties.minValue)),\n      max: self.getNormalizeDate(new Date(properties.maxValue)),\n      defaultValue: self.getDisplayValue(),\n      timeFormat: properties.timePickerFormat ? self.getTimeFormat(properties.timePickerFormat) : \"\",\n      dateFormat: properties.datePickerFormat,\n      dateWheels: 'dd/MM/yyyy',\n      select: \"single\",\n      selectType: \"Day\",\n      rtl: orientation && orientation === \"rtl\",\n      lang: bizagi.util.languages[BIZAGI_LANGUAGE] || bizagi.localization.language || \"en\",\n      buttons: self.properties.showTime ?\n      [\n      {\n        text: self.getResource(\"render-timeentry-now\"),\n        handler: function handler() {\n          self.setValueFromCalendarButtons(new Date(), function (v) {\n            self.getCalendarInstance().setVal(v, false, false, false);\n            self.getCalendarInstance().hide();\n          });\n        } },\n\n      {\n        text: self.getResource(\"render-plugin-search-users-select-link\"),\n        handler: \"set\" },\n\n      {\n        text: self.getResource(\"render-plugin-search-users-clear-button-name\"),\n        handler: function handler(e, inst) {\n          inst.clear();\n        } }] :\n\n\n      [\n      {\n        text: self.getResource(\"render-timeentry-now\"),\n        handler: function handler() {\n          self.setValueFromCalendarButtons(new Date(), function (v) {\n            self.getCalendarInstance().setVal(v, false, false, false);\n            self.getCalendarInstance().hide();\n          });\n        } },\n\n      {\n        text: self.getResource(\"render-plugin-search-users-clear-button-name\"),\n        handler: function handler(e, inst) {\n          inst.clear();\n        } }],\n\n\n      onSet: function onSet() {\n        self.onChangeHandler();\n      },\n      onDayChange: function onDayChange(obj) {\n        self.setValueFromCalendarButtons(obj.date, function (v) {\n          self.getCalendarInstance().setVal(v, false, false, false);\n          if (!self.properties.showTime) self.getCalendarInstance().hide();\n        });\n      },\n      onClear: function onClear() {\n        self.setValueFromCalendarButtons(null, function (v) {\n          self.getCalendarInstance().setVal(v, false, false, false);\n          self.getCalendarInstance().hide();\n        });\n      },\n      onBeforeShow: function onBeforeShow(event, inst) {\n        //self.triggerGlobalHandler(\"closeModalValidationMessage\", {});\n        self.triggerGlobalHandler(\"modalViewDidAppear\", {});\n\n        inst.option({\n          max: bizagi.util.dateFormatter.getDateFromInvariant(properties.maxValue, properties.showTime),\n          min: bizagi.util.dateFormatter.getDateFromInvariant(properties.minValue, properties.showTime) });\n\n\n        //TODO temporal fix in ios smartphone when a notification container is already displayed (QAF-6385 / MOB-171), review mobiscroll.min versions\n        if (bizagi.util.isiOSDevice()) {\n          $(\".ui-bizagi-notifications-container\").css(\"display\", \"none\");\n        }\n      },\n      onClose: function onClose(event, inst) {\n        // Your custom event handler goes here\n        self.triggerGlobalHandler(\"modalViewDidDisappear\", {});\n        $(\".mbsc-fr-scroll\").css(\"overflow-y\", \"auto\");\n      },\n      onShow: function onShow(event, inst) {\n        $(\".mbsc-fr-scroll\").css(\"overflow-y\", \"hidden\");\n      } });\n\n  },\n\n  /**\r\n      * Get the DOM Control\r\n      */\n  getDateControl: function getDateControl() {\n    return $(\".bz-input-icon\", this.getControl());\n  },\n\n  /**\r\n      * Set the control value when the control change\r\n      */\n  onChangeHandler: function onChangeHandler(isNow) {\n    var self = this;\n    var properties = self.properties;\n    var currentDate = self.getNormalizeDate(self.getCalendarInstance().getVal());\n    var currentDateString = \"\";\n    var ud = bizagi.util.dateFormatter;\n\n    if (!currentDate || currentDate == 0) {\n      return;\n    }\n    //Attemp set the value of the datepicker control. If not valid go back to the previous.\n    var previousValue = self.value;\n\n    //sets the value with the current format date, changed to use the same displayValue method\n    if (isNow == true) {\n      currentDate = self.getNormalizeDate(new Date());\n      currentDateString = ud.formatDate(currentDate, \"MM/dd/yyyy HH:mm:ss\");\n      self.value = currentDateString;\n    } else {\n      self.value = ud.formatInvariant(currentDate, properties.showTime);\n    }\n\n    if (isNow || currentDate) {\n      self.value = previousValue;\n      currentDateString = ud.formatDate(currentDate, \"MM/dd/yyyy HH:mm:ss\");\n      self.setValue(currentDateString);\n      self.setDisplayValue(currentDateString);\n    }\n  },\n\n  /**\r\n      * Apply the final format that will be showed on the input\r\n      */\n  getFullFormatedDate: function getFullFormatedDate(currentDate, currentTime) {\n    var fullDate = \"\";\n\n    if (currentDate.length > 0) {\n      fullDate = currentDate;\n    } else if (currentDate !== undefined) {\n      fullDate = bizagi.util.dateFormatter.formatISO(currentDate, false);\n    } else {\n      fullDate = bizagi.util.dateFormatter.formatISO(new Date(), false);\n    }\n\n    fullDate += currentTime;\n    var dateFromFormat = bizagi.util.dateFormatter.getDateFromFormat(fullDate, \"yyyy-MM-dd H:m\");\n\n    return bizagi.util.dateFormatter.formatDate(dateFromFormat !== 0 ? dateFromFormat : currentDate, \"yyyy-MM-dd H:mm:ss\");\n  },\n\n  /*\r\n      *  Checks if the date could be localized using site language\r\n      */\n  preprocessDateValue: function preprocessDateValue(date) {\n    return bizagi.util.dateFormatter.formatDate(date, this.properties.fullFormat);\n  },\n\n  /**\r\n      * Public method to determine if a value is valid or not\r\n      */\n  isValid: function isValid(invalidElements) {\n    var self = this;\n    var properties = self.properties;\n    var bValid = true;\n    var value = self.getValue();\n\n    if (value) {\n      if (bizagi.util.parseBoolean(properties.editable)) {\n        value = self.getNormalizeDate(bizagi.util.dateFormatter.getDateFromInvariant(value));\n\n        if (value != 0) {\n          // Check min value and max value\n          if (properties.minValue && typeof properties.minValue === \"string\") {\n            bValid = self.checkMinAndMaxValue(value, true, properties, invalidElements) ? false : bValid;\n          }\n\n          if (properties.maxValue && typeof properties.maxValue === \"string\") {\n            bValid = self.checkMinAndMaxValue(value, false, properties, invalidElements) ? false : bValid;\n          }\n        }\n      }\n    }\n\n    if (bizagi.util.parseBoolean(properties.editable)) {\n      // Check required\n      if (properties.required && !self.hasValue()) {\n        self.showMandatoryMessage(properties, invalidElements);\n      }\n    }\n\n    if (bValid) {\n      // Clear error message\n      self.setValidationMessage(\"\");\n    }\n\n    return bValid;\n  },\n\n  /**\r\n      * To validate the min and max values\r\n      * @param {} value\r\n      * @param {} isMinValue\r\n      * @param {} properties\r\n      * @param {} invalidElements\r\n      */\n  checkMinAndMaxValue: function checkMinAndMaxValue(value, isMinValue, properties, invalidElements) {\n    var vValue = this.getNormalizeDate(\n    bizagi.util.dateFormatter.getDateFromInvariant(isMinValue ? properties.minValue : properties.maxValue));\n\n\n    //In case the value from the minValue or maxValue are assigned from a Date control that does not have the option  \"showTime!\n    if (vValue == 0) {\n      var resultValue = \"\";\n      if (properties.timeFormat.indexOf(\":ss\") == -1) {\n        if (isMinValue) {\n          resultValue = properties.minValue + \":00\";\n        } else {\n          resultValue = properties.maxValue + \":00\";\n        }\n      }\n      vValue = this.getNormalizeDate(bizagi.util.dateFormatter.getDateFromFormat(resultValue, properties.fullFormat + \":ss\"));\n    }\n\n    if (isMinValue && value.getTime() < vValue.getTime() || !isMinValue && value.getTime() > vValue.getTime()) {\n      var formatedDate = bizagi.util.dateFormatter.formatDate(vValue, properties.fullFormat);\n      var message = \"\";\n\n      if (isMinValue) {\n        message = this.getResource(\"render-date-minimum-validation\").\n        replaceAll(\"#label#\", properties.displayName).\n        replaceAll(\"#minValue#\", formatedDate);\n      } else {\n        message = this.getResource(\"render-date-maximum-validation\").\n        replaceAll(\"#label#\", properties.displayName).\n        replaceAll(\"#maxValue#\", formatedDate);\n      }\n\n      invalidElements.push({ xpath: properties.xpath, message: message });\n      return true;\n    }\n    return false;\n  },\n\n  /**\r\n      * To show the mandatory values message\r\n      * */\n  showMandatoryMessage: function showMandatoryMessage(properties, invalidElements) {\n    var self = this;\n    var message = self.getResource(\"render-required-text\").replaceAll(\"#label#\", properties.displayName);\n\n    invalidElements.push({ xpath: properties.xpath, message: message });\n\n    return false;\n  },\n\n  setHour: function setHour(date) {\n    return date.replace(/\\s(\\d:)/, \" 0$1\");\n  },\n\n  /**\r\n      * Cleans the control fields as it requires\r\n      */\n  clearDisplayValue: function clearDisplayValue() {\n    var self = this;\n\n    self.date = undefined;\n    self.time = undefined;\n    self.timeS = undefined;\n    self.setValue(\"\");\n    self.setDisplayValue(\"\");\n  },\n\n  isValidMinMaxValue: function isValidMinMaxValue() {\n    var self = this;\n    var isValid = true;\n    var value = self.getValue();\n\n    if (value) {\n      value = bizagi.util.dateFormatter.getDateFromInvariant(value);\n\n      if (value !== 0) {\n        // Check min value and max value\n        if (self.properties.minValue && typeof self.properties.minValue === \"string\") isValid = self.validateMinAndMaxValue(value, true);\n\n        if (self.properties.maxValue && typeof self.properties.maxValue === \"string\") isValid = self.validateMinAndMaxValue(value, false);\n      }\n    }\n\n    return isValid;\n  },\n\n  validateMinAndMaxValue: function validateMinAndMaxValue(currentDate, isMinValue) {\n    var self = this;\n    var date = isMinValue ? self.properties.minValue : self.properties.maxValue;\n    var formattedDate = self.getNormalizeDate(bizagi.util.dateFormatter.getDateFromInvariant(date));\n\n    return !(\n    isMinValue && currentDate.getTime() < formattedDate.getTime() ||\n    !isMinValue && currentDate.getTime() > formattedDate.getTime());\n\n  },\n\n  getElementsToStylize: function getElementsToStylize($context) {\n    return $(\"input, .bz-input--readonly\", $context);\n  },\n\n  /**\r\n      * Gets Mobiscroll Calendar's instance\r\n      * @returns {Object} Mobiscroll's instance\r\n      */\n  getCalendarInstance: function getCalendarInstance() {\n    return this.calendarInstance || (this.calendarInstance = $(this.getDateControl()).mobiscroll(\"getInst\"));\n  },\n\n  setDisplayValue: function setDisplayValue(value) {\n    var self = this;\n    if (self.getMode() !== \"execution\") {\n      return;\n    }\n\n    var properties = self.properties;\n    var dateControl = self.getControl();\n    var input = $(\".bz-input-icon__input, .bz-input--readonly\", dateControl);\n    var ud = bizagi.util.dateFormatter;\n\n    if (bizagi.util.isNumeric(value) && value !== 0) {\n      value = ud.formatInvariant(new Date(value), properties.showTime);\n    }\n\n    if (value) {\n      if (typeof value == \"string\") {\n        value = self.getNormalizeDate(ud.getDateFromInvariant(value, properties.showTime));\n      } else {\n        value = self.getNormalizeDate(value);\n      }\n    }\n\n    // Assert that the date could be parsed\n    var ci = self.getCalendarInstance();\n    if (properties.editable && ci.setVal) ci.setVal(value);\n    self.setValue(ud.formatInvariant(value, true));\n    properties.displayValue = ud.formatDate(value, properties.fullFormat, self.i18n);\n\n    // Set display value\n    if (typeof properties.displayValue === \"string\" || typeof properties.displayValue === \"number\") {\n      input.prop(\"value\", properties.displayValue);\n      input.prop(\"title\", properties.displayValue);\n    }\n\n    if (!properties.editable) {\n      input.html(properties.displayValue);\n    }\n  },\n  /**\r\n      * Sets value to the control and execute a callback function\r\n      * @param {Date} date date to asign\r\n      * @param {Function} callBack function to execute\r\n      * @returns {}\r\n      */\n  setValueFromCalendarButtons: function setValueFromCalendarButtons(date, callBack) {\n    this._super(date);\n    if (typeof callBack === \"function\") callBack(date);\n    this.onChangeHandler();\n  } });","/**\r\n *   Name: Bizagi Tablet Render Yes-No Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the Yes-No render class to adjust to tablet devices\r\n */\n\n// Extends from render tablet base\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.yesno\", bizagi.rendering.yesno.prototype);\n// Extends itself\nbizagi.rendering.tablet.yesno.extend(\"bizagi.rendering.tablet.yesno\", {}, {\n\n  /**\r\n                                                                             * Method to customize each render after processed\r\n                                                                             */\n  postRender: function postRender() {\n    var $control = this.getControl();\n    this.radio = $control.find(\"input[type=radio]\");\n\n    if (this.properties.editable && (this.value == null || this.value === undefined) && this.properties.value != null) {\n      this.value = this.properties.value;\n    }\n  },\n\n  /**\r\n      * Method to render non editable values\r\n      * @returns {*|jQuery}\r\n      */\n  renderReadOnly: function renderReadOnly() {\n    var template = this.renderFactory.getTemplate(\"readonly\");\n\n    return $.fasttmpl(template, { value: this.getDisplayValue() });\n  },\n\n  /**\r\n      * Method to customize each render after processed in read-only mode\r\n      */\n  postRenderReadOnly: function postRenderReadOnly() {\n    var $control = this.getControl();\n    this.radio = $control.find(\"input\");\n\n    // Call base\n    this._super();\n  },\n\n\n  /**\r\n      * Sets the value in the rendered control\r\n      * @param {} value\r\n      */\n  setDisplayValue: function setDisplayValue(value) {\n    var $control = this.getControl();\n    var parsedValue = bizagi.util.parseBoolean(value);\n\n    this.setValue(parsedValue, false);\n    if (this.properties.editable) {\n      if (parsedValue) {\n        $control.find(\"input[value=true]\").prop('checked', true);\n        $control.find(\"input[value=false]\").prop('checked', false);\n      } else {\n        $control.find(\"input[value=false]\").prop('checked', true);\n        $control.find(\"input[value=true]\").prop('checked', false);\n      }\n    } else {\n      this.radio.val(this.getDisplayValue());\n    }\n  },\n\n  /**\r\n      * Method to customize the render's behaviour to add handlers\r\n      */\n  configureHandlers: function configureHandlers() {\n    var self = this;\n\n    self.radio.change(function () {\n      var $selected = $(this);\n      var value = $selected.prop('value');\n\n      if (self.value !== value) {\n        self.setValue(value);\n      }\n    });\n  },\n\n  /**\r\n      * Context to apply styles\r\n      * @param context\r\n      * @returns {jQuery|HTMLElement}\r\n      */\n  getElementsToStylize: function getElementsToStylize(context) {\n    return $(\"label.bz-radio__label\", context);\n  },\n\n  /**\r\n      * Cleans current data\r\n      */\n  cleanData: function cleanData() {\n    var value = null;\n    this.setValue(value, false);\n\n    this.clearDisplayValue();\n  },\n\n  /**\r\n      * Sets the value in the rendered control\r\n      */\n  clearDisplayValue: function clearDisplayValue() {\n    if (this.properties.editable) {\n      this.radio.prop('checked', false);\n    } else {\n      this.radio.val(this.getDisplayValue());\n    }\n  } });","/**\r\n *   Name: Bizagi Tablet Render Check\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the Check render class to adjust to tablet devices\r\n */\n\n// Extends from render tablet base\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.check\", bizagi.rendering.check.prototype);\n// Extends itself\nbizagi.rendering.tablet.check.extend(\"bizagi.rendering.tablet.check\", {}, {\n\n  /**\r\n                                                                             * Template method to implement in each device to customize each render after processed\r\n                                                                             */\n  postRender: function postRender() {\n    var $control = this.getControl();\n    this.check = $control.find(\"input\");\n\n    // Call base\n    this._super();\n  },\n\n  /**\r\n      * Method to render non editable values\r\n      * @returns {*|jQuery}\r\n      */\n  renderReadOnly: function renderReadOnly() {\n    var template = this.renderFactory.getTemplate(\"readonly\");\n\n    return $.fasttmpl(template, { value: this.getDisplayValue() });\n  },\n\n  /**\r\n      * Method to customize each render after processed in read-only mode\r\n      */\n  postRenderReadOnly: function postRenderReadOnly() {\n    var $control = this.getControl();\n    this.check = $control.find(\"input\");\n\n    // Call base\n    this._super();\n  },\n\n  /**\r\n      * Sets the value in the rendered control\r\n      * @param {} value\r\n      */\n  setDisplayValue: function setDisplayValue(value) {\n    // Render as simple value\n    var displayValue = bizagi.util.parseBoolean(value);\n\n    // Set internal value\n    this.setValue(displayValue, false);\n\n    if (this.properties.editable) {\n      if (displayValue) {\n        this.check.attr(\"checked\", \"checked\");\n      } else {\n        this.check.removeAttr(\"checked\");\n      }\n    } else {\n      this.check.val(this.getDisplayValue());\n    }\n  },\n\n  /**\r\n      * Method to customize the render's behaviour to add handlers\r\n      */\n  configureHandlers: function configureHandlers() {\n    var self = this;\n\n    this.check.on(\"click\", function (evt) {\n      var isCheck = $(this).is(':checked');\n\n      self.setValue(isCheck, true);\n\n    });\n  },\n\n  /**\r\n      * Cleans current data\r\n      */\n  cleanData: function cleanData() {\n    this.setDisplayValue(false);\n    this.setValue(false, false);\n  } });","/**\r\n *   Name: Bizagi Render CollectionNavigator\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for collection navigator renders\r\n */\n\n// Extends from render tablet base\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.collectionnavigator\", bizagi.rendering.collectionnavigator.prototype);\n// Extends itself\nbizagi.rendering.tablet.collectionnavigator.extend(\"bizagi.rendering.tablet.collectionnavigator\", {}, {\n\n  /**\r\n                                                                                                         * Method to customize each render after processed\r\n                                                                                                         */\n  postRender: function postRender() {\n    this.getControlFiller().addClass(\"bz-form-item__control--hidden\");\n  },\n\n  /**\r\n      * Method to customize each render after processed in read-only mode\r\n      */\n  postRenderReadOnly: function postRenderReadOnly() {\n    this.getControlFiller().addClass(\"bz-form-item__control--hidden\");\n  } });","/**\r\n *   Name: Bizagi Tablet Render upload Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the upload render class to adjust to tablet devices\r\n */\n\n// Extends from render tablet base\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.upload\", {\n  // Statics\n  BA_ACTION_PARAMETER_PREFIX: bizagi.render.services.service.BA_ACTION_PARAMETER_PREFIX,\n  BA_CONTEXT_PARAMETER_PREFIX: bizagi.render.services.service.BA_CONTEXT_PARAMETER_PREFIX,\n  BA_PAGE_CACHE: bizagi.render.services.service.BA_PAGE_CACHE },\nbizagi.rendering.upload.prototype);\n\n// Extends itself\nbizagi.rendering.tablet.upload.extend(\"bizagi.rendering.tablet.upload\", {\n  QUALITY_PICTURE: 50,\n  LIMIT: 1, // The maximum number of media in the device user can record in a single capture operation.\n  EXTENSIONSIMG: [\"image/jpeg\", \"jpeg\", \"image\", \"png\", \"jpg\", \"bmp\"],\n  EXTENSIONSFILE: [\"doc\", \"docx\", \"xls\", \"xlsx\", \"ppt\", \"pptx\", \"pdf\", \"zip\", \"rar\", \"txt\"],\n  EXTENSIONSVIDEO: [\"video/quicktime\", \"quicktime\", \"qt\", \"mov\"],\n  EXTENSIONSAUDIO: [\"audio/wav\", \"audio\", \"wav\", \"mp3\"] },\n{\n  /**\r\n   * Whether or not is a native device\r\n   * @var isNative boolean\r\n   */\n  isNative: false,\n\n  /**\r\n                    * Whether or not we are offline\r\n                    * @var isOfflineForm boolean\r\n                    */\n  isOfflineForm: false,\n\n  /**\r\n                         * Update or init the element data\r\n                         * @param {} data\r\n                         */\n  initializeData: function initializeData(data) {\n    // Call base\n    this._super(data);\n\n    // Check if offline forms is supported\n    this.isOfflineForm = bizagi.util.isOfflineForm({ context: this });\n    this.isNative = bizagi.util.isCordovaSupported();\n  },\n\n  /**\r\n      * Template method to implement in each children to customize each control\r\n      * @returns {}\r\n      */\n  renderControl: function renderControl() {\n    var template = this.renderFactory.getTemplate(\"upload\");\n\n    return this.renderItem(template, {});\n  },\n\n  /**\r\n      * Method to render non editable values\r\n      * @returns {*|jQuery}\r\n      */\n  renderReadOnly: function renderReadOnly() {\n    var template = this.renderFactory.getTemplate(\"upload-readonly\");\n    var data = {\n      noFiles: this.filesCount === 0 };\n\n\n    return this.renderItem(template, data);\n  },\n\n  /**\r\n      * Method to render items\r\n      * @returns {*|jQuery}\r\n      */\n  renderItem: function renderItem(template, data) {\n    var self = this;\n    var items = \"\";\n\n    // Render template\n    var html = $.fasttmpl(template, data);\n\n    // Render current children\n    for (var i = 0; i < self.filesCount; i++) {\n      var file = { id: self.files[i][0], fileName: self.files[i][1] };\n      var item = self.renderUploadItem(file);\n      items += item;\n    }\n\n    html = self.replaceFilesHtml(html, items);\n\n    return html;\n  },\n\n  /**\r\n      * Template method to implement in each device to customize each render after processed\r\n      */\n  postRender: function postRender() {\n    var $control = this.getControl();\n\n    this.$contentFile = $(\".bz-file-upload__container\", $control);\n    this.$inputFile = $(\".bz-file-upload__input\", $control);\n    this.$nativeFile = $(\".bz-file-upload__native\", $control);\n  },\n\n  /**\r\n      * Add action handlers\r\n      */\n  configureHandlers: function configureHandlers() {\n    this.checkFileExtensions();\n    this.attachEvents();\n  },\n\n  /**\r\n      * Method to customize the render's behaviour to add handlers when the control is readonly\r\n      */\n  configureHandlersReadOnly: function configureHandlersReadOnly() {\n    var self = this;\n    var $control = self.getControl();\n\n    // Handler to download a file\n    $(\"ul.bz-readonly-lists\", $control).on(\"click\", \".bz-file .bz-file-name\", function () {\n      var item = $(this).parent(\".bz-file\");\n      var file = item.data();\n\n      bizagi.loading.start();\n\n      $.when(bizagi.util.media.downloadFile(file.url, file.title)).fail(function (error) {\n        self.executeFormFailHandler(error);\n      }).always(function () {\n        bizagi.loading.stop();\n      });\n    });\n  },\n\n  /**\r\n      * Method to configure the actions with control\r\n      * @return {}\r\n      */\n  attachEvents: function attachEvents() {\n    var self = this;\n    var $control = self.getControl();\n    var counterChoseFiles = 0;\n    // Attach all events\n    this.$contentFile.off(\"click\").on(\"click\", function (evt) {\n      if (!self.isNative || counterChoseFiles > 0) {\n        self.chooseFile();\n      } else {\n        bizagi.showMessageBox(bizagi.localization.getResource(\"render-upload-error-files-extension-supported-app\", \"You can only add images or videos.\"), 'Userfield error');\n      }\n    });\n\n    // Handler to download the file\n    $(\"ul.bz-files\", $control).on(\"click\", \".bz-file .bz-file-name\", function () {\n      var item = $(this).parent(\".bz-file\");\n      var file = item.data();\n\n      bizagi.loading.start();\n\n      $.when(bizagi.util.media.downloadFile(file.url, file.title)).fail(function (error) {\n        self.executeFormFailHandler(error);\n      }).always(function () {\n        bizagi.loading.stop();\n      });\n    });\n\n    // Attach delete option & Removes a file from the upload control\n    $(\"ul.bz-files\", $control).on(\"click\", \".bz-file .bz-icn\", function () {\n      var item = $(this).parent(\".bz-file\");\n      var file = item.data();\n\n      self.removeFile(item, file.id);\n    });\n\n    if (self.isNative) {\n      // Upload files\n      var actions = self.getUploadChoices();\n      counterChoseFiles = actions.length;\n      this.$nativeFile.off(\"click\").actionSheet({\n        actions: actions,\n        actionClicked: function actionClicked(action) {\n          self.handlerUploadFile(action.guid);\n        },\n        appear: function appear(action) {\n          self.triggerGlobalHandler(\"closeModalValidationMessage\", {});\n          self.triggerGlobalHandler(\"modalViewDidAppear\", {});\n        },\n        cancelClicked: function cancelClicked(action) {\n          self.triggerGlobalHandler(\"modalViewDidDisappear\", {});\n        } });\n\n\n      // Resolution upload\n      $(\".bz-file-upload__resolution\", $control).off(\"click\").actionSheet({\n        actions: bizagi.util.media.getImageResolutionSizes(),\n        withoutCancel: true,\n        actionClicked: function actionClicked(action) {\n          bizagi.loading.start();\n\n          $.when(self.handlerResolutionUpload(action.guid)).always(function () {\n            bizagi.loading.stop();\n          });\n        },\n        appear: function appear(action) {\n          self.triggerGlobalHandler(\"closeModalValidationMessage\", {});\n          self.triggerGlobalHandler(\"modalViewDidAppear\", {});\n        },\n        cancelClicked: function cancelClicked(action) {\n          self.triggerGlobalHandler(\"modalViewDidDisappear\", {});\n        } });\n\n    } else {\n\n      // Attach event to web upload-control\n      this.$inputFile.off(\"change\").on(\"change\", function () {\n        self.addFile();\n        this.value = \"\";\n      });\n\n      // Just in case\n      this.$inputFile.off(\"click\").on(\"click\", function (evt) {\n        evt.stopPropagation();\n      });\n    }\n  },\n\n  /**\r\n      * Handler of upload files\r\n      * @param {} ordinal\r\n      * @returns {}\r\n      */\n  handlerUploadFile: function handlerUploadFile(ordinal) {\n    var self = this;\n    var actionSelected = ordinal || 0;\n\n    switch (actionSelected) {\n      case 2:\n\n        navigator.camera.getPicture(function (dataImage) {\n          self.dataImage = dataImage;\n          var extensions = self.Class.EXTENSIONSIMG.concat(self.Class.EXTENSIONSVIDEO);\n\n          bizagi.loading.start();\n\n          $.when(bizagi.util.media.checkMaxSize(dataImage, self.properties)).\n          then(function () {\n            //Gets the real properties for the file\n            return $.when(bizagi.util.media.getFileDataInfo(self.dataImage)).\n            then(function (fileData) {\n              self.fileProperties = fileData;\n\n              if (bizagi.util.media.checkFileTypes(fileData, self.properties, extensions)) {\n                // \"new Blob\" constructor is not supported in android version 4.2.2\n                var version = bizagi.util.getAndroidVersion();\n\n                if (!bizagi.util.isAndroid()) {\n                  return $.when(bizagi.util.media.modalResolutionUpload()).then(function (buttonIndex) {\n                    if (buttonIndex <= bizagi.util.media.getImageResolutionItems().length) {\n                      return self.handlerResolutionUpload(buttonIndex);\n                    }\n                  });\n\n                } else {\n                  // Force click to show actionSheet menu\n                  $(\".bz-file-upload__resolution\", self.getControl()).click();\n                }\n              }\n            });\n          }).always(function () {\n            bizagi.loading.stop();\n          });\n\n        }, self.onFail.bind(self), {\n          quality: self.Class.QUALITY_PICTURE,\n          sourceType: Camera.PictureSourceType.PHOTOLIBRARY,\n          correctOrientation: true });\n\n        break;\n      case 1:\n        navigator.camera.getPicture(function (dataImage) {\n          bizagi.loading.start();\n\n          $.when(bizagi.util.media.checkMaxSize(dataImage, self.properties)).then(function () {\n            return $.when(bizagi.util.media.getFileDataInfo(dataImage)).then(function (fileData) {\n              self.fileProperties = fileData;\n              return self.saveImage(dataImage);\n            });\n          }).always(function () {\n            bizagi.loading.stop();\n          });\n        },\n        self.onFail.bind(self), {\n          quality: self.Class.QUALITY_PICTURE,\n          sourceType: navigator.camera.PictureSourceType.CAMERA,\n          mediaType: navigator.camera.MediaType.PICTURE,\n          destinationType: Camera.DestinationType.FILE_URI,\n          correctOrientation: true,\n          targetWidth: 1280,\n          targetHeight: 960 });\n\n        break;\n      case 3:\n        navigator.device.capture.captureVideo(function (dataVideo) {\n          bizagi.loading.start();\n\n          $.when(bizagi.util.media.checkMaxSizeVideo(dataVideo, self.properties)).\n          then(function () {\n            return self.saveVideo(dataVideo);\n          }).always(function () {\n            bizagi.loading.stop();\n          });\n\n        }, self.onFail.bind(self), { limit: self.Class.LIMIT });\n        break;}\n\n  },\n\n  /**\r\n      * Handler of resolution upload\r\n      * @param {} ordinal\r\n      * @returns {}\r\n      */\n  handlerResolutionUpload: function handlerResolutionUpload(ordinal) {\n    var self = this;\n    var actionSelected = ordinal || 0;\n\n    // If original, save image normally, if not, reduce quality and size\n    if (actionSelected === bizagi.util.media.ResolutionType.ORIGINAL) {\n      return self.saveImage(self.dataImage);\n    } else {\n      var resolution = bizagi.util.media.getImageResolution(actionSelected);\n\n      return $.when(bizagi.util.media.transformImageSize(self.dataImage, resolution)).then(function (result) {\n        self.editedImageURL = result.localUrl;\n        self.properties.url = result.base64Image;\n\n        return self.saveImage(self.dataImage);\n      });\n    }\n  },\n\n  /**\r\n      * Send image using HTTP\r\n      * @param {} dataImage\r\n      */\n  saveImage: function saveImage(dataImage) {\n    var self = this;\n    var dataItem = \"\";\n\n    if (self.editedImageURL) {\n      dataItem = self.editedImageURL;\n    } else if (self.fileProperties) {\n      dataItem = self.fileProperties.url;\n    }\n\n    // Fix android 4.4 getting images from recent folder\n    var dataFile = bizagi.util.media.getImagePath(dataItem);\n    var data = {\n      dataFile: dataFile,\n      fileName: self.fileProperties.name,\n      mimeType: \"image/jpeg\" };\n\n\n    // Cleans variables related previous uploads\n    self.editedImageURL = null;\n    self.fileProperties = null;\n\n    return this.uploadFile(data);\n  },\n\n  /**\r\n      * Method to save a video file\r\n      * @param {} dataVideo\r\n      * @returns {}\r\n      */\n  saveVideo: function saveVideo(dataVideo) {\n    var data = {\n      dataFile: dataVideo[0].fullPath,\n      fileName: dataVideo[0].name,\n      mimeType: \"video/quicktime\" };\n\n\n    return this.uploadFile(data);\n  },\n\n  /**\r\n      * Method to save a file\r\n      * @param data\r\n      * @returns {*|void}\r\n      */\n  uploadFile: function uploadFile(data) {\n    var self = this;\n    var params = {};\n    var addParams = self.buildAddParams();\n    addParams.queueID = \"q_\" + bizagi.util.encodeXpath(self.getUploadXpath());\n\n    params.data = addParams;\n    params.options = new FileUploadOptions();\n    params.options.fileKey = \"file\";\n    params.options.fileName = data.fileName;\n    params.options.uploadKey = { key: addParams[\"h_xpath\"] };\n    params.options.addUrl = self.properties.addUrl;\n    params.dataFile = data.dataFile;\n\n    if (data.mimeType)\n    params.options.mimeType = data.mimeType;\n\n    return $.when(bizagi.util.media.uploadFile(params)).then(function (result) {\n      var response = JSON.parse(decodeURIComponent(result.response));\n\n      if (response.type === \"error\") {\n        bizagi.showMessageBox(response.message, response.errorType);\n      } else {\n        self.onUploadFileCompleted(response);\n      }\n    }).fail(function (error) {\n      self.executeFormFailHandler(error);\n    });\n  },\n\n  /**\r\n      * onFail\r\n      * @param {} error\r\n      */\n  onFail: function onFail(error) {\n    var messageError = bizagi.util.processFailMessage(error);\n\n    bizagi.loading.stop();\n\n    if (messageError && typeof messageError === \"string\" && messageError.indexOf(\"No Activity found to handle Intent\") !== -1) {\n      var hasResource = bizagi.util.isValidResource(\"render-upload-error-media-app\");\n      var message = hasResource ? bizagi.localization.getResource(\"render-upload-error-media-app\") : \"Your device does not have an app to execute this action.\";\n\n      bizagi.showMessageBox(message);\n    }\n  },\n\n  /**\r\n      * onUploadFileCompleted\r\n      * @param {} result\r\n      */\n  onUploadFileCompleted: function onUploadFileCompleted(result) {\n    var self = this;\n    var $wrapper = $(\".bz-files\", self.getControl());\n\n    if (result.id && result.fileName) {\n      // Locate it before the upload wrapper\n      var newItem = self.renderUploadItem(result);\n      $wrapper.append(newItem);\n\n      // Increment counter\n      self.filesCount = self.filesCount + 1;\n\n      // Copy the files value but not its reference\n      var files = self.files.slice();\n\n      //Add the new item to this temporal array\n      files.push([result.id, result.fileName]);\n\n      // Update value\n      self.setValue(files, true);\n\n      // Check maxFiles\n      self.checkMaxFiles();\n\n      self.editedImageURL = null;\n    } else {\n      bizagi.showMessageBox(result.message, \"Error\");\n    }\n  },\n\n  /**\r\n      * Check maximum number of files\r\n      */\n  checkMaxFiles: function checkMaxFiles() {\n    if (this.isMaxFilesReached()) {\n      $(this.$contentFile).addClass(\"bz-file-upload__container--hidden\");\n    } else {\n      $(this.$contentFile).removeClass(\"bz-file-upload__container--hidden\");\n    }\n  },\n\n  /**\r\n      * Check if the maximum number of files than can be uploaded has been reached\r\n      * @returns {}\r\n      */\n  isMaxFilesReached: function isMaxFilesReached() {\n    var maxFiles = this.properties.maxfiles;\n    var actualFiles = this.properties.value ? this.properties.value.length : 0;\n\n    return maxFiles !== 0 && this.filesCount >= maxFiles && actualFiles >= maxFiles;\n  },\n\n  /**\r\n      * Check allow extensions and define possible choices\r\n      * @returns {}\r\n      */\n  checkFileExtensions: function checkFileExtensions() {\n    var self = this;\n    var validExtensions = self.properties.validExtensions || \"\";\n\n    self.validOptions = { video: false, image: false, file: false };\n\n    // Preprocess the extensions string\n    validExtensions = validExtensions.replace(/\\s+/g, \"\").toLowerCase();\n\n    if (typeof validExtensions === \"undefined\" || validExtensions === \"\") {\n      self.validOptions = { video: true, image: true, file: true };\n    } else {\n      validExtensions = validExtensions.split(\";\");\n\n      if (validExtensions.length === 1 && validExtensions[0].indexOf(\"*.*\") !== -1) {\n        self.validOptions.video = true;\n        self.validOptions.image = true;\n      } else {\n        for (var i = 0, length = validExtensions.length; i < length; i++) {\n          validExtensions[i] = validExtensions[i].replace(\"*.\", \"\");\n\n          if (self.Class.EXTENSIONSFILE.toString().indexOf(validExtensions[i]) >= 0) {\n            self.validOptions.file = true;\n          } else if (self.Class.EXTENSIONSIMG.toString().indexOf(validExtensions[i]) >= 0) {\n            self.validOptions.image = true;\n          } else if (self.Class.EXTENSIONSVIDEO.toString().indexOf(validExtensions[i]) >= 0) {\n            self.validOptions.video = true;\n          }\n        }\n      }\n    }\n\n    // Media is not supported then upload control is disabled\n    if (!self.validOptions.file && !self.validOptions.image && !self.validOptions.video) {\n      $(self.$contentFile).addClass(\"bz-file-upload__container--hidden\");\n    }\n\n    // Limit of files is reached then upload control is disabled\n    if (self.isMaxFilesReached() || !self.isNative && (!bizagi.util.media.fileAPISupported() || self.isOfflineForm)) {\n      $(this.$contentFile).addClass(\"bz-file-upload__container--hidden\");\n    }\n  },\n\n  /**\r\n      * Build add params to send to the server\r\n      * @param {} dataFile\r\n      */\n  buildAddFileParams: function buildAddFileParams(dataFile) {\n    var self = this;\n    var prefix = self.Class.BA_CONTEXT_PARAMETER_PREFIX;\n\n    // Get form data for POSTing\n    var formData = new FormData();\n    var form = self.getFormContainer();\n\n    // Build add params to send to the server\n    formData.append(prefix + \"xpath\", self.getUploadXpath());\n    formData.append(prefix + \"idRender\", self.properties.id);\n    formData.append(prefix + \"xpathContext\", self.properties.xpathContext);\n    formData.append(prefix + self.Class.BA_PAGE_CACHE, self.properties.idPageCache);\n    formData.append(self.Class.BA_ACTION_PARAMETER_PREFIX + \"sessionId\", form.properties.sessionId);\n    formData.append(self.properties.xpath, dataFile);\n\n    if (self.properties.contexttype)\n    formData.append(prefix + \"contexttype\", self.properties.contexttype);\n\n    try {\n      if (typeof BIZAGI_SESSION_NAME !== \"undefined\") {\n        formData.append(BIZAGI_SESSION_NAME, form.properties.sessionId);\n      } else {\n        formData.append(\"JSESSIONID\", form.properties.sessionId);\n      }\n    } catch (e) {\n      formData.append(\"JSESSIONID\", form.properties.sessionId);\n    }\n\n    return formData;\n  },\n\n  /**\r\n      * Process an upload file into the server\r\n      * @param {} dataFile\r\n      * @returns {}\r\n      */\n  processUploadFile: function processUploadFile(dataFile) {\n    var data = {\n      url: this.properties.addUrl,\n      formData: this.buildAddFileParams(dataFile) };\n\n\n    return this.dataService.processUploadFile(data);\n  },\n\n  /*\r\n     * Cleans current value\r\n     */\n  cleanData: function cleanData() {\n    return this.clearDisplayValue();\n  },\n  /**\r\n      * Remove data of file upload\r\n      */\n  clearDisplayValue: function clearDisplayValue() {\n    var self = this;\n    var items = $(\".bz-files\", self.getControl());\n    var promises = [];\n\n    $(\".bz-file\", items).each(function (index, item) {\n      item = $(item);\n      var file = item.data();\n\n      promises.push($.when(self.removeFile(item, file.id)));\n    });\n\n    return $.when.apply($, promises).then(function () {\n      return self.getValue();\n    });\n  },\n\n  /**\r\n      * Add upload options\r\n      */\n  getUploadChoices: function getUploadChoices() {\n    var self = this;\n    var itemsUpload = [];\n\n    // Take photo, Choose photo\n    if (self.validOptions.image) {\n      itemsUpload.push({\n        \"guid\": 1,\n        \"displayName\": bizagi.localization.getResource(\"workportal-actionsheet-upload-take-photo\") });\n\n      itemsUpload.push({\n        \"guid\": 2,\n        \"displayName\": bizagi.localization.getResource(\"workportal-actionsheet-upload-choose-photo\") });\n\n    }\n\n    // Take video\n    if (self.validOptions.video) {\n      itemsUpload.push({\n        \"guid\": 3,\n        \"displayName\": bizagi.localization.getResource(\"workportal-actionsheet-upload-take-video\") });\n\n    }\n\n    // Stores the upload options        \n    return [].concat(itemsUpload);\n  },\n\n  /**\r\n      * Call the form failhandler with an specific error\r\n      * @param {} error\r\n      * @returns {}\r\n      */\n  executeFormFailHandler: function executeFormFailHandler(error) {\n    var errorResponse = \"\";\n\n    if (error && error.responseText) {\n      errorResponse = error.responseText;\n    } else {\n      errorResponse = bizagi.localization.getResource(\"workportal-general-error\");\n    }\n\n    this.getFormContainer().failHandler(errorResponse);\n  },\n\n  /**\r\n      * Method to add new file from native or hybrid environment\r\n      */\n  chooseFile: function chooseFile() {\n    if (this.isNative) {\n      this.$nativeFile.click();\n    } else if (bizagi.util.media.fileAPISupported() && !this.isOfflineForm) {\n      this.$inputFile.click();\n    }\n  },\n\n  /**\r\n      * Method to add new file\r\n      */\n  addFile: function addFile() {\n    var self = this;\n    var dataFile = this.$inputFile[0].files[0];\n    var extensions = self.Class.EXTENSIONSIMG.concat(self.Class.EXTENSIONSFILE, self.Class.EXTENSIONSVIDEO);\n\n    dataFile.fullPath = this.$inputFile[0].value;\n    bizagi.loading.start();\n\n    if (bizagi.util.media.checkMaxSizeFile(dataFile, self.properties) && bizagi.util.media.checkFileTypes(dataFile, self.properties, extensions)) {\n\n      $.when(self.processUploadFile(dataFile)).\n      then(function (result) {\n        self.onUploadFileCompleted(JSON.parse(decodeURIComponent(result)));\n      }).fail(function (error) {\n        self.executeFormFailHandler(error);\n      }).always(function () {\n        bizagi.loading.stop();\n      });\n    } else {\n      bizagi.loading.stop();\n    }\n  },\n\n  /**\r\n      * Method to remove item\r\n      * @param item\r\n      * @param id\r\n      */\n  removeFile: function removeFile(item, id) {\n    var self = this;\n\n    return $.when(self.deleteUploadItem(item, id)).done(function () {\n      // Remove item\n      item.hide();\n      item.remove();\n\n      // Update value\n      self.setValue(self.files, false);\n\n      // Check maxFiles\n      self.checkMaxFiles();\n\n      // Trigger change\n      self.triggerRenderChange();\n    });\n  },\n\n  /**\r\n      * Template for upload items\r\n      */\n  getTemplateItemName: function getTemplateItemName() {\n    return \"upload-item\";\n  },\n\n  getElementsToStylize: function getElementsToStylize(context) {\n    return $(\".bz-input-icon__input\", context);\n  } });","/**\r\n *   Name: Bizagi Tablet Render upload Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the label render class to adjust to tablets devices\r\n */\n\n// Extends itself\nbizagi.rendering.tablet.upload.extend(\"bizagi.rendering.tablet.upload.offline\", {\n  QUALITY_PICTURE: 50,\n  LIMIT: 1, // The maximum number of media in the device user can record in a single capture operation.\n  EXTENSIONSIMG: [\"image/jpeg\", \"jpeg\", \"image\", \"png\", \"jpg\", \"bmp\"],\n  EXTENSIONSFILE: [\"doc\", \"docx\", \"xls\", \"xlsx\", \"ppt\", \"pptx\", \"pdf\", \"zip\", \"rar\", \"txt\"],\n  EXTENSIONSVIDEO: [\"video/quicktime\", \"quicktime\", \"qt\", \"mov\"],\n  EXTENSIONSAUDIO: [\"audio/wav\", \"audio\", \"wav\", \"mp3\"] },\n{\n\n  /**\r\n   * Update or init the element data\r\n   * @param {} data\r\n   */\n  initializeData: function initializeData(data) {\n    // Call base\n    this._super(data);\n\n    var maxFileSizeOfProperty = Number(this.properties.maxSize) || 1048576;\n    var maxFileSizeOfUser = typeof BIZAGI_SETTINGS !== \"undefined\" && typeof BIZAGI_SETTINGS.UploadMaxFileSize !== \"undefined\" ? Number(BIZAGI_SETTINGS.UploadMaxFileSize) : 1048576;\n\n    this.properties.maxSize = maxFileSizeOfProperty < maxFileSizeOfUser ? maxFileSizeOfProperty : maxFileSizeOfUser;\n\n    this.updateFilesCount();\n    this.updateOriginalValue();\n  },\n\n  /*\r\n     *   Updates original value for some comparisons\r\n     */\n  updateOriginalValue: function updateOriginalValue() {\n    var self = this;\n    self.properties.originalValue = bizagi.clone(self.properties.value);\n  },\n\n  /**\r\n      * Method to render items\r\n      * @returns {*|jQuery}\r\n      */\n  renderItem: function renderItem(template, data) {\n    var self = this;\n    var items = \"\";\n\n    // Render template\n    var html = $.fasttmpl(template, data);\n\n    // Render current children\n    for (var i = 0; i < self.files.length; i++) {\n      var file = self.files[i];\n      if (file.status && file.status !== \"deleted\" && file.status !== \"new-deleted\") {\n        var item = self.renderUploadItem(file, i);\n        items += item;\n      }\n    }\n\n    html = self.replaceFilesHtml(html, items);\n    return html;\n  },\n\n  /**\r\n      * Method to customize the render's behaviour to add handlers when the control is readonly\r\n      */\n  configureHandlersReadOnly: function configureHandlersReadOnly() {\n    var self = this;\n    var $control = self.getControl();\n\n    // Handler to download the file\n    $(\"ul.bz-files\", $control).on(\"click\", \".bz-file .bz-file-name\", function () {\n      var item = $(this).parent(\".bz-file\");\n      self.openOfflineFile(item);\n    });\n  },\n\n  /**\r\n      * Method to configure the actions with control\r\n      * @return {}\r\n      */\n  attachEvents: function attachEvents() {\n    var self = this;\n    var $control = self.getControl();\n\n    // Attach all events\n    this.$contentFile.off(\"click\").on(\"click\", function (evt) {\n      if (self.isNative)\n      self.$nativeFile.click();else\n\n      self.$inputFile.click();\n      self.$inputFile.off(\"change\").on(\"change\", function () {\n        self.handlerWebUploadFile();\n      });\n    });\n\n    // Handler to download the file\n    $(\"ul.bz-files\", $control).on(\"click\", \".bz-file .bz-file-name\", function () {\n      var item = $(this).parent(\".bz-file\");\n      self.openOfflineFile(item);\n    });\n\n    // Attach delete option & Removes a file from the upload control\n    $(\"ul.bz-files\", $control).on(\"click\", \".bz-file .bz-icn\", function () {\n      var item = $(this).parent(\".bz-file\");\n      self.removeOfflineFile(item);\n    });\n\n    if (self.isNative) {\n      self.attachNativeEvents();\n    }\n  },\n\n  attachNativeEvents: function attachNativeEvents() {\n    var self = this;\n\n    // Upload files\n    this.$nativeFile.off(\"click\").actionSheet({\n      actions: self.getUploadChoices(),\n      actionClicked: function actionClicked(action) {\n        self.handlerUploadFile(action.guid);\n      },\n\n      appear: function appear() {\n        self.triggerGlobalHandler(\"closeModalValidationMessage\", {});\n        self.triggerGlobalHandler(\"modalViewDidAppear\", {});\n      },\n      cancelClicked: function cancelClicked() {\n        self.triggerGlobalHandler(\"modalViewDidDisappear\", {});\n      } });\n\n  },\n\n  //Only should be used for testing purposes\n  handlerWebUploadFile: function handlerWebUploadFile() {\n    var self = this;\n    var dataFile = self.$inputFile[0].files[0];\n\n    var fileId = bizagi.util.randomNumber();\n    var fileName, mimeType;\n    self.$inputFile[0].value = \"\";\n\n    if (bizagi.util.media.checkMaxSizeFile(dataFile, self.properties)) {\n      return self.dataService.getFileService().resolveBlobFromPath(dataFile).\n      then(function (blob) {\n        bizagi.loading.start();\n        mimeType = blob.type;\n        fileName = blob.name;\n        return self.saveOfflineFile(blob, fileId, mimeType);\n      }).then(function () {\n        self.onUploadOfflineFileCompleted(fileName, mimeType, fileId);\n      }).always(function () {\n        bizagi.loading.stop();\n      });\n    }\n  },\n\n  /**\r\n      * Handler of upload image\r\n      * @param {} ordinal\r\n      * @returns {}\r\n      */\n  handlerUploadFile: function handlerUploadFile(ordinal) {\n    var self = this;\n    var actionSelected = ordinal || 0;\n    switch (actionSelected) {\n      case 2: // Choose photo\n        self.choosePhoto();\n        break;\n      case 1: // Take photo\n        self.takePhoto();\n        break;\n      default:\n        console.log(\"The option is not supported!\");\n        break;}\n\n  },\n\n  choosePhoto: function choosePhoto() {\n    var self = this;\n    navigator.camera.getPicture(function (dataImage) {\n      self.dataImage = dataImage;\n      var extensions = self.Class.EXTENSIONSIMG.concat(self.Class.EXTENSIONSVIDEO);\n\n      bizagi.loading.start();\n\n      $.when(bizagi.util.media.checkMaxSize(dataImage, self.properties)).\n      then(function () {\n        //Gets the real properties for the file\n        return $.when(bizagi.util.media.getFileDataInfo(self.dataImage)).\n        then(function (fileData) {\n          self.fileProperties = fileData;\n          if (bizagi.util.media.checkFileTypes(fileData, self.properties, extensions)) {\n            return self.saveImage(self.dataImage);\n          }\n        });\n      }).always(function () {\n        bizagi.loading.stop();\n      });\n\n    }, self.onFail.bind(self), {\n      quality: self.Class.QUALITY_PICTURE,\n      sourceType: Camera.PictureSourceType.PHOTOLIBRARY,\n      correctOrientation: true });\n\n  },\n\n  takePhoto: function takePhoto() {\n    var self = this;\n    navigator.camera.getPicture(function (dataImage) {\n      bizagi.loading.start();\n\n      $.when(bizagi.util.media.checkMaxSize(dataImage, self.properties)).then(function () {\n        return $.when(bizagi.util.media.getFileDataInfo(dataImage)).then(function (fileData) {\n          self.fileProperties = fileData;\n          return self.saveImage(dataImage);\n        });\n      }).always(function () {\n        bizagi.loading.stop();\n      });\n    },\n    self.onFail.bind(self), {\n      quality: self.Class.QUALITY_PICTURE,\n      sourceType: navigator.camera.PictureSourceType.CAMERA,\n      mediaType: navigator.camera.MediaType.PICTURE,\n      destinationType: Camera.DestinationType.FILE_URI,\n      correctOrientation: true,\n      targetWidth: 1280,\n      targetHeight: 960 });\n\n  },\n\n  /**\r\n      * Add the interactions to the upload control items\r\n      * @return {}\r\n      */\n  addInteractions: function addInteractions() {\n    var self = this;\n    var control = self.getControl();\n\n    // Attach delete option & Removes a file from the upload control\n    $(\"ul.bz-files\", control).on(\"click\", \".bz-file .bz-file__delete\", function () {\n      var item = $(this).parent(\".bz-file\");\n      self.removeOfflineFile(item);\n    });\n  },\n\n  /**\r\n      * Collect Data\r\n      * @param {} renderValues\r\n      * @returns {}\r\n      */\n  collectData: function collectData(renderValues) {\n    var self = this;\n\n\n    if (bizagi.util.identicalObjects(self.properties.originalValue, self.files)) {\n      return;\n    }\n    renderValues[self.properties.xpath] = self.files;\n\n  },\n\n  /**\r\n      * Send image using HTTP\r\n      * @param {} dataImage\r\n      */\n  saveImage: function saveImage(dataImage) {\n    var self = this;\n    bizagi.loading.start();\n\n    var fileId = bizagi.util.randomNumber();\n    var fileName = self.fileProperties.name;\n    var mimeType;\n\n    //TODO: SWAT Check if the file already exists\n    $.when(self.dataService.getFileService().resolveBlobFromPath(dataImage, fileName)).\n    always(function () {\n      bizagi.loading.stop();\n    }).\n    then(function (blob) {\n      mimeType = blob.type;\n      fileName = blob.name;\n      return self.saveOfflineFile(blob, fileId, mimeType);\n    }).then(function (saveResponse) {\n      self.onUploadOfflineFileCompleted(fileName, mimeType, fileId);\n    });\n    self.$inputFile[0].value = \"\";\n  },\n\n  /**\r\n      * Check allow extensions and define possible choices\r\n      * Only support to image in offline capability\r\n      * @returns {}\r\n      */\n  checkFileExtensions: function checkFileExtensions() {\n    var self = this;\n    var validExtensions = self.properties.validExtensions || \"\";\n\n    self.validOptions = { video: false, image: false, file: false };\n\n    // Preprocess the extensions string\n    validExtensions = validExtensions.replace(/\\s+/g, \"\").toLowerCase();\n\n    if (typeof validExtensions === \"undefined\" || validExtensions === \"\") {\n      self.validOptions.image = true;\n    } else {\n      validExtensions = validExtensions.split(\";\");\n\n      if (validExtensions.length === 1 && validExtensions[0].indexOf(\"*.*\") !== -1) {\n        self.validOptions.image = true;\n      } else {\n        for (var i = 0, length = validExtensions.length; i < length; i++) {\n          validExtensions[i] = validExtensions[i].replace(\"*.\", \"\");\n\n          if (self.Class.EXTENSIONSIMG.toString().indexOf(validExtensions[i]) >= 0) {\n            self.validOptions.image = true;\n          }\n        }\n      }\n    }\n\n    // Media is not supported then upload control is disabled\n    if (!self.validOptions.image) {\n      $(self.$contentFile).addClass(\"bz-file-upload__container--hidden\");\n    }\n\n    // Limit of files is reached then upload control is disabled\n    if (self.isMaxFilesReached() || !bizagi.util.media.fileAPISupported()) {\n      $(this.$contentFile).addClass(\"bz-file-upload__container--hidden\");\n    }\n  },\n\n  /**\r\n      * onUploadOfflineFileCompleted\r\n      * @param {} result\r\n      */\n  onUploadOfflineFileCompleted: function onUploadOfflineFileCompleted(fileName, mimeType, fileId) {\n    var self = this;\n    var $wrapper = $(\".bz-files\", self.getControl());\n\n    var fileUploaded = {\n      id: fileId,\n      fileName: fileName,\n      mimeType: mimeType,\n      status: \"new\" };\n\n\n    // Locate it before the upload wrapper\n    var newItem = self.renderUploadItem(fileUploaded, self.files.length);\n    $wrapper.append(newItem);\n\n    // Increment counter\n    self.filesCount = self.filesCount + 1;\n\n    // Copy the files value but not its reference\n    var files = self.files.slice();\n\n    //Add the new item to this temporal array\n    files.push(fileUploaded);\n\n    // Update value\n    self.setValue(files, false);\n\n    // Check maxFiles\n    self.checkMaxFiles();\n\n    // Trigger change\n    self.triggerRenderChange();\n  },\n\n  /**\r\n      * Renders a single upload item\r\n      * @param file\r\n      * @returns {*|jQuery}\r\n      */\n  renderUploadItem: function renderUploadItem(file, index) {\n    var self = this;\n    var itemTemplate = self.getTemplateItemName();\n    var template = self.renderFactory.getTemplate(itemTemplate);\n\n    var html = $.fasttmpl(template, {\n      url: \"javascript:void(0);\",\n      id: file.id,\n      allowDelete: self.properties.allowDelete || false,\n      filename: file.fileName,\n      index: index });\n\n\n    return html;\n  },\n\n  /**\r\n      * This render cannot be sent because it is full ajax\r\n      * @returns {}\r\n      */\n  canBeSent: function canBeSent() {\n    return true;\n  },\n\n  /**\r\n      * Fail action\r\n      * @param {} evt\r\n      * @returns {}\r\n      */\n  failReadFile: function failReadFile(evt) {\n    try {\n      bizagi.log(\"Error code: \" + evt.target.error.code);\n    } catch (e) {\n    }\n  },\n\n  /**\r\n      * Fail action\r\n      * @param {} error\r\n      * @returns {}\r\n      */\n  onFail: function onFail(error) {\n    this._super(error);\n  },\n\n  /**\r\n      * Method to remove item\r\n      * @param item\r\n      * @param id\r\n      */\n  removeOfflineFile: function removeOfflineFile(item) {\n    var self = this;\n    var file = item.data();\n    var fileIndex = file.index;\n\n    // Mark the file as deleted\n    var fileValue = self.files[fileIndex];\n    if (!fileValue) {\n      //Nothing to do\n      return;\n    }\n    if (fileValue.status !== \"new\") {\n      fileValue.status = \"deleted\";\n    } else {\n      fileValue.status = \"new-deleted\";\n    }\n\n    // Remove item\n    item.hide();\n    item.remove();\n\n    // Update value\n    self.setValue(self.files, false);\n\n    // Check maxFiles\n    self.checkMaxFiles();\n\n    // Trigger change\n    self.triggerRenderChange();\n  },\n\n  /**\r\n      * Update the filesCount attribute based on the status (new|deleted) of each file\r\n      */\n  updateFilesCount: function updateFilesCount() {\n    var self = this;\n    var files = this.properties.value || [];\n\n    for (var i = 0; i < files.length; i++) {\n      var status = files[i].status;\n      if (status && status.includes(\"deleted\")) {\n        self.filesCount = self.filesCount - 1;\n      }\n    }\n  },\n\n  /**\r\n      * Sets the internal value\r\n      * @param value\r\n      * @param triggerEvents\r\n      */\n  setValue: function setValue(value, triggerEvents) {\n    var self = this;\n    self._super(value, triggerEvents);\n    self.updateFilesCount();\n    if (self.filesCount === 0) {\n      self.properties.method = \"delete\";\n    }\n  },\n\n  /**\r\n      * Check if the maximum number of files than can be uploaded has been reached\r\n      * @returns {}\r\n      */\n  isMaxFilesReached: function isMaxFilesReached() {\n    var maxFiles = this.properties.maxfiles;\n    return maxFiles !== 0 && this.filesCount >= maxFiles;\n  },\n\n  openOfflineFile: function openOfflineFile(item) {\n    var self = this;\n    var file = item.data();\n    var dataIndex = file.index;\n    var selectedValue = typeof dataIndex == \"number\" ? self.properties.value[dataIndex] : null;\n    if (selectedValue) {\n      var formParams = self.getFormParams();\n      var getFileParams = {\n        idCase: formParams.idCase,\n        idWorkitem: formParams.idWorkitem,\n        id: (self.properties.xpathContext ? self.properties.xpathContext + \".\" : \"\") +\n        self.properties.xpath + '.' + selectedValue.id,\n        offlineType: formParams.offlineType };\n\n      bizagi.loading.start();\n      $.when(self.dataService.getOfflineFile(getFileParams, \"blob\", selectedValue.mimeType)).\n      then(function (binaryFile) {\n        if (binaryFile != undefined) {\n          var fileName = file.title;\n          var url = fileName || \"downloaded.jpg\";\n          if (bizagi.util.isAndroidDevice()) {\n            bizagi.util.media.handleBinaryFile(binaryFile, fileName, url);\n          } else {\n            bizagi.util.media.handleBinaryFile(binaryFile, fileName);\n          }\n        }\n      }).\n      fail(function (error) {\n        console.log(\"Error opening offline file\", error);\n      }).\n      always(function () {\n        bizagi.loading.stop();\n      });\n    }\n  },\n\n  saveOfflineFile: function saveOfflineFile(blobFile, fileId, mimeType) {\n    var self = this;\n    var formParams = self.getFormParams();\n    var parameters = {\n      idCase: formParams.idCase,\n      idWorkitem: formParams.idWorkitem,\n      id: (self.properties.xpathContext ? self.properties.xpathContext + \".\" : \"\") +\n      self.properties.xpath + '.' + fileId,\n      operationType: \"edition\",\n      offlineType: formParams.offlineType };\n\n    return self.dataService.saveOfflineFile(parameters, blobFile, mimeType);\n  } });","/**\r\n *   Name: Bizagi Tablet Render Grouped Grid Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the Grouped Grid render class to adjust to tablet devices\r\n */\n\n// Extends from Grid Tablet base\nbizagi.rendering.tablet.grid.extend(\"bizagi.rendering.tablet.grid.grouped\", {}, {\n\n  /**\r\n                                                                                   * Method to customize each render after processed\r\n                                                                                   */\n  postRender: function postRender() {\n    this.getControlFiller().addClass(\"bz-form-item__control--hidden\");\n  },\n\n  /**\r\n      * Method to customize each render after processed in read-only mode\r\n      */\n  postRenderReadOnly: function postRenderReadOnly() {\n    this.getControlFiller().addClass(\"bz-form-item__control--hidden\");\n  } });","/**\r\n *   Name: Bizagi Tablet Render Letter Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the letter render class to adjust to tablet devices\r\n */\n\n// Extends from render tablet base\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.letter\", bizagi.rendering.letter.prototype);\n// Extends itself\nbizagi.rendering.tablet.label.extend(\"bizagi.rendering.tablet.letter\", {}, {});","/**\r\n *   Name: Bizagi Tablet Render Button Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the button render class to adjust to tablet devices\r\n */\n\n// Extends from render tablet base\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.button\", bizagi.rendering.button.prototype);\n// Extends itself\nbizagi.rendering.tablet.button.extend(\"bizagi.rendering.tablet.button\", {}, {\n\n  /**\r\n                                                                               * Whether or not we are offline 'Just a shortcut\r\n                                                                               * @var isOfflineForm boolean\r\n                                                                               */\n  isOfflineForm: false,\n\n  /**\r\n                         * Update or init the element data\r\n                         * @param {} data\r\n                         */\n  initializeData: function initializeData(data) {\n    // Call base\n    this._super(data);\n\n    // Check if the form is offline\n    this.isOfflineForm = bizagi.util.isOfflineForm({ context: this });\n  },\n\n  /**\r\n      * Template method to implement in each device to customize the render's behaviour to add handlers\r\n      * @returns {}\r\n      */\n  configureHandlers: function configureHandlers() {\n    var self = this;\n\n    $(\":button\", self.getControl()).on(\"click\", function () {\n      self.processButton();\n    });\n  },\n\n  /**\r\n      * In offline forms the button only works for actions and validations\r\n      * @returns {boolean|*}\r\n      */\n  executeButton: function executeButton() {\n    if (!this.isOfflineForm) {\n      return this._super();\n    } else {\n      // returns false to prevent form refreshing\n      return false;\n    }\n  },\n\n  /**\r\n      * Process the button actions workflow\r\n      * @returns {}\r\n      */\n  processButton: function processButton() {\n    var self = this;\n\n    if (self.properties.editable) {\n\n      // Check if action need conformation\n      if (self.properties.needsUserConfirmation) {\n        $.when(bizagi.showConfirmationBox(self.properties.userConfirmationMessage, \"Bizagi\", \"warning\")).\n        done(function () {\n          if (!self.properties.preventDefault)\n          self.runButtonAction();\n          // Trigger change\n          self.triggerRenderChange({ pressed: true });\n        });\n      } else {\n        if (!self.properties.preventDefault)\n        self.runButtonAction();\n\n        // Trigger change\n        self.triggerRenderChange({ pressed: true });\n      }\n    }\n  },\n\n  getElementsToStylize: function getElementsToStylize($context) {\n    return $(\"button\", $context);\n  },\n\n  /**\r\n      * Customizes the font weight\r\n      * @param {} $label\r\n      * @param {} bold\r\n      * @returns {}\r\n      */\n  changeFontBold: function changeFontBold($label, bold) {\n    if (bizagi.util.parseBoolean(bold)) {\n      $label.css(\"font-weight\", \"bold\");\n    }\n\n    return this;\n  } });","/**\r\n *   Name: Bizagi Tablet Render fileprint Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the fileprint render class to adjust to tablet devices\r\n */\n\n// Extends from render tablet base\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.fileprint\", bizagi.rendering.fileprint.prototype);\n// Extends itself\nbizagi.rendering.tablet.fileprint.extend(\"bizagi.rendering.tablet.fileprint\", {}, {\n\n  /**\r\n                                                                                     * Method to customize each render after processed\r\n                                                                                     */\n  postRender: function postRender() {\n    this.getControl().parent().hide();\n  } });","/**\r\n *   Name: Bizagi Tablet Render Link Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the link render class to adjust to tablet devices\r\n */\n\n// Extends from render tablet base\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.link\", bizagi.rendering.link.prototype);\n// Extends itself\nbizagi.rendering.tablet.link.extend(\"bizagi.rendering.tablet.link\", {}, {\n\n  /**\r\n                                                                           * Template method to implement in each device to customize each render after processed\r\n                                                                           * @returns {}\r\n                                                                           */\n  postRender: function postRender() {\n    var $control = this.getControl();\n    this.link = $control.find(\".bz-link\");\n\n    this._super();\n\n    this.preventDefaultForAnchorTag();\n  },\n\n  /**\r\n      * Method to customize each render after processed in read-only mode\r\n      */\n  postRenderReadOnly: function postRenderReadOnly() {\n    var $control = this.getControl();\n    this.link = $control.find(\".bz-link\");\n\n    this._super();\n  },\n\n  /**\r\n      * Sets the value in the rendered control\r\n      * @param {} value\r\n      * @returns {}\r\n      */\n  setDisplayValue: function setDisplayValue(value) {\n    // Set internal value\n    this.setValue(value, false);\n\n    if (this.isValidValue()) {\n      // Get the decoded version of the URL\n      value = getFullyDecodedURI($.trim(value));\n\n      this.link.attr(\"href\", value);\n    }\n  },\n\n  /**\r\n      * Template method to implement in each device to customize the render's behaviour to add handlers\r\n      * @returns {}\r\n      */\n  configureHandlers: function configureHandlers() {\n    this.attachEvents();\n  },\n\n  /**\r\n      * Template method to implement in each device to customize the render's behaviour\r\n      * to add handlers when the control is readonly\r\n      */\n  configureHandlersReadOnly: function configureHandlersReadOnly() {\n    this.attachEvents();\n  },\n\n  /**\r\n      * Configure event handlers\r\n      */\n  attachEvents: function attachEvents() {\n    var self = this;\n\n    if (self.isValidValue()) {\n      self.link.on(\"click\", function (evt) {\n        evt.preventDefault();\n        evt.stopPropagation();\n\n        var linkEncode = encodeURI(this.getAttribute(\"href\"));\n\n        self.linkSolver(linkEncode, self.properties.linktarget);\n      });\n    } else {\n      self.link && self.link.addClass(\"bz-link--disabled\");\n    }\n  },\n\n  /**\r\n      * Checks if the value is a valid url (http/https valid urls)\r\n      * TODO: Check if this validation is necessary\r\n      * @param {} value\r\n      * @returns {}\r\n      */\n  isValidValue: function isValidValue() {\n    if (!this.hasValue()) return false;\n    var value = $.trim(this.getValue() || \"\");\n\n    return value.toLowerCase().match(/^(http|https):\\/\\//) !== null || false;\n  },\n\n  /**\r\n      * Executes the link\r\n      * @param {} linkEncode\r\n      * @param {} linkTarget\r\n      * @returns {}\r\n      */\n  linkSolver: function linkSolver(linkEncode, linkTarget) {\n    if (linkTarget === \"newwindow\" || bizagi.util.isCordovaSupported()) {\n      window.open(linkEncode, \"_system\", \"location=yes\");\n    } else {\n      window.open(linkEncode, \"_system\");\n    }\n  },\n\n  processLayout: function processLayout(isLabelFormat) {\n    if (!isLabelFormat) {\n      this._super(isLabelFormat, this.properties.textFormat);\n    } else {\n      if (typeof this.properties.textFormat.background !== \"undefined\") {\n        this._super(isLabelFormat, { background: this.properties.textFormat.background });\n      }\n    }\n  },\n\n  getElementsToStylize: function getElementsToStylize($context) {\n    return $(\".bz-link\", $context);\n  } });","/**\r\n *   Name: Bizagi Tablet Render Form Link Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the link render class to adjust to tablet devices\r\n */\n\n// Extends from render tablet base\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.formLink\", {\n  BA_ACTION_PARAMETER_PREFIX: \"p_\",\n  BA_CONTEXT_PARAMETER_PREFIX: \"h_\",\n  BA_PAGE_CACHE: \"pageCacheId\" },\nbizagi.rendering.formLink.prototype);\n// Extends itself\nbizagi.rendering.tablet.formLink.extend(\"bizagi.rendering.tablet.formLink\", {}, {\n\n  /**\r\n                                                                                   * Template method to implement in each device to customize the render's behaviour to add handlers\r\n                                                                                   * @returns {}\r\n                                                                                   */\n  configureHandlers: function configureHandlers() {\n    this.attachEvents();\n  },\n\n  /**\r\n      * Template method to implement in each device to customize the render's behaviour\r\n      * to add handlers when the control is readonly\r\n      */\n  configureHandlersReadOnly: function configureHandlersReadOnly() {\n    this.attachEvents();\n  },\n\n  /**\r\n      * Open link display from inside a dialog\r\n      */\n  openLink: function openLink() {\n    var self = this;\n\n    // Send edit request\n    $.when(self.submitEditRequest()).\n    done(function () {\n      bizagi.loading.start();\n\n      $.when(self.paintFormLink()).done(function () {\n        bizagi.loading.stop();\n\n      }).fail(function () {\n        // Executes Rollback action paintForm\n        bizagi.loading.start();\n        self.rollbackForm();\n      }).always(function () {\n        bizagi.loading.stop();\n      });\n\n    }).always(function () {\n      bizagi.loading.stop();\n    });\n  },\n\n  openLinkRule: function openLinkRule(property) {\n    var self = this;\n    var def = new $.Deferred();\n\n    bizagi.loading.start();\n\n    self.getPropertyValue(property, {}).\n    done(function (dataRuleResp) {\n\n      dataRuleResp = dataRuleResp || {};\n\n      if (typeof dataRuleResp.messages !== \"undefined\" && dataRuleResp.messages !== null) {\n        var message = dataRuleResp.messages[0];\n        var form = self.getFormContainer();\n\n        form.validationController.showErrorMessage(message);\n        def.reject();\n      } else {\n        if (property === \"entryrule\") {\n          self.openLink();\n        }\n      }\n\n      def.resolve();\n    }).fail(function () {\n      def.reject();\n    }).always(function () {\n      bizagi.loading.stop();\n    });\n\n    return def.promise();\n  },\n\n  paintFormLink: function paintFormLink() {\n    var self = this;\n    var properties = self.properties;\n    var form = self.getFormContainer();\n    var formParams = self.getFormParams();\n\n    var deferred = $.Deferred();\n\n    // Instantiate slide form object\n    var slideView = new bizagi.rendering.tablet.slide.view(self.dataService, self.renderFactory, {\n      title: self.properties.displayName || \"\",\n      container: form.container,\n      navigation: self.getParams().navigation,\n      showSaveButton: properties.editable,\n      orientation: properties.orientation || \"ltr\",\n      onSave: function onSave(data) {\n        // When the data is saved then\n        return self.actionSave(data).then(function (result) {\n          //Process the result\n          return self.submitForm(result).\n          done(function () {\n            deferred.resolve(result);\n          }).fail(function () {\n            deferred.reject();\n          });\n        }).fail(function (result) {\n          deferred.reject(result);\n        });\n      },\n      goBack: function goBack() {\n        self.rollbackForm();\n      } });\n\n\n    slideView.render({\n      idRender: properties.id,\n      xpathContext: properties.xpathContext,\n      idPageCache: properties.idPageCache,\n      recordXPath: self.getFormLinkXpath(),\n      requestedForm: \"linkform\",\n      editable: properties.editable,\n      formParams: formParams,\n      url: properties.editPage }).\n    fail(function () {\n      // Sends a rollback request to delete checkpoints\n      deferred.reject();\n    });\n\n    return deferred.promise();\n  },\n\n  getPropertyValue: function getPropertyValue(propertyName, params) {\n    var self = this;\n    var properties = self.properties;\n    var defer = new $.Deferred();\n\n    self.dataService.multiaction().getPropertyData({\n      url: properties.dataUrl,\n      xpath: properties.xpath,\n      idRender: properties.id,\n      xpathContext: properties.xpathContext,\n      idPageCache: properties.idPageCache,\n      property: propertyName,\n      extra: params,\n      dataType: params ? params.dataType : null }).\n    done(function (data) {\n      if (data.type === \"error\") {\n        // Workflow engine error, we gotta show it with error\n        var form = self.getFormContainer();\n\n        form.validationController.showErrorMessage(data.message);\n        defer.reject(data);\n      } else {\n        defer.resolve(data);\n      }\n    }).fail(function (jqXHR, textStatus, errorThrown) {\n      // Add error messages\n      var form = self.getFormContainer();\n\n      form.validationController.showErrorMessage(jqXHR.message);\n\n      defer.reject(jqXHR, textStatus, errorThrown);\n    });\n\n    return defer.promise();\n  },\n\n  actionSave: function actionSave(data) {\n    var self = this;\n    var deferred = $.Deferred();\n\n    $.when(self.submitSaveRequest(data)).done(function (result) {\n      try {\n        if (result.type === \"validationMessages\") {\n          // Add validation messages\n          self.form.addValidationMessage(result.messages);\n        } else if (result.type === \"error\") {\n          // Add error messages\n          deferred.reject(result);\n        }\n\n        deferred.resolve(result);\n      } catch (ex) {\n        deferred.reject({ noAction: true });\n      }\n    }).fail(function (data) {\n      deferred.reject(data);\n    });\n\n    return deferred.promise();\n  },\n\n  submitSaveRequest: function submitSaveRequest(data) {\n    var self = this;\n    var properties = self.properties;\n\n    // Don't send request when the link is not editable\n    if (properties.editable === false && !properties.value) {\n      return null;\n    }\n\n    var xpath = self.getFormLinkXpath();\n    var xpathContext = xpath;\n\n    if (properties.xpathContext !== undefined && properties.xpathContext !== \"\") {\n      xpathContext = xpath ? properties.xpathContext + \".\" + xpath : properties.xpathContext;\n    }\n\n    return self.dataService.saveLinkForm({\n      url: properties.saveUrl,\n      idRender: properties.id,\n      xpathContext: xpathContext,\n      submitData: data });\n\n  },\n\n  submitForm: function submitForm(result) {\n    var self = this;\n    var deferred = $.Deferred();\n\n    var executeSubmitOnChange = true;\n\n    if (result && result.type === \"validationMessages\") {\n      executeSubmitOnChange = false;\n    }\n\n    if (self.properties.hasexitrule) {\n      self.closeExitRule().done(function () {\n        if (executeSubmitOnChange) {\n          // All commits must be resolved before the submitOnChange is executed\n          self.submitCommitRequest().done(function () {\n            if (self.properties.hasentryrule) {\n              self.submitCommitRequest().done(function () {\n                $.when(self.submitOnChange()).done(function () {\n                  deferred.resolve(result);\n                });\n              });\n            } else {\n              $.when(self.submitOnChange()).done(function () {\n                deferred.resolve(result);\n              });\n            }\n          });\n        }\n      }).fail(function () {\n        deferred.reject();\n      });\n\n    } else if (executeSubmitOnChange) {\n      if (executeSubmitOnChange) {\n        //  commits must be resolved before the submitOnChange is executed\n        self.submitCommitRequest().done(function () {\n          if (self.properties.hasentryrule) {\n            self.submitCommitRequest().done(function () {\n              $.when(self.submitOnChange()).done(function () {\n                deferred.resolve(result);\n              });\n            });\n          } else {\n            $.when(self.submitOnChange()).done(function () {\n              deferred.resolve(result);\n            });\n          }\n        }).fail(function () {\n          deferred.reject();\n        });\n      }\n    }\n\n    return deferred.promise();\n  },\n\n  closeExitRule: function closeExitRule() {\n    var self = this;\n    var properties = self.properties;\n    var def = new $.Deferred();\n\n    if (properties.hasexitrule) {\n      $.when(self.openLinkRule(\"exitrule\")).done(function (result) {\n        def.resolve(result);\n      }).fail(function () {\n        def.reject();\n      });\n    }\n\n    return def.promise();\n  },\n\n  rollbackForm: function rollbackForm() {\n    var self = this;\n    var form = self.form || self.getFormContainer();\n\n    $.when(self.submitRollbackRequest({ idPageCache: form.idPageCache })).done(function () {\n      // Sends additional rollback request to delete checkpoint from entry rule\n      if (self.properties.hasentryrule) {\n        self.submitRollbackRequest({ idPageCache: form.idPageCache });\n      }\n    });\n  },\n\n  getFormLinkXpathContext: function getFormLinkXpathContext() {\n    var xpathContext = this.properties.xpathContext;\n    var parentXpathContext = this.getXpathContext();\n\n    if (parentXpathContext && xpathContext) {\n      return xpathContext.indexOf(parentXpathContext) === 0 ? xpathContext : parentXpathContext + \".\" + xpathContext;\n    } else {\n      return xpathContext;\n    }\n  },\n\n  /**\r\n      * Configure event handlers\r\n      */\n  attachEvents: function attachEvents() {\n    var self = this;\n    var $control = self.getControl();\n\n    // Bind click event\n    $(\"[data-action=open]\", $control).on(\"click\", function () {\n      // Open the link inside a slideForm\n      if (self.properties.hasentryrule) {\n        var form = self.getFormContainer();\n\n        $.when(form.saveForm()).done(function () {\n          self.submitCheckpointRequest().done(function () {\n            return self.openLinkRule(\"entryrule\");\n          });\n        });\n      } else {\n        self.openLink();\n      }\n    });\n  },\n\n  processLayout: function processLayout(isLabelFormat) {\n    if (!isLabelFormat) {\n      this._super(isLabelFormat, this.properties.textFormat);\n    } else {\n      if (typeof this.properties.textFormat.background !== \"undefined\") {\n        this._super(isLabelFormat, { background: this.properties.textFormat.background });\n      }\n    }\n  },\n\n  getElementsToStylize: function getElementsToStylize($context) {\n    return $(\".bz-link\", $context);\n  } });","/**\r\n *   Name: Bizagi Tablet Render Hidden Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the hidden render class to adjust to tablet devices\r\n */\n\n// Extends from render tablet base\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.hidden\", bizagi.rendering.hidden.prototype);\n// Extends itself\nbizagi.rendering.tablet.hidden.extend(\"bizagi.rendering.tablet.hidden\", {}, {});","/**\r\n *   Name: Bizagi Tablet Render list Extension\r\n *   Author: Bizagi UI Forms\r\n *   Comments:\r\n *   -   This script will redefine the list render class to adjust to tablet devices\r\n */\n\n// Extends from render tablet base\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.radio\", bizagi.rendering.combo.prototype);\n// Extends itself\nbizagi.rendering.tablet.radio.extend(\"bizagi.rendering.tablet.radio\", bizagi.rendering.radio.prototype);\n// Extends itself\nbizagi.rendering.tablet.radio.extend(\"bizagi.rendering.tablet.radio\", {}, {\n\n  /**\r\n                                                                             * Template method to implement in each device to customize each render after processed\r\n                                                                             */\n  postRender: function postRender() {\n    var $control = this.getControl();\n    this.radio = $control.find(\"input[type=radio]\");\n\n    if (this.properties.editable && (this.value == null || this.value === undefined) && this.properties.value != null) {\n      this.value = this.properties.value;\n    }\n  },\n\n  /**\r\n      * Method to render non editable values\r\n      * @returns {*|jQuery}\r\n      */\n  renderReadOnly: function renderReadOnly() {\n    var template = this.renderFactory.getTemplate(\"readonly\");\n\n    return $.fasttmpl(template, { value: this.getDisplayValue() });\n  },\n\n  /**\r\n      * Method to customize each render after processed in read-only mode\r\n      */\n  postRenderReadOnly: function postRenderReadOnly() {\n    var $control = this.getControl();\n    this.radio = $control.find(\"input\");\n  },\n\n  /**\r\n      * Sets the value in the rendered control\r\n      * @param value\r\n      */\n  setDisplayValue: function setDisplayValue(value) {\n    var self = this;\n    var $control = self.getControl();\n\n    // Map data from actions\n    value = self.mapValue(value);\n\n    // Set internal value\n    self.setValue(value, false);\n\n    if (value !== undefined && value.id != null && value.id !== \"\") {\n\n      if (this.properties.editable) {\n\n        var radioItem = $control.\n        find('input[type=\"radio\"][value=\"' + value.id + '\"]');\n\n        radioItem.prop('checked', 'checked');\n      } else {\n        self.radio.val(this.getDisplayValue());\n        self.radio.attr(\"id\", value.id);\n      }\n    }\n  },\n\n  /**\r\n      * Add action handlers\r\n      */\n  configureHandlers: function configureHandlers() {\n    var self = this;\n\n    this.radio.change(function () {\n      var $selected = $(this);\n      var newValue = {\n        id: $selected.prop('value'),\n        value: $.trim($selected.siblings(\"label\").text()) };\n\n\n      self.setValue(newValue);\n    });\n  },\n\n  /**\r\n      * Context to apply styles\r\n      * @param context\r\n      * @returns {jQuery|HTMLElement}\r\n      */\n  getElementsToStylize: function getElementsToStylize(context) {\n    return $(\"label.bz-radio__label, .bz-input.bz-input--readonly\", context);\n  },\n\n  /**\r\n      * Cleans current data\r\n      */\n  cleanData: function cleanData() {\n    var value = { id: \"\", label: \"\" };\n    this.setValue(value, false);\n\n    this.clearDisplayValue();\n  },\n\n  /**\r\n      * Sets the value in the rendered control\r\n      */\n  clearDisplayValue: function clearDisplayValue() {\n    if (this.properties.editable) {\n      this.radio.prop('checked', false);\n    } else {\n      this.radio.val(this.getDisplayValue());\n    }\n  },\n\n  /**\r\n      * Returns the selected value in the template\r\n      * @returns {*}\r\n      */\n  getSelectedValue: function getSelectedValue() {\n    return this.selectedValue;\n  } });","/**\r\n *   Name: BizAgi Tablet Render Cascading combo Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the cascading combo render class to adjust to tablet devices\r\n */\n\n// Extends from render tablet base\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.cascadingCombo\", bizagi.rendering.combo.prototype);\n// Extends itself\nbizagi.rendering.tablet.cascadingCombo.extend(\"bizagi.rendering.tablet.cascadingCombo\", bizagi.rendering.cascadingCombo.prototype);\n// Extends itself\nbizagi.rendering.tablet.cascadingCombo.extend(\"bizagi.rendering.tablet.cascadingCombo\", {\n  // Statics\n  BA_ACTION_PARAMETER_PREFIX: bizagi.render.services.service.BA_ACTION_PARAMETER_PREFIX,\n  BA_CONTEXT_PARAMETER_PREFIX: bizagi.render.services.service.BA_CONTEXT_PARAMETER_PREFIX },\n{\n\n  /*\r\n     *   Template method to implement in each children to customize each control\r\n     */\n  renderControl: function renderControl() {\n    var mode = this.getMode();\n\n    // Check if this is a dependant combo\n    this.parentCombo = this.getParentCombo();\n    if (this.parentCombo != null) {\n\n      if (/cascadingcombo/i.test(this.parentCombo.properties.type)) {\n        this.isDependant = true;\n      }\n    }\n\n    // Apply element plugin, set a flag to avoid dependant combo ajax requests\n    this.initializingCascadingCombo = true;\n\n    if (mode != \"execution\") {\n      this.initializingCascadingCombo = false;\n    }\n\n    return bizagi.rendering.tablet.combo.prototype.renderControl.apply(this, arguments);\n  },\n  /*\r\n     *   Template method to implement in each device to customize each render after processed\r\n     */\n  postRender: function postRender() {\n    bizagi.rendering.tablet.combo.prototype.postRender.apply(this, arguments);\n  },\n\n  /*\r\n           *   Template method to implement in each device to customize the render's behaviour to add handlers\r\n           */\n  configureHandlers: function configureHandlers() {\n    // Call base\n    this._super();\n\n    // Call desktop.combo method\n    bizagi.rendering.tablet.combo.prototype.configureHandlers.apply(this, arguments);\n  },\n\n  /**\r\n      * Override to avoid the trigguer\r\n      */\n  cleanData: function cleanData() {\n    bizagi.rendering.tablet.combo.prototype.cleanData.apply(this, arguments);\n  },\n\n  /*\r\n     *   Refresh the combo, after it has been painted\r\n     */\n  refresh: function refresh(params, isInitialValue) {\n    var self = this;\n    // Wait until current element is rendered\n    $.when(self.isRendered()).done(function () {\n      // Clear current control\n      var control = self.getControl();\n      var mode = self.getMode();\n      control.empty();\n\n      // Render combo again\n      $.when(self.renderControl()).then(function (html) {\n        // Append new element\n        control.html(html);\n        // Post-render method\n        self.postRender();\n\n        if (mode == \"execution\") {\n          self.configureHandlers();\n        }\n\n        // Set current value\n        if (isInitialValue) {\n          self.setDisplayValue(self.getValue());\n        } else {\n          self.setDisplayValue({\n            \"id\": \"\",\n            \"value\": \"\" });\n\n        }\n\n        if (self.deferredVisible) {\n          self.deferredVisible.resolve();\n        }\n\n        self.trigger(\"select\", [self.getValue(), isInitialValue]);\n      });\n    });\n  },\n  /*\r\n     *   Sets the value in the rendered control\r\n     */\n  setDisplayValue: function setDisplayValue(value) {\n    bizagi.rendering.tablet.combo.prototype.setDisplayValue.apply(this, arguments);\n  },\n\n  processComboData: function processComboData() {\n    bizagi.rendering.tablet.combo.prototype.processComboData.apply(this, arguments);\n  },\n\n  validateValue: function validateValue() {\n    return bizagi.rendering.tablet.combo.prototype.validateValue.apply(this, arguments);\n  },\n\n  renderComboTemplate: function renderComboTemplate() {\n    return bizagi.rendering.tablet.combo.prototype.renderComboTemplate.apply(this, arguments);\n  },\n\n  configureModalViewHandlers: function configureModalViewHandlers() {\n    bizagi.rendering.tablet.combo.prototype.configureModalViewHandlers.apply(this, arguments);\n  },\n\n  configureCombo: function configureCombo() {\n    bizagi.rendering.tablet.combo.prototype.configureCombo.apply(this, arguments);\n  },\n\n  changeCombo: function changeCombo(valueItem, valueObjet) {\n    bizagi.rendering.tablet.combo.prototype.changeCombo.apply(this, arguments);\n  },\n\n  /*\r\n     *   Returns the selected value in the template\r\n     */\n  getSelectedValue: function getSelectedValue() {\n    return bizagi.rendering.tablet.combo.prototype.getSelectedValue.call(this, arguments);\n  },\n\n  getTemplateName: function getTemplateName() {\n    return \"combo\";\n  },\n  /**\r\n      * Filtering list of elements\r\n      * @returns {}\r\n      */\n  filterList: function filterList(search, $li) {\n    return bizagi.rendering.tablet.combo.prototype.filterList.call(this, search, $li);\n  } });","/**\r\n *   Name: Bizagi Tablet Render MultiSelect Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the multiSelect render class to adjust to tablet devices\r\n */\n\n// Extends from render tablet base\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.multiSelect\", bizagi.rendering.multiSelect.prototype);\n// Extends itself\nbizagi.rendering.tablet.multiSelect.extend(\"bizagi.rendering.tablet.multiSelect\", {\n  MORE_OPTION_WIDTH: 40,\n  SEARCH_MIN_LENGTH: 1 },\n{\n\n  /**\r\n   * Update or init the element data\r\n   * @param {} data submitData\r\n   * @returns {}\r\n   */\n  initializeData: function initializeData(data) {\n    // Call base\n    this._super(data);\n\n    // Check if offline forms is supported\n    this.isOfflineForm = bizagi.util.isOfflineForm({ context: this });\n  },\n\n  renderReadOnly: function renderReadOnly() {\n    var self = this;\n    var template = self.renderFactory.getTemplate(\"searchList.readonly\");\n    var dataList = self.getDataValue() || [];\n\n    // Render template\n    var content = $.fasttmpl(template, {\n      items: dataList,\n      editable: self.properties.editable || true },\n    {\n      formatItem: self.formatItem });\n\n\n    return content;\n  },\n\n  /**\r\n      * Template method to implement in each device to customize each render after processed\r\n      */\n  postRender: function postRender() {\n    var self = this;\n\n    if (this.isExecutionMode()) {\n      this.getData().done(function (data) {\n        self.properties.data = data;\n      });\n    }\n\n    // Call base\n    this._super();\n  },\n\n  configureHandlers: function configureHandlers() {\n    var self = this;\n    var $control = self.getControl();\n\n    $(\"[data-action=modal]\", $control).bind(\"click\", function () {\n      self.openModalView();\n    });\n  },\n\n  /**\r\n      * Sets the value and display, avoid to include setValue in this method.\r\n      */\n  setDisplayValue: function setDisplayValue(value) {\n    var self = this;\n    this._super(value);\n\n    if (value !== undefined) {\n      var dataList = self.getDataValue() || [];\n      var dataMapped = dataList.map(function (el) {\n        return self.formatItem(el.value);\n      }).join(\", \");\n\n      $(\".bz-input-icon__input\", this.getControl()).html(dataMapped);\n    }\n  },\n\n  /**\r\n      * Opens the modal view\r\n      */\n  openModalView: function openModalView() {\n    var self = this;\n    self.getData().done(function (result) {\n      var template_content = self.renderFactory.getTemplate('multiselect-list');\n      var value = self.getDataValue() || [];\n\n      var data = {\n        values: result,\n        isChecked: function isChecked(id) {\n          return self.isChecked(value, id);\n        } };\n\n\n      var content = $.fasttmpl(template_content, data, {\n        formatItem: self.formatItem });\n\n\n      var template_footer = self.renderFactory.getTemplate(\"modal-footer-done\");\n      var footer = $.fasttmpl(template_footer, {});\n\n      self.getControl().mobileView({\n        customHeader: $.fasttmpl(self.renderFactory.getTemplate(\"modal-header-search\"), {\n          hideSearch: self.properties.enableTyping === false }),\n\n        orientation: self.properties.orientation || \"\",\n        contentTemplate: content,\n        footerTemplate: footer,\n        style: \"width: 80%; height: 70%\",\n        close: function close() {\n          self.triggerGlobalHandler(\"modalViewDidDisappear\", {});\n        },\n        afterOpenAnimation: function afterOpenAnimation(event) {\n          $(\".bz-modal-view__search\", event.view.header).focus();\n        },\n        open: function open() {\n          self.triggerGlobalHandler(\"closeModalValidationMessage\", {});\n          self.triggerGlobalHandler(\"modalViewDidAppear\", {});\n        },\n        configureActions: function configureActions(modalView) {\n          self.configureModalViewHandlers(modalView);\n        } });\n\n    });\n  },\n\n  /**\r\n      * Configure the modalView Handlers for the new combo control.\r\n      * */\n  configureModalViewHandlers: function configureModalViewHandlers(modalView) {\n    var self = this;\n\n    var $listContainer = $(\".bz-checkbox-list li\", modalView.content);\n    //clear button\n    var $clearButton = $(\".bz-modal-view__clear\", modalView.header);\n    // Suggest input\n    var $suggestInput = $(\".bz-modal-view__search\", modalView.header);\n\n    if (this.properties.enableTyping) {\n      $suggestInput.on(\"change keyup\", function () {\n        if (this.value === \"\") {\n          $clearButton.removeClass(\"bz-modal-view__clear--visible\");\n        } else {\n          $clearButton.addClass(\"bz-modal-view__clear--visible\");\n        }\n        self.filterList(this.value, $listContainer);\n      }).on(\"focus\", function () {\n        modalView.header.addClass(\"bz-modal-view__header--active\");\n      }).on(\"blur\", function () {\n        modalView.header.removeClass(\"bz-modal-view__header--active\");\n      });\n\n      //Clear the search\n      $clearButton.on(\"click\", function () {\n        $suggestInput.val(\"\").trigger(\"change\");\n      });\n    }\n\n    $(\"[data-action=close]\", modalView.header).on(\"click\", function () {\n      modalView.close();\n    });\n\n    $(modalView.footer).on(\"click\", \"[data-action=save]\", function () {\n      // Create a temporal array\n      var newList = [];\n\n      $.each.call(this, $listContainer, function (index, item) {\n        var check = item.querySelector(\"input\");\n\n        if (check.checked) {\n          var id = check.getAttribute(\"data-id\");\n          var element = this.findItemById(id);\n          var value = element.value;\n          newList.push({ id: id, value: value });\n        }\n      }.bind(self));\n\n      self.setDisplayValue(newList);\n\n      modalView.close();\n    });\n  },\n\n  /**\r\n      * Fetch the data into a deferred\r\n      * @returns {*[]}\r\n      */\n  getData: function getData() {\n    var self = this;\n\n    return this.isOfflineForm ?\n    this.getOfflineData() :\n    $.when(this._super()).fail(function (error) {\n      var error_obj = bizagi.util.getErrorFormatted(error);\n      var message = typeof error_obj === \"undefined\" ? {\n        \"message\": bizagi.localization.getResource(\"workportal-general-error\") } :\n      error_obj;\n\n      self.getFormContainer().failHandler(message);\n    });\n  },\n\n  /**\r\n      * Get offline data for request\r\n      */\n  getOfflineData: function getOfflineData() {\n    var data = this.properties.data || [];\n\n    return $.when(this.normalizeData(data));\n  } });","/**\r\n *   Name: Bizagi Render HandSignature Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the Hand Signature render class to adjust to tablet devices\r\n */\n\n// Extends from render Tablet base\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.handSignature\", {\n  // Statics\n  BA_ACTION_PARAMETER_PREFIX: bizagi.render.services.service.BA_ACTION_PARAMETER_PREFIX,\n  BA_CONTEXT_PARAMETER_PREFIX: bizagi.render.services.service.BA_CONTEXT_PARAMETER_PREFIX,\n  BA_PAGE_CACHE: bizagi.render.services.service.BA_PAGE_CACHE },\nbizagi.rendering.handSignature.prototype);\n// Extends itself\nbizagi.rendering.tablet.handSignature.extend(\"bizagi.rendering.tablet.handSignature\", {}, {\n\n  /**\r\n                                                                                             * Whether or not is a native device\r\n                                                                                             * @var isNative boolean\r\n                                                                                             */\n  isNative: false,\n\n  /**\r\n                    * Whether or not is a offline control\r\n                    * @var isOfflineForm boolean\r\n                    */\n  isOfflineForm: false,\n\n  /**\r\n                         * Update or init the element data\r\n                         * @param {} data\r\n                         */\n  initializeData: function initializeData(data) {\n    // Call base\n    this._super(data);\n\n    // Check if offline forms is supported\n    this.isOfflineForm = bizagi.util.isOfflineForm({ context: this });\n    this.isNative = bizagi.util.isCordovaSupported();\n  },\n\n  /**\r\n      * Add action handlers\r\n      */\n  configureHandlers: function configureHandlers() {\n    var self = this;\n    var $actions = $(\".bz-actions\", this.getControl());\n    var $container = self.getSignatureContainer();\n\n    var autoSave = bizagi.util.debounce2(function (params) {\n      if (!changed) return;\n\n      var data = Array.prototype.slice.call(params || []);\n      var dataImage = (data && data[0] || []).dataImage || \"\";\n\n      self.saveDeferred = $.when(self.saveSignature(dataImage));\n    }, !self.isOfflineForm ? self.DELAY_TO_SAVE : 0);\n\n    var changed = false;\n\n    $container.bind(\"change\", function () {\n      changed = true;\n      if ($(this).BzjSignature(\"isModified\")) {\n        self.saveTimestamp = new Date().getTime();\n        var $canvas = $(\".bz-signature__container-canvas\", this)[0];\n        var dataImage = $canvas.toDataURL(\"image/png\");\n        autoSave.fire({ dataImage: dataImage });\n        self.setData(dataImage.replace(/^data:image\\/(png|jpg|jpeg);base64,/, \"\"));\n        self.properties.url = dataImage;\n        self.setState(self.STATE_TYPE.done);\n      }\n    });\n\n    $actions.on(\"click\", \"[data-action='clear']\", function () {\n      changed = true;\n      autoSave.cancel();\n      self.onSignatureClear($container);\n    });\n\n    $actions.on(\"click\", \"[data-action='edit']\", function () {\n      self.onSignatureEdit($container);\n      changed = false;\n    });\n\n    $actions.on(\"click\", \"[data-action='save']\", function () {\n      if (!changed) {\n        self.setState(self.STATE_TYPE.edit);\n        $container.BzjSignature(\"disable\");\n        return;\n      }\n\n      self.onSignatureSave($container, autoSave);\n      changed = false;\n    });\n\n  },\n\n  onSignatureClear: function onSignatureClear($container) {\n    var self = this;\n\n    $container.BzjSignature(\"reset\");\n\n    var clearReference;\n\n    if (self.hasValue()) {\n      bizagi.loading.start();\n      self.setData(self.EMPTY_VALUE);\n      self.properties.url = self.EMPTY_VALUE;\n\n      clearReference = self.deleteSignature();\n      $.when(clearReference).then(function (result) {\n        self.setData(result);\n        self.properties.url = result;\n      }).fail(function (error) {\n        self.executeFormFailHandler(error);\n      }).always(function () {\n        bizagi.loading.stop();\n      });\n    }\n\n    return $.when(clearReference);\n  },\n\n  onSignatureEdit: function onSignatureEdit($container) {\n    this.setState(this.STATE_TYPE.draw);\n    $container.BzjSignature(\"enable\");\n  },\n\n  onSignatureSave: function onSignatureSave($container, autoSave) {\n    var self = this;\n\n    $container.BzjSignature(\"disable\");\n\n    if ($container && $container.BzjSignature(\"isModified\")) {\n      var $canvas = $(\".bz-signature__container-canvas\", $container)[0];\n      bizagi.loading.start();\n\n      autoSave.cancel();\n      self.saveSignature($canvas.toDataURL(\"image/png\")).always(function () {\n        self.setState(self.STATE_TYPE.edit);\n        bizagi.loading.stop();\n      });\n    } else {\n      self.setState(self.STATE_TYPE.edit);\n    }\n  },\n\n  /**\r\n      * Apply plugin\r\n      */\n  renderSignature: function renderSignature() {\n    var self = this;\n    var $container = self.getSignatureContainer();\n    var config = {\n      sizeRatio: 3,\n      cssclass: \"bz-signature__container-canvas\",\n      color: \"#000\" };\n\n\n    $container.empty();\n    $container.BzjSignature(config);\n    $container.BzjSignature(\"disable\");\n\n    if (self.pluginInitialized && self.properties.url) {\n      self.setSignature($container);\n    } else {\n      self.renderSignatureValue($container);\n    }\n\n    // Only apply for mobile\n    var $canvas = $(\".bz-signature__container-canvas\", $container);\n    var height = Math.round($canvas.width() / 3);\n\n    $canvas.attr(\"height\", height).css(\"height\", height);\n    $canvas.css(\"width\", \"100%\");\n\n    // Required for resize observer\n    self.pluginInitialized = true;\n  },\n\n  /**\r\n      * Set data to control\r\n      * @param $container\r\n      * @returns {*}\r\n      */\n  renderSignatureValue: function renderSignatureValue($container) {\n    var self = this;\n\n    bizagi.util.sleepUntil(function () {\n      return !self.dataService.getFileService().isLoading(self);\n    }).then(function () {\n      return self.buildItemUrl();\n    }).then(function (dataUrl) {\n      if (!self.isDisposed()) {\n        // Fake empty\n        if (dataUrl === self.BASE_IMAGE + self.EMPTY_IMAGE) {\n          dataUrl = \"\";\n        }\n\n        var url = dataUrl !== \"\" ? dataUrl : \"\";\n        self.properties.url = url;\n\n        if (!bizagi.util.isEmpty(url)) {\n          $container.BzjSignature(\"setData\", url);\n        } else {\n          self.setData(self.EMPTY_VALUE);\n        }\n      }\n    });\n  },\n\n  /**\r\n      * Execute upload image\r\n      * @param dataImage\r\n      * @returns {*}\r\n      */\n  postSignature: function postSignature(dataImage) {\n    var signature = dataImage.replace(/^data:image\\/(png|jpg|jpeg);base64,/, \"\");\n\n    if (!this.isOfflineForm) {\n      return this.postSignatureOnline(signature);\n    }\n\n    return this.postSignatureOffline(signature);\n  },\n\n  /**\r\n      * Execute upload image for offline mode\r\n      * @param signature\r\n      * @returns {*}\r\n      */\n  postSignatureOffline: function postSignatureOffline(signature) {\n    var self = this;\n\n    return self.saveImageOffline(signature).then(function () {\n      self.properties.isChanged = true;\n      return signature;\n    });\n  },\n\n  /**\r\n      * Delete data image\r\n      * @returns {*}\r\n      */\n  deleteSignature: function deleteSignature() {\n    var self = this;\n\n    if (!self.isOfflineForm) {\n      return this.deleteImage().then(function () {\n        return self.EMPTY_VALUE;\n      });\n    }\n    return self.saveImageOffline(self.EMPTY_IMAGE).then(function () {\n      self.properties.isChanged = true;\n      return self.EMPTY_VALUE;\n    });\n  },\n\n  /**\r\n      * Builds the upload item url\r\n      * @param params\r\n      * @returns {*}\r\n      */\n  buildItemUrl: function buildItemUrl(params) {\n    if (this.isOfflineForm) {\n      return this.buildItemUrlOffline(params);\n    } else {\n      return this._super(params);\n    }\n  } });","/*\r\n*   Name: Bizagi Tablet Render Association\r\n*   Author: UI Forms Team\r\n*   Comments: Defines the association control\r\n*/\n\n// Extends from render tablet base\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.association\", bizagi.rendering.association.prototype);\n// Extends itself\nbizagi.rendering.tablet.association.extend(\"bizagi.rendering.tablet.association\", {}, {\n  /**\r\n                                                                                            * Template method to implement in each children to customize each control\r\n                                                                                            * \r\n                                                                                            * @returns {} \r\n                                                                                            */\n  renderControl: function renderControl() {\n    var self = this;\n    var template = self.renderFactory.getTemplate(\"association\");\n    var def = new $.Deferred();\n\n    self.properties.property = \"flipped\";\n    self.properties.idRender = self.properties.id;\n\n    // Define flipped\n    $.when(self.getFlipAssociation()).done(function (flip) {\n      // Make json base, create self.properties.formatJson\n      self.makeJsonBase();\n\n      self.properties.flipped = bizagi.util.parseBoolean(flip) || false;\n\n      var columnData = self.getColumnData();\n\n      var html = $.fasttmpl(template, $.extend(self.properties, { columnData: columnData }), {\n        getColumnData: self.getColumnData,\n        getRightAssociation: self.getRightAssociation });\n\n\n      /* by default need set self.properties.formatJson */\n      self.setValue(JSON.encode(self.properties.formatJson));\n\n      def.resolve(html);\n    });\n\n    return def.promise();\n  },\n\n\n\n  /**\r\n      * Get Left Data, verify if flipper flags sets true\r\n      *\r\n      * @param column {'0'||'1'}\r\n      */\n  getColumnData: function getColumnData() {\n    var self = this;\n    var properties = self.properties;\n    var data = [];\n\n    self.data = properties;\n\n    var dataAssociation = properties.flipped ? properties.rightData : properties.leftData;\n\n    $.each(dataAssociation, function (key, item) {\n      data.push({\n        id: item.id,\n        value: item.value,\n        association: self.getRightAssociation(item.id) });\n\n    });\n\n    return data;\n  },\n\n  postRender: function postRender() {\n    var self = this;\n    var isExecution = self.getMode() === \"execution\";\n    var $control = self.getControl();\n\n    // Cache control\n    self.association = $(\".bz-association\", $control);\n\n    // Add Events at Association Control\n    if (isExecution) {self.addEventControl();}\n\n    self.showDefaultGroupList();\n  },\n\n  showDefaultGroupList: function showDefaultGroupList() {\n    var self = this;\n    var $control = self.getControl();\n    var $groups = $('.bz-association-group', $control);\n\n    if ($groups.length > 0) {\n      $(\"[data-action='collapse']\", $groups[0]).toggleClass(\"bz-icn--expanded\");\n\n      $(\".bz-association-group__list\", $groups[0]).\n      slideDown(300, function () {\n        $(this).toggleClass(\"bz-association-group__list--hidden\");\n      });\n    }\n  },\n\n  /**\r\n      * Add event to control\r\n      * @returns {} \r\n      */\n  addEventControl: function addEventControl() {\n    var self = this;\n    var template = self.renderFactory.getTemplate(\"association\");\n    var control = self.getControl();\n\n    // Bind check toggle\n    self.association.\n    on(\"change\", \"input:checkbox\", function () {\n      var $input = $(this);\n      var parentId = $input.data(\"parent-id\");\n      var id = $input.data(\"id\");\n\n      if ($input.prop(\"checked\")) {self.addElement(parentId, id);} else\n      {self.removeElement(parentId, id);}\n    });\n\n    // Bind flip actions\n    self.association.\n    find(\"[data-action='flip']\").\n    click(function () {\n      $(control).empty();\n\n      // Define flipped\n      self.properties.flipped = !self.properties.flipped;\n\n      // Send flip data to server\n      self.properties.flipstate = self.properties.flipped;\n\n      self.dataService.getFlipAssociation(self.properties);\n\n      var columnData = self.getColumnData();\n\n      // Render template\n      $($.fasttmpl(template, $.extend(self.properties, { columnData: columnData }), {\n        getColumnData: self.getColumnData,\n        getRightAssociation: self.getRightAssociation })).\n      appendTo(control);\n\n      self.postRender();\n    });\n\n    self.association.on(\"click\", \"[data-action='collapse']\", function () {\n      var $element = $(this);\n      var $groupList =\n      $element.\n      parents('.bz-association-group').\n      find(\".bz-association-group__list\");\n\n      self.closeAccordionSection();\n      if ($groupList.hasClass(\"bz-association-group__list--hidden\")) {\n\n        $element.toggleClass(\"bz-icn--expanded\");\n\n        $groupList.slideDown(300, function () {\n          $(this).toggleClass(\"bz-association-group__list--hidden\");\n        });\n      }\n    });\n  },\n\n  closeAccordionSection: function closeAccordionSection(active) {\n    var self = this;\n    var $control = self.getControl();\n\n    $(\"[data-action='collapse']\", $control).removeClass('bz-icn--expanded');\n\n    $(\".bz-association-group__list\", $control).\n    slideUp(300, function () {\n      $(this).addClass(\"bz-association-group__list--hidden\");\n    });\n  },\n\n  renderReadOnly: function renderReadOnly() {\n    var self = this;\n\n    return self.renderControl();\n  },\n\n  /**\r\n      * Render for readonly\r\n      * @returns {} \r\n      */\n  postRenderReadOnly: function postRenderReadOnly() {\n    this.postRender();\n  },\n\n  /* SET-DISPLAY-VALUE\r\n      =====================================================*/\n  setDisplayValue: function setDisplayValue(value) {\n    // Set internal value\n    this.setValue(value, false);\n  },\n\n  getLabel: function getLabel() {\n    if (!this.label) {\n      var label = $(\"> .bz-form-label\", this.element || this.observableElement);\n\n      if (label.length > 0)\n      this.label = label;\n\n      return label;\n    }\n\n    return this.label;\n  } });","/**\r\n *   Name: Bizagi Tablet Render ECM Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the ecm render class to adjust to tablet devices\r\n */\n\n// Extends from render tablet base\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.ecm\", {\n  // Statics\n  BA_ACTION_PARAMETER_PREFIX: bizagi.render.services.service.BA_ACTION_PARAMETER_PREFIX,\n  BA_CONTEXT_PARAMETER_PREFIX: bizagi.render.services.service.BA_CONTEXT_PARAMETER_PREFIX,\n  BA_PAGE_CACHE: bizagi.render.services.service.BA_PAGE_CACHE },\nbizagi.rendering.ecm.prototype);\n\n// Extends itself\nbizagi.rendering.tablet.ecm.extend(\"bizagi.rendering.tablet.ecm\", {\n  QUALITY_PICTURE: 50,\n  LIMIT: 1, // The maximum number of media in the device user can record in a single capture operation.\n  EXTENSIONSIMG: [\"image/jpeg\", \"jpeg\", \"image\", \"png\", \"jpg\", \"bmp\"],\n  EXTENSIONSFILE: [\"doc\", \"docx\", \"xls\", \"xlsx\", \"ppt\", \"pptx\", \"pdf\", \"zip\", \"rar\", \"txt\"],\n  EXTENSIONSVIDEO: [\"video/quicktime\", \"quicktime\", \"qt\", \"mov\"],\n  EXTENSIONSAUDIO: [\"audio/wav\", \"audio\", \"wav\", \"mp3\"],\n  ERROR_ECM_NO_AVAILABLE: 3,\n  ACTION_DETAILS: \"details\",\n  ACTION_EDIT: \"edit\" },\n{\n\n  /**\r\n   * Whether or not is a native device\r\n   * @var isNative boolean\r\n   */\n  isNative: false,\n\n  /**\r\n                    * Update or init the element data\r\n                    * @param {} data\r\n                    */\n  initializeData: function initializeData(data) {\n    // Call base\n    this._super(data);\n\n    this.isNative = bizagi.util.isCordovaSupported();\n    this.fileData = [];\n  },\n\n  /**\r\n      * Method to customize each control\r\n      * @returns {}\r\n      */\n  renderControl: function renderControl() {\n    var self = this;\n    var template = this.renderFactory.getTemplate(\"ecm\");\n\n    // Set files property\n    self.files = self.properties.value || [];\n    self.filesCount = self.files.length;\n\n    return this.renderItem(template, {});\n  },\n\n  /**\r\n      * Method to render non editable values\r\n      * @returns {*|jQuery}\r\n      */\n  renderReadOnly: function renderReadOnly() {\n    var template = this.renderFactory.getTemplate(\"ecm-readonly\");\n    var data = {\n      noFiles: this.filesCount === 0 };\n\n\n    return this.renderItem(template, data);\n  },\n\n  /**\r\n      * Method to render items\r\n      * @returns {*|jQuery}\r\n      */\n  renderItem: function renderItem(template, data) {\n    var self = this;\n    var items = \"\";\n    var html = $.fasttmpl(template, data);\n\n    // Render current children\n    for (var i = 0; i < self.filesCount; i++) {\n      var item = self.renderUploadItem(self.files[i]);\n\n      items += item;\n    }\n\n    html = self.replaceFilesHtml(html, items);\n\n    return html;\n  },\n\n  /**\r\n      * Renders a single upload item\r\n      * @param file\r\n      * @returns {*}\r\n      */\n  renderUploadItem: function renderUploadItem(file) {\n    var self = this;\n    var template = self.renderFactory.getTemplate(\"ecm-item\");\n    var form = self.getFormContainer();\n\n    var data = {\n      id: self.properties.id,\n      idFileUpload: file[0],\n      fileName: file[1],\n      editable: self.properties.editable,\n      xPath: self.properties.xpath,\n      xpathContext: self.getXpathContext() || form.properties.xpathContext || \"\",\n      idPageCache: self.properties.idPageCache,\n      idAttrib: self.properties.idAttrib,\n      sessionId: form.properties.sessionId };\n\n\n    // Builds the upload item url\n    var originalData = $.extend({}, data);\n    data.url = self.buildItemUrl(originalData);\n\n    // Define File Properties\n    file.getFileProperties = $.when(self.renderFileLayout(data));\n\n    var html = $.fasttmpl(template, data);\n\n    return html;\n  },\n\n  /**\r\n      * Method to get properties and metadata of ECM item\r\n      * @param data\r\n      * @returns {*}\r\n      */\n  renderFileLayout: function renderFileLayout(data) {\n    var self = this;\n    var form = self.getFormContainer();\n    var deferred = new $.Deferred();\n\n    var originalData = $.extend({}, data);\n\n    $.when(\n    self.dataService.metadataECMMultiaction().getECMMetadata(data),\n    self.dataService.metadataECMMultiaction().getFileProperties(originalData)).\n    done(function (metaData, fileProperties) {\n\n      if (Array.isArray(fileProperties)) {\n        fileProperties = fileProperties[0];\n      }\n\n      if (Array.isArray(metaData)) {\n        metaData = metaData[0];\n      }\n\n      fileProperties.idAttrib = self.properties.idAttrib;\n      fileProperties.showMetadata = self.properties.showMetadata;\n      fileProperties.xpathContext = self.getXpathContext() || form.properties.xpathContext || \"\";\n      fileProperties.xpath = self.properties.xpath;\n      fileProperties.fileName = data.fileName;\n      fileProperties.idPageCache = self.properties.idPageCache;\n      fileProperties.fileData = originalData;\n\n      var result = $.extend({}, fileProperties, metaData);\n\n      deferred.resolve(result);\n\n    });\n\n    return deferred.promise();\n  },\n\n  /**\r\n      * Replaces a {{files}} tag in the container for the specified \"replace\" element\r\n      * @param html\r\n      * @param replace\r\n      * @returns {*}\r\n      */\n  replaceFilesHtml: function replaceFilesHtml(html, replace) {\n    return html.replace(\"{{files}}\", replace);\n  },\n\n  /**\r\n      * Template method to implement in each device to customize each render after processed\r\n      */\n  postRender: function postRender() {\n    var $control = this.getControl();\n\n    this.$contentFile = $(\".bz-file-upload__container\", $control);\n    this.$inputFile = $(\".bz-file-upload__input\", $control);\n    this.$nativeFile = $(\".bz-file-upload__native\", $control);\n  },\n\n  configureHandlers: function configureHandlers() {\n    this.checkFileExtensions();\n    this.attachEvents();\n  },\n\n  /**\r\n      * Method to customize the render's behaviour to add handlers when the control is readonly\r\n      */\n  configureHandlersReadOnly: function configureHandlersReadOnly() {\n    var self = this;\n    var $control = self.getControl();\n    // Handler to download the file\n    $(\"ul.bz-readonly-lists\", $control).on(\"click\", \".bz-file .bz-file-name\", function () {\n      var item = $(this).parent(\".bz-file\");\n      var file = item.data();\n      bizagi.loading.start();\n      $.when(bizagi.util.media.downloadFile(file.url, file.title)).fail(function (error) {\n        self.executeFormFailHandler(error);\n      }).always(function () {\n        bizagi.loading.stop();\n      });\n    });\n  },\n\n  /**\r\n      * Send image using HTTP\r\n      */\n  saveImage: function saveImage() {\n    var self = this;\n    var dataItem = \"\";\n\n    if (self.editedImageURL) {\n      dataItem = self.editedImageURL;\n    } else if (self.fileProperties) {\n      dataItem = self.fileProperties.url;\n    }\n\n    // Fix android 4.4 getting images from recent folder\n    var dataFile = bizagi.util.media.getImagePath(dataItem);\n    var data = {\n      dataFile: dataFile,\n      fileName: self.fileProperties.name,\n      mimeType: \"image/jpeg\" };\n\n\n    // Cleans variables related previous uploads\n    self.editedImageURL = null;\n    self.fileProperties = null;\n\n    return this.uploadFile(data);\n  },\n\n  /**\r\n      * Method to save a video file\r\n      * @param {} dataVideo\r\n      * @returns {}\r\n      */\n  saveVideo: function saveVideo(dataVideo) {\n    var data = {\n      dataFile: dataVideo[0].fullPath,\n      fileName: dataVideo[0].name,\n      mimeType: \"video/quicktime\" };\n\n\n    return this.uploadFile(data);\n  },\n\n  /**\r\n      * Method to save a file\r\n      * @param data\r\n      * @returns {*|void}\r\n      */\n  uploadFile: function uploadFile(data) {\n    var self = this;\n    var params = {};\n    var addParams = self.buildAddParams();\n\n    addParams.queueID = \"q_\" + bizagi.util.encodeXpath(self.getUploadXpath());\n    addParams[\"xPath\"] = addParams[\"xPath\"];\n    addParams.Filename = data.fileName;\n\n    params.data = addParams;\n    params.options = new FileUploadOptions();\n    params.options.fileKey = \"file\";\n    params.options.fileName = data.fileName;\n    params.options.uploadKey = { key: \"Filedata\" };\n    params.options.addUrl = self.properties.addUrl;\n    params.dataFile = data.dataFile;\n\n    if (data.mimeType)\n    params.options.mimeType = data.mimeType;\n\n    return $.when(bizagi.util.media.uploadFile(params)).then(function (result) {\n      self.onUploadFileCompleted(JSON.parse(decodeURIComponent(result.response)));\n    }).fail(function (error) {\n      self.executeFormFailHandler(error);\n    });\n  },\n\n  /**\r\n      * Method to configure the actions with control\r\n      * @return {}\r\n      */\n  attachEvents: function attachEvents() {\n    var self = this;\n    var $control = self.getControl();\n\n    // Handlers to management of menu actions\n    $.each(self.files, function (i, file) {\n      self.attackMenuEvents(file);\n    });\n\n    // Attach all events\n    this.$contentFile.off(\"click\").on(\"click\", function (evt) {\n      self.chooseFile();\n    });\n\n    // Handler to download the file\n    $(\"ul.bz-files\", $control).on(\"click\", \".bz-file .bz-file-name\", function () {\n      var item = $(this).parent(\".bz-file\");\n      var file = item.data();\n\n      bizagi.loading.start();\n\n      $.when(bizagi.util.media.downloadFile(file.url, file.title)).fail(function (error) {\n        self.executeFormFailHandler(error);\n      }).always(function () {\n        bizagi.loading.stop();\n      });\n    });\n\n\n    if (self.isNative) {\n      // Upload files\n      this.$nativeFile.off(\"click\").actionSheet({\n        actions: self.getUploadChoices(),\n        actionClicked: function actionClicked(action) {\n          self.handlerUploadFile(action.guid);\n        },\n        appear: function appear(action) {\n          self.triggerGlobalHandler(\"closeModalValidationMessage\", {});\n          self.triggerGlobalHandler(\"modalViewDidAppear\", {});\n        },\n        cancelClicked: function cancelClicked(action) {\n          self.triggerGlobalHandler(\"modalViewDidDisappear\", {});\n        } });\n\n\n      // Resolution upload\n      $(\".bz-file-upload__resolution\", $control).off(\"click\").actionSheet({\n        actions: bizagi.util.media.getImageResolutionSizes(),\n        withoutCancel: true,\n        actionClicked: function actionClicked(action) {\n          bizagi.loading.start();\n\n          $.when(self.handlerResolutionUpload(action.guid)).always(function () {\n            bizagi.loading.stop();\n          });\n        },\n        appear: function appear(action) {\n          self.triggerGlobalHandler(\"closeModalValidationMessage\", {});\n          self.triggerGlobalHandler(\"modalViewDidAppear\", {});\n        },\n        cancelClicked: function cancelClicked(action) {\n          self.triggerGlobalHandler(\"modalViewDidDisappear\", {});\n        } });\n\n    } else {\n\n      // Attach event to web upload-control\n      this.$inputFile.off(\"change\").on(\"change\", function () {\n        self.addFile();\n        this.value = \"\";\n      });\n\n      // Just in case\n      this.$inputFile.off(\"click\").on(\"click\", function (evt) {\n        evt.stopPropagation();\n      });\n    }\n  },\n\n  /**\r\n      * Update menu options\r\n      * @param $fileItem\r\n      * @param fileProperties\r\n      */\n  addMenuEvents: function addMenuEvents($fileItem, fileProperties) {\n    var self = this;\n    var viewMore = $fileItem.find(\".bz-file-menu\");\n    var items = [];\n\n    if (fileProperties.showMetadata) {\n      items.push({\n        name: self.getResource(\"render-collection-navigator-details-form\"),\n        fn: function fn() {\n          self.processActionByType(self.Class.ACTION_DETAILS, fileProperties, $fileItem);\n        } });\n\n    }\n\n    if (fileProperties.showMetadata && fileProperties.allowUpdateMetadata)\n    items.push({\n      name: self.getResource(\"render-collection-navigator-edit-form\"),\n      fn: function fn() {\n        self.processActionByType(self.Class.ACTION_EDIT, fileProperties, $fileItem);\n      } });\n\n\n    if (fileProperties.allowCheckOut) {\n      items.push({\n        name: self.getResource(\"render-ecm-bt-lock\"),\n        fn: function fn() {\n          self.lockECMFile($fileItem, fileProperties);\n        } });\n\n    }\n\n    if (fileProperties.allowCancelCheckOut) {\n      items.push({\n        name: self.getResource(\"render-ecm-bt-unlock\"),\n        fn: function fn() {\n          self.unlockECMFile($fileItem, fileProperties);\n        } });\n\n    }\n\n    /*if (fileProperties.allowUpdateContent) {\r\n          items.push({\r\n              name: self.getResource(\"render-ecm-bt-upgrade\"),\r\n              fn: function () {\r\n                  self.processActionByType(\"upgrade\", fileProperties);\r\n              }\r\n          });\r\n      }*/\n\n    if (fileProperties.allowDelete) {\n      items.push({\n        name: self.getResource(\"render-ecm-bt-delete\"),\n        fn: function fn() {\n          self.deleteECMFile($fileItem, fileProperties.idFileUpload);\n        } });\n\n    }\n\n    // TODO: Check items has data\n    viewMore.overflowMenu({ items: items });\n  },\n\n  /**\r\n      * Removes a file from the ECM control\r\n      * @param $fileItem\r\n      * @param fileId\r\n      */\n  deleteECMFile: function deleteECMFile($fileItem, fileId) {\n    var self = this;\n\n    bizagi.showConfirmationBox(this.getResource(\"render-ecm-confirm-message\")).\n    done(function () {\n      $.when(self.deleteUploadItem($fileItem, fileId)).\n      done(function () {\n        // Detach item\n        $fileItem.hide();\n        $fileItem.remove();\n\n        // Update value\n        self.setValue(self.files, false);\n\n        // Check maxFiles\n        self.checkMaxFiles();\n\n        // Trigger change\n        self.triggerRenderChange();\n      });\n    });\n  },\n\n  /**\r\n      * Check maximum number of files\r\n      */\n  checkMaxFiles: function checkMaxFiles() {\n    if (this.isMaxFilesReached()) {\n      $(this.$contentFile).addClass(\"bz-file-upload__container--hidden\");\n    } else {\n      $(this.$contentFile).removeClass(\"bz-file-upload__container--hidden\");\n    }\n  },\n\n  /**\r\n      * Check if the maximum number of files than can be uploaded has been reached\r\n      * @returns {}\r\n      */\n  isMaxFilesReached: function isMaxFilesReached() {\n    var maxFiles = this.properties.maxfiles;\n    var actualFiles = this.properties.value ? this.properties.value.length : 0;\n\n    return maxFiles !== 0 && this.filesCount >= maxFiles && actualFiles >= maxFiles;\n  },\n\n  /**\r\n      * Call the form failhandler with an specific error\r\n      * @param {} error\r\n      * @returns {}\r\n      */\n  executeFormFailHandler: function executeFormFailHandler(error) {\n    var errorResponse = \"\";\n\n    if (error && error.code === this.Class.ERROR_ECM_NO_AVAILABLE) {\n      errorResponse = this.getResource(\"render-ecm-service-not-available\");\n    } else if (error && error.responseText) {\n      errorResponse = error.responseText;\n    } else {\n      errorResponse = this.getResource(\"render-ecm-service-general-error\");\n    }\n\n    this.getFormContainer().failHandler(errorResponse);\n  },\n\n  lockECMFile: function lockECMFile($fileItem, fileProperties) {\n    var self = this;\n\n    $.when(self.lockUploadItem(fileProperties.idFileUpload)).done(\n    function (result) {\n      var file = [result.idFileUpload, fileProperties.fileName];\n      var newItem = self.renderUploadItem(file);\n\n      $fileItem.replaceWith(newItem);\n      self.attackMenuEvents(file);\n    });\n  },\n\n  unlockECMFile: function unlockECMFile($fileItem, fileProperties) {\n    var self = this;\n\n    $.when(self.unlockUploadItem(fileProperties.idFileUpload)).\n    done(function (result) {\n      var file = [result.idFileUpload, fileProperties.fileName];\n      var newItem = self.renderUploadItem(file);\n\n      $fileItem.replaceWith(newItem);\n      self.attackMenuEvents(file);\n    });\n  },\n\n  /**\r\n      * Method to add new file from native or hybrid environment\r\n      */\n  chooseFile: function chooseFile() {\n    if (this.isNative) {\n      this.$nativeFile.click();\n    } else if (bizagi.util.media.fileAPISupported()) {\n      this.$inputFile.click();\n    }\n  },\n\n  /**\r\n      * Check allow extensions and define possible choices\r\n      * @returns {}\r\n      */\n  checkFileExtensions: function checkFileExtensions() {\n    var self = this;\n    var validExtensions = self.properties.validExtensions || \"\";\n\n    self.validOptions = { video: false, image: false, file: false };\n\n    // Preprocess the extensions string\n    validExtensions = validExtensions.replace(/\\s+/g, \"\").toLowerCase();\n\n    if (typeof validExtensions === \"undefined\" || validExtensions === \"\") {\n      self.validOptions = { video: true, image: true, file: true };\n    } else {\n      validExtensions = validExtensions.split(\";\");\n\n      if (validExtensions.length === 1 && validExtensions[0].indexOf(\"*.*\") !== -1) {\n        self.validOptions.video = true;\n        self.validOptions.image = true;\n      } else {\n        for (var i = 0, length = validExtensions.length; i < length; i++) {\n          validExtensions[i] = validExtensions[i].replace(\"*.\", \"\");\n\n          if (self.Class.EXTENSIONSFILE.toString().indexOf(validExtensions[i]) >= 0) {\n            self.validOptions.file = true;\n          } else if (self.Class.EXTENSIONSIMG.toString().indexOf(validExtensions[i]) >= 0) {\n            self.validOptions.image = true;\n          } else if (self.Class.EXTENSIONSVIDEO.toString().indexOf(validExtensions[i]) >= 0) {\n            self.validOptions.video = true;\n          }\n        }\n      }\n    }\n\n    // Media is not supported then upload control is disabled\n    if (!self.validOptions.file && !self.validOptions.image && !self.validOptions.video) {\n      $(self.$contentFile).addClass(\"bz-file-upload__container--hidden\");\n    }\n\n    // Limit of files is reached then upload control is disabled\n    if (self.isMaxFilesReached() || !self.isNative && !bizagi.util.media.fileAPISupported()) {\n      $(this.$contentFile).addClass(\"bz-file-upload__container--hidden\");\n    }\n  },\n\n  /**\r\n      * Add upload options\r\n      */\n  getUploadChoices: function getUploadChoices() {\n    var self = this;\n    var itemsUpload = [];\n\n    // Take photo, Choose photo\n    if (self.validOptions.image) {\n      itemsUpload.push({\n        \"guid\": 1,\n        \"displayName\": bizagi.localization.getResource(\"workportal-actionsheet-upload-take-photo\") });\n\n      itemsUpload.push({\n        \"guid\": 2,\n        \"displayName\": bizagi.localization.getResource(\"workportal-actionsheet-upload-choose-photo\") });\n\n    }\n\n    // Take video\n    if (self.validOptions.video) {\n      itemsUpload.push({\n        \"guid\": 3,\n        \"displayName\": bizagi.localization.getResource(\"workportal-actionsheet-upload-take-video\") });\n\n    }\n\n    // Stores the upload options\n    return [].concat(itemsUpload);\n  },\n\n  /**\r\n      * Handler of upload files\r\n      * @param {} ordinal\r\n      * @returns {}\r\n      */\n  handlerUploadFile: function handlerUploadFile(ordinal) {\n    var self = this;\n    var actionSelected = ordinal || 0;\n\n    switch (actionSelected) {\n      case 2:\n\n        navigator.camera.getPicture(function (dataImage) {\n          self.dataImage = dataImage;\n          var extensions = self.Class.EXTENSIONSIMG.concat(self.Class.EXTENSIONSVIDEO);\n\n          bizagi.loading.start();\n\n          $.when(bizagi.util.media.checkMaxSize(dataImage, self.properties)).\n          then(function () {\n            // Gets the real properties for the file\n            return $.when(bizagi.util.media.getFileDataInfo(self.dataImage)).\n            then(function (fileData) {\n              self.fileProperties = fileData;\n\n              if (bizagi.util.media.checkFileTypes(fileData, self.properties, extensions)) {\n                if (!bizagi.util.isAndroid()) {\n                  return $.when(bizagi.util.media.modalResolutionUpload()).then(function (buttonIndex) {\n                    if (buttonIndex <= bizagi.util.media.getImageResolutionItems().length) {\n                      return self.handlerResolutionUpload(buttonIndex);\n                    }\n                  });\n\n                } else {\n                  // Force click to show actionsheet menu\n                  $(\".bz-file-upload__resolution\", self.getControl()).click();\n                }\n              }\n            });\n          }).always(function () {\n            bizagi.loading.stop();\n          });\n\n        }, self.onFail.bind(self), {\n          quality: self.Class.QUALITY_PICTURE,\n          sourceType: Camera.PictureSourceType.PHOTOLIBRARY });\n\n        break;\n      case 1:\n        navigator.camera.getPicture(function (dataImage) {\n          bizagi.loading.start();\n\n          $.when(bizagi.util.media.checkMaxSize(dataImage, self.properties)).then(function () {\n            return $.when(bizagi.util.media.getFileDataInfo(dataImage)).then(function (fileData) {\n              self.fileProperties = fileData;\n              return self.saveImage(dataImage);\n            });\n          }).always(function () {\n            bizagi.loading.stop();\n          });\n        },\n        self.onFail.bind(self), {\n          quality: self.Class.QUALITY_PICTURE,\n          sourceType: navigator.camera.PictureSourceType.CAMERA,\n          mediaType: navigator.camera.MediaType.PICTURE,\n          destinationType: Camera.DestinationType.FILE_URI,\n          correctOrientation: true,\n          targetWidth: 1280,\n          targetHeight: 960 });\n\n        break;\n      case 3:\n        navigator.device.capture.captureVideo(function (dataVideo) {\n          bizagi.loading.start();\n\n          $.when(bizagi.util.media.checkMaxSizeVideo(dataVideo, self.properties)).\n          then(function () {\n            return self.saveVideo(dataVideo);\n          }).always(function () {\n            bizagi.loading.stop();\n          });\n\n        }, self.onFail.bind(self), { limit: self.Class.LIMIT });\n        break;}\n\n  },\n\n  /**\r\n      * Catch errors\r\n      * @param {} error\r\n      */\n  onFail: function onFail(error) {\n    var messageError = bizagi.util.processFailMessage(error);\n\n    bizagi.loading.stop();\n\n    if (messageError && typeof messageError === \"string\" && messageError.indexOf(\"No Activity found to handle Intent\") !== -1) {\n      var hasResource = bizagi.util.isValidResource(\"render-upload-error-media-app\");\n      var message = hasResource ? bizagi.localization.getResource(\"render-upload-error-media-app\") : \"Your device does not have an app to execute this action.\";\n\n      self.performValidationMessage(message);\n    }\n  },\n\n  /**\r\n      * Adds a validation message to the render\r\n      * @param message\r\n      */\n  performValidationMessage: function performValidationMessage(message) {\n    var fail = bizagi.util.processFailMessage(message);\n\n    bizagi.showMessageBox(fail);\n  },\n\n  /**\r\n      * Handler of resolution upload\r\n      * @param {} ordinal\r\n      * @returns {}\r\n      */\n  handlerResolutionUpload: function handlerResolutionUpload(ordinal) {\n    var self = this;\n    var actionSelected = ordinal || 0;\n\n    // If original, save image normally, if not, reduce quality and size\n    if (actionSelected === bizagi.util.media.ResolutionType.ORIGINAL) {\n      return self.saveImage(self.dataImage);\n    } else {\n      var resolution = bizagi.util.media.getImageResolution(actionSelected);\n\n      return $.when(bizagi.util.media.transformImageSize(self.dataImage, resolution)).then(function (result) {\n\n        self.editedImageURL = result.localUrl;\n        self.properties.url = result.base64Image;\n\n        return self.saveImage(self.dataImage);\n      });\n    }\n  },\n\n  /**\r\n      * Method to add new file\r\n      */\n  addFile: function addFile() {\n    var self = this;\n    var dataFile = this.$inputFile[0].files[0];\n    var extensions = self.Class.EXTENSIONSIMG.concat(self.Class.EXTENSIONSFILE, self.Class.EXTENSIONSVIDEO);\n\n    dataFile.fullPath = this.$inputFile[0].value;\n    bizagi.loading.start();\n\n    if (bizagi.util.media.checkMaxSizeFile(dataFile, self.properties) && bizagi.util.media.checkFileTypes(dataFile, self.properties, extensions)) {\n\n      $.when(self.processUploadFile(dataFile)).done(function (result) {\n        if (!bizagi.util.isFailResponse(result)) {\n          self.onUploadFileCompleted(JSON.parse(decodeURIComponent(result)));\n        } else {\n          self.performValidationMessage(result);\n        }\n      }).fail(function (error) {\n        self.executeFormFailHandler(error);\n      }).always(function () {\n        bizagi.loading.stop();\n      });\n    } else {\n      bizagi.loading.stop();\n    }\n  },\n\n  /**\r\n      * Build add params to send to the server\r\n      * @param {} dataFile\r\n      */\n  buildAddFileParams: function buildAddFileParams(dataFile) {\n    var self = this;\n    var prefix = self.Class.BA_CONTEXT_PARAMETER_PREFIX;\n\n    // Get form data for POSTing\n    var formData = new FormData();\n    var form = self.getFormContainer();\n    var data = self.buildAddParams();\n\n    // Build add params to send to the server\n    var keys = Object.keys(data);\n\n    keys.map(function (key) {\n      formData.append(key, data[key]);\n    });\n\n    formData.append(\"Filedata\", dataFile);\n    formData.append(\"Filename\", dataFile.name.substr(dataFile.name.replace(/([\\\\\\/]+)/g, \"/\").lastIndexOf(\"/\") + 1));\n    formData.append(self.Class.BA_ACTION_PARAMETER_PREFIX + \"sessionId\", form.properties.sessionId);\n\n    if (self.properties.contexttype)\n    formData.append(prefix + \"contexttype\", self.properties.contexttype);\n\n    try {\n      if (typeof BIZAGI_SESSION_NAME !== \"undefined\") {\n        formData.append(BIZAGI_SESSION_NAME, form.properties.sessionId);\n      } else {\n        formData.append(\"JSESSIONID\", form.properties.sessionId);\n      }\n    } catch (e) {\n      formData.append(\"JSESSIONID\", form.properties.sessionId);\n    }\n\n    return formData;\n  },\n\n  /**\r\n      * Process an upload file into the server\r\n      * @param {} dataFile\r\n      * @returns {}\r\n      */\n  processUploadFile: function processUploadFile(dataFile) {\n    var data = {\n      url: this.properties.addUrl,\n      formData: this.buildAddFileParams(dataFile) };\n\n\n    return this.dataService.processUploadFile(data);\n  },\n\n  /**\r\n      * onUploadFileCompleted\r\n      * @param {} result\r\n      */\n  onUploadFileCompleted: function onUploadFileCompleted(result) {\n    var self = this;\n    var $wrapper = $(\".bz-files\", self.getControl());\n\n    if (result.idFileUpload && result.fileName) {\n      var file = [result.idFileUpload, result.fileName];\n      var newItem = self.renderUploadItem(file);\n\n      // Locate it before the upload wrapper\n      $wrapper.append(newItem);\n\n      // Copy the files value but not its reference\n      var files = self.files.slice();\n\n      //Add the new item to this temporal array\n      files.push(file);\n\n      // Update value\n      self.setValue(files, true);\n\n      // Check maxFiles\n      self.checkMaxFiles();\n      self.attackMenuEvents(file);\n\n      self.editedImageURL = null;\n    } else {\n      self.performValidationMessage(result.message);\n    }\n  },\n\n  attackMenuEvents: function attackMenuEvents(file) {\n    var self = this;\n    var $control = self.getControl();\n\n    if (file && file.getFileProperties) {\n      $.when(file.getFileProperties).done(function (fileProperties) {\n        // TODO: Fail scenario...\n        var $fileItem = $(\".\" + self.properties.id + \"-\" + fileProperties.idFileUpload, $control);\n\n        self.fileData[fileProperties.idFileUpload] = fileProperties.metadata || [];\n        self.addMenuEvents($fileItem, fileProperties);\n      });\n    }\n  },\n\n  processActionByType: function processActionByType(type, fileData, $fileItem) {\n    var self = this;\n    var properties = self.properties;\n    var form = self.getFormContainer();\n\n    bizagi.loading.start();\n\n    // Instantiate slide form object\n    var slideView = new bizagi.rendering.tablet.slide.ecm(self.dataService, self.renderFactory, {\n      title: self.properties.displayName || \"\",\n      container: form.container,\n      navigation: self.getParams().navigation,\n      editable: properties.editable && type !== self.Class.ACTION_DETAILS,\n      orientation: properties.orientation || \"ltr\",\n      onSave: function onSave(result) {\n        if (result.update) {\n          var file = [result.idFileUpload, result.fileName];\n          var newItem = self.renderUploadItem(file);\n\n          $fileItem.replaceWith(newItem);\n          self.attackMenuEvents(file);\n        }\n      },\n      onCancel: function onCancel() {\n        // console.log(\"CANCEL\");\n      } });\n\n\n    slideView.render({ metadata: fileData.metadata, fileData: fileData }).\n    always(function () {\n      bizagi.loading.stop();\n    });\n\n  } });","/*\r\n *   Name: BizAgi Tablet Render Search List Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the search-list render class to adjust to tablet devices\r\n */\n\n// Extends from render tablet base\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.searchList\", bizagi.rendering.searchList.prototype);\n// Extends itself\nbizagi.rendering.tablet.searchList.extend(\"bizagi.rendering.tablet.searchList\", {\n  SEARCH_MIN_LENGTH: 2,\n  SEARCH_MAX_RECORDS: 50,\n  SEARCH_DELAY: 250,\n  SEARCH_ELEMENTS: {} },\n{\n\n  renderControl: function renderControl() {\n    var self = this;\n    var properties = self.properties;\n    var template = self.renderFactory.getTemplate(\"searchList\");\n\n    return $.fasttmpl(template, {\n      id: properties.id,\n      value: properties.value.map(function (el) {\n        return self.formatItem(el.value);\n      }).join(\", \") });\n\n  },\n\n  /**\r\n      * Template method to implement in each device to customize each render after processed\r\n      * @returns {}\r\n      */\n  postRender: function postRender() {\n    this.searchListInput = $(\".bz-search-list__input\", this.getControl());\n  },\n\n  postRenderReadOnly: function postRenderReadOnly() {\n    this.searchListInput = $(\".bz-search-list__input\", this.getControl());\n  },\n\n  renderReadOnly: function renderReadOnly() {\n    var self = this;\n    var template = self.renderFactory.getTemplate(\"searchList.readonly\");\n\n    // Render template\n    var content = $.fasttmpl(template, {\n      items: self.properties.value || {},\n      editable: self.properties.editable || true },\n    {\n      formatItem: self.formatItem });\n\n\n    return content;\n  },\n\n  /**\r\n      * Template method to implement in each device to customize the render's behaviour\r\n      * to add handlers\r\n      * @returns {}\r\n      */\n  configureHandlers: function configureHandlers() {\n    var self = this;\n\n    // Select new item\n    self.searchListInput.on(\"click\", function (evt) {\n      var parent = $(evt.target).parent() || {};\n      if (parent.hasClass('bz-pill')) return;\n\n      self._searchListViewModal();\n    });\n  },\n\n  _searchListViewModal: function _searchListViewModal() {\n    var self = this;\n    var header = self.getHeaderTemplate();\n    var content = self.getContentTemplate();\n    var footer = self.getFooterTemplate();\n\n    self.searchListInput.mobileView({\n      customHeader: header,\n      orientation: self.properties.orientation || \"\",\n      cssClassHeader: \"bz-modal-view__header-multiple\",\n      contentTemplate: content,\n      footerTemplate: footer,\n      style: \"width: 80%; height: 70%\",\n      close: function close() {\n        $(window).unbind(\"resize\");\n        self.triggerGlobalHandler(\"modalViewDidDisappear\", {});\n      },\n      afterOpenAnimation: function afterOpenAnimation(event) {\n        $(\".bz-modal-view__search\", event.view.header).focus();\n      },\n      open: function open() {\n        self.triggerGlobalHandler(\"closeModalValidationMessage\", {});\n        self.triggerGlobalHandler(\"modalViewDidAppear\", {});\n      },\n      configureActions: function configureActions(context) {\n        self.adjustResize();\n        self.configureModalViewHandlers(context);\n      } });\n\n  },\n\n  /**\r\n      * Sets the value in the rendered control\r\n      * @param {} value\r\n      * @returns {}\r\n      */\n  setDisplayValue: function setDisplayValue(value) {\n    var self = this;\n    var finalValue = typeof value === \"string\" ? JSON.parse(value).value : value.value;\n\n    // Set internal value\n    self.setValue(finalValue);\n\n    if (value !== undefined) {\n      if (self.properties.editable) {\n        self.searchListInput.html(finalValue.map(function (el) {\n          return self.formatItem(el.value);\n        }).join(\", \"));\n      }\n    }\n  },\n\n  /**\r\n      * Remove a item from the list\r\n      * @param {} element\r\n      * @returns {}\r\n      */\n  deleteItem: function deleteItem(element) {\n    var self = this;\n    var item = element.parent('div');\n\n    // Remove from main memory and set the new value\n    self.removeElement({ id: item.data(\"id\") });\n\n    // Remove list element\n    item.remove();\n  },\n\n  selectItem: function selectItem(item) {\n    var templateItem = this.getTagTemplate(item, this.properties.editable);\n    this.modalViewTagList.append(templateItem);\n  },\n\n  /**\r\n      * Configure the modalView Handlers for the new suggest control\r\n      * @param {} inputContainer\r\n      * @returns {}\r\n      */\n  configureModalViewHandlers: function configureModalViewHandlers(modalView) {\n    var self = this;\n    var modalFooter = modalView.footer;\n    var modalHeader = modalView.header;\n\n    // Initialize data\n    var elements = {};\n\n    if (self.hasValue()) {\n      var list = self.getListItems();\n      $.each(list, function (index, item) {\n        elements[item.id] = item;\n      });\n    }\n\n    // Configuring list as a selectable element\n    self.modalViewList = $(\".bz-list\", modalView.content);\n    self.modalViewTagList = $(\".bz-search-pill__results\", modalHeader);\n\n    var $clearButton = $(\".bz-modal-view__clear\", modalHeader);\n\n    // Suggest\n    var $suggestInput = $(\".bz-modal-view__search\", modalHeader);\n    var suggestFilter = bizagi.util.debounce(function () {\n      if (this.value === \"\") {\n        $clearButton.removeClass(\"bz-modal-view__clear--visible\");\n      } else {\n        $clearButton.addClass(\"bz-modal-view__clear--visible\");\n      }\n      self.autoCompleteSearchResults($.trim(this.value));\n    }, this.Class.SEARCH_DELAY);\n\n    $suggestInput.on(\"change keyup\", suggestFilter).on(\"focus\", function () {\n      $(\".bz-search__header\", modalView.header).addClass(\"bz-search__header--active\");\n    }).on(\"blur\", function () {\n      $(\".bz-search__header\", modalView.header).removeClass(\"bz-search__header--active\");\n    });\n\n    //Clear the search\n    $clearButton.bind(\"click\", function () {\n      $suggestInput.val(\"\").trigger(\"change\");\n    });\n\n    $(\"[data-action=close]\", modalView.header).bind(\"click\", function () {\n      modalView.close();\n    });\n\n\n    // Add tags to list\n    self.modalViewList.on(\"click\", \"li\", function () {\n      var item = $.data(this).item;\n\n      // Prevent duplicate elements\n      if (!item || item && elements[item.id]) return;\n      elements[item.id] = item;\n\n      // Update state of button\n      $(modalFooter).find('.bz-btn').removeClass(\"bz-btn--secundary\");\n      $(modalFooter).find('.bz-btn').addClass(\"bz-btn--primary\");\n\n      // Update list\n      if ((Object.keys(elements) || []).length === 1) {\n        $(modalHeader).find(\".bz-search-pill__selected \").\n        removeClass(\"bz-search-pill__selected--hidden\");\n      }\n      self.selectItem(item);\n    });\n\n    // Remove tags of list\n    self.modalViewTagList.on(\"click\", '.bz-pill > .bz-btn-icn', function (evt) {\n      evt.preventDefault();\n      evt.stopPropagation();\n\n      var element = $(this);\n      var tag = element.parent('div');\n\n      // Update state of button\n      $(modalFooter).find('.bz-btn').removeClass(\"bz-btn--secundary\");\n      $(modalFooter).find('.bz-btn').addClass(\"bz-btn--primary\");\n\n      // Remove from main memory and set the new value\n      delete elements[tag.data(\"id\")];\n\n      // Remove list element\n      tag.remove();\n      // Update list\n      if ((Object.keys(elements) || []).length === 0) {\n        $(modalHeader).find(\".bz-search-pill__selected \").\n        addClass(\"bz-search-pill__selected--hidden\");\n      }\n    });\n\n    $(modalFooter).delegate(\"[data-action=save]\", \"click\", function (evt) {\n      // Create a temporal array\n      var newList = [];\n      $.each(elements, function (index, item) {\n        newList.push(item);\n      });\n\n      self.setDisplayValue({ value: newList });\n\n      modalView.close();\n    });\n  },\n\n  autoCompleteSearchResults: function autoCompleteSearchResults(currentValue) {\n    var self = this;\n\n    $.when(self.processRequest({ term: currentValue })).\n    done(function (response) {\n\n      self.modalViewList.find(\"li\").remove();\n\n      for (var i = 0, length = response.length; i < length; i++) {\n        var searchItem = self.renderSearchItem(response[i]);\n\n        searchItem.appendTo(self.modalViewList);\n      }\n    });\n  },\n\n  renderSearchItem: function renderSearchItem(item) {\n    var self = this;\n    var template = self.renderFactory.getTemplate(\"searchList.item\");\n\n    var searchItem = $.tmpl(template, {\n      id: item.id,\n      label: item.label,\n      value: this.formatItem(item.value) });\n\n\n    searchItem.data(\"item\", item);\n\n    return searchItem;\n  },\n\n  /**\r\n      * Process the request data for the autocomplete control\r\n      * @param {} req\r\n      * @returns {}\r\n      */\n  processRequest: function processRequest(req) {\n    var self = this;\n    var properties = self.properties;\n    var deferred = new $.Deferred();\n\n    // Create array for response objects   \n    var suggestions = [];\n\n    if (req.term.length >= this.Class.SEARCH_MIN_LENGTH) {\n\n      // Update term property to reflect the search\n      properties.term = req.term;\n\n      // Cancel previous request in order to improve the performance\n      if (self.deferredReference && typeof self.deferredReference.reject === \"function\" &&\n      self.deferredReference.state() !== \"resolved\") {\n        self.deferredReference.reject({ hideStatus: true });\n      }\n\n      self.deferredReference = self.getData().done(function (data) {\n        if (data && data.length > 0) {\n          data = data.slice(0, properties.maxRecords);\n\n          if (data.length > self.Class.SEARCH_MAX_RECORDS) {\n            data = data.slice(0, self.Class.SEARCH_MAX_RECORDS);\n\n            suggestions.push({\n              id: self.Class.NO_RESULTS_SEARCH_ID,\n              label: self.getResource(\"render-search-maximum-records-allowed\"),\n              value: \"\" });\n\n\n\n          } else {\n            data = data.slice(0, properties.maxRecords);\n          }\n\n          $.each(data, function (i, val) {\n            if (properties.maxRecords === 0 || i < properties.maxRecords) {\n              var parseValue = bizagi.util.performTermMatches(val.value, req.term);\n\n              suggestions.push({ id: val.id, label: parseValue, value: val.value });\n            }\n          });\n\n        } else {\n          suggestions.push({\n            id: self.Class.NO_RESULTS_SEARCH_ID,\n            label: self.getResource(\"render-grid-no-records\"),\n            value: \"\" });\n\n        }\n\n        deferred.resolve(suggestions);\n\n      }).fail(function () {\n        deferred.reject();\n      });\n\n    } else {\n      deferred.resolve(suggestions);\n    }\n\n    return deferred.promise();\n  },\n\n  getContentTemplate: function getContentTemplate() {\n    var self = this;\n    var value = self.getValue();\n    var finalValue = typeof value === \"string\" ? JSON.parse(value).value : value.value;\n\n    var template = this.renderFactory.getTemplate(\"searchList.items\");\n    var content = $.fasttmpl(template, {\n      items: finalValue || {},\n      editable: self.properties.editable || true },\n    {\n      formatItem: self.formatItem });\n\n\n    return $.trim(content);\n  },\n\n  getFooterTemplate: function getFooterTemplate() {\n    var self = this;\n    var template = self.renderFactory.getTemplate(\"searchList.actions\");\n    var content = $.fasttmpl(template, {\n      items: self.properties.value || {},\n      editable: self.properties.editable || true });\n\n\n    return $.trim(content);\n  },\n\n  getTagTemplate: function getTagTemplate(item, editable) {\n    var template = this.renderFactory.getTemplate(\"searchList.tag\");\n    var content = $.fasttmpl(template, {\n      id: item.id,\n      label: item.label,\n      value: this.formatItem(item.value),\n      editable: editable });\n\n    return $.trim(content);\n  },\n\n  adjustResize: function adjustResize() {\n    var self = this;\n    var initialScreenSize = window.innerHeight;\n\n    $(window).off(\"resize\").on(\"resize\", bizagi.util.debounce(function () {\n      var that = $(this);\n\n      // Hide the footer\n      if (that.height() < initialScreenSize) {\n        $(\".bz-mobile-view__footer_content\").addClass(\"bz-hidden\");\n      } else {\n        $(\".bz-mobile-view__footer_content\").removeClass(\"bz-hidden\");\n      }\n    }, self.Class.SEARCH_DELAY));\n  },\n\n  getHeaderTemplate: function getHeaderTemplate() {\n    var self = this;\n    var value = self.getValue();\n    var finalValue = typeof value === \"string\" ? JSON.parse(value).value : value.value;\n    var template = this.renderFactory.getTemplate(\"searchList-modal-header\");\n\n    var content = $.fasttmpl(template, {\n      items: finalValue || {},\n      editable: self.properties.editable || true,\n      emptyItems: (finalValue || []).length === 0 },\n    {\n      formatItem: self.formatItem });\n\n\n    return $.trim(content);\n  } });","/**\r\n *   Name: Bizagi User Field render tablet Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define the basic behaviour for userfields\r\n */\n\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.userfieldWrapper\", bizagi.rendering.userfieldWrapper.prototype);\nbizagi.rendering.tablet.userfieldWrapper.extend(\"bizagi.rendering.tablet.userfieldWrapper\", {}, {\n\n  /**\r\n                                                                                                   *   Load userfield\r\n                                                                                                   */\n  getUserfieldControl: function getUserfieldControl() {\n    var self = this;\n    var sControl = self.userfieldName;\n    var mode = self.getMode();\n    var exists = eval(\"typeof bizagi.rendering.tablet.\" + sControl + \" !== 'undefined'\");\n    var def = new $.Deferred();\n\n    if (exists) {\n      // Creates the userfield instance\n      // Set true argument for tabItem\n      $.when(self.parent.ready()).done(function () {\n        def.resolve(self.createUserfieldInstance(sControl));\n      });\n\n    } else {\n      if (mode != \"execution\") {\n        setTimeout(function () {\n          $.when(self.triggerGlobalHandler(\"loadUserField\", { userfield: self.userfieldGuid, device: \"Tablet\" })).\n          pipe(function (result) {\n            if (result) {\n              // Creates the userfield instance\n              def.resolve(self.createUserfieldInstance(sControl));\n            }\n          });\n        }, 10);\n\n      } else\n      {\n        // Call ajax service in order to retrieve user field definitions\n        $.when(self.dataService.getUserfieldDefinition({\n          userfield: self.userfieldGuid,\n          device: \"tablet\" })).\n        pipe(function (data) {\n          // Load userfield in memory\n          self.loadUserfield(data);\n\n          // Creates the userfield instance\n          def.resolve(self.createUserfieldInstance(sControl));\n        });\n      }\n    }\n\n    return def.promise();\n  },\n\n  /**\r\n      * Creates the userfield instance when the userfield prototype is loaded in memory\r\n      */\n  createUserfieldInstance: function createUserfieldInstance(sControl) {\n    var self = this;\n    var control;\n    try {\n      // Create a dynamic function to avoid problem with eval calls when minifying the code\n      var dynamicFunction = \"var baDynamicFn = function(renderParams){ \\r\\n\";\n      dynamicFunction += \"return new bizagi.rendering.tablet.\" + sControl + \"(renderParams);\\r\\n\";\n      dynamicFunction += \"}\\r\\n\";\n      dynamicFunction += \"baDynamicFn\";\n      dynamicFunction = eval(dynamicFunction);\n\n      // Call the dynamic function\n      control = dynamicFunction(self.initialParams);\n    } catch (e) {\n      // If the call fails, return the default user field\n      control = self.getUserFieldInstance(self.initialParams);\n    }\n\n    control.properties.isUserField = true;\n\n    // Save userfield instance\n    self.userfieldInstance = control;\n\n    // Create proxy methods from the wrapper to the userfield instance\n    self.replicateUserfieldMethods(control);\n\n    // Replicate renderchange event from wrapped element to grid if applies\n    self.userfieldInstance.bind(\"renderchange\", function () {\n      self.triggerHandler(\"renderchange\", arguments);\n    });\n\n    return control;\n  },\n\n  /**\r\n      * Load userfield into memory\r\n      */\n  loadUserfield: function loadUserfield(data) {\n    var self = this;\n    var styleContent = \"\";\n\n    self.properties.styleGuid = self.properties.styleGuid || Math.guid();\n\n    try {\n      // Parse data\n      try {\n        data = eval(data);\n      } catch (e) {\n        bizagi.log(\"Could not parse result userfield \" + self.userfieldName, e.message);\n      }\n\n      // Iterate elements\n      $.each(data, function (index, val) {\n        if (val.type === \"js\") {\n          try {var\n\n            replaceWithDevice = function replaceWithDevice(str) {\n              return str.replace(/bizagi.rendering/gi, \"bizagi.rendering.tablet\");\n            };\n\n            val.content = val.content.replace(/bizagi\\.rendering\\.[^\\s]+\\.extend(\\s|\\n|\\s)*\\((\\s|\\n|\\s)*\\\"bizagi\\.rendering\\.[^\\s]+\\\"/gmi, replaceWithDevice);\n            window.eval(val.content);\n          } catch (ex) {\n            bizagi.log(\"Could not parse result userfield3 \" + self.userfieldName, ex.message);\n          }\n        }\n\n        if (val.type === \"css\") {\n          styleContent += val.content;\n        }\n      });\n\n      if ($.trim(styleContent) !== \"\") {\n        bizagi.util.loadStyle(styleContent, self.properties.styleGuid);\n      }\n\n      // Replicate userfield methods to the wrapper\n      var control = eval(\"bizagi.rendering.\" + self.userfieldName);\n\n    } catch (e) {\n      bizagi.log(\"Could not parse result userfield \" + self.userfieldName, e.message);\n    }\n  },\n\n\n  getUserFieldInstance: function getUserFieldInstance(params) {\n    var mode = this.getMode();\n\n    // If the call fails, return the default user field\n    return mode === \"execution\" ?\n    new bizagi.rendering.tablet.defaultUserField(params) :\n    new bizagi.rendering.tablet.designUserField(params);\n  },\n\n  /*\r\n     *   Starts waiting signal for async stuff\r\n     */\n  startUserfieldLoading: function startUserfieldLoading() {\n    this.element.addClass(\"bz-form-userfield__loader\");\n  },\n\n  /*\r\n     *   Ends waiting for async stuff\r\n     */\n  endUserfieldLoading: function endUserfieldLoading() {\n    this.element.removeClass(\"bz-form-userfield__loader\");\n  } });\n\n\n// Auto-extension\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.basicUserField\", bizagi.rendering.userfieldDefinition.prototype);\nbizagi.rendering.tablet.basicUserField.extend(\"bizagi.rendering.tablet.basicUserField\", bizagi.rendering.basicUserField.prototype);\nbizagi.rendering.tablet.basicUserField.extend(\"bizagi.rendering.tablet.basicUserField\", {}, {\n\n  /*\r\n                                                                                              *   Constructor\r\n                                                                                              */\n  init: function init(params) {\n    var self = this;\n\n    // Call base\n    this._super(params);\n\n    // Check if the userfield is supported\n    if (!this.isSupported()) {\n      var form = self.getFormContainer();\n      form.addError(self.getResource(\"render-tablet-error-userfield\"));\n    }\n  },\n\n  /*\r\n     *   Template method to implement in each device to customize each render after processed\r\n     */\n  getEditableControl: function getEditableControl() {\n    if (!this.isSupported()) {\n      return bizagi.rendering.defaultUserField.prototype.getEditableControl.apply(this, arguments);\n    }\n  },\n\n  /*\r\n     *   Template method to implement in each device to customize each render after processed\r\n     */\n  getReadonlyControl: function getReadonlyControl() {\n    if (!this.isSupported()) {\n      return bizagi.rendering.defaultUserField.prototype.getReadonlyControl.apply(this, arguments);\n    }\n  },\n\n  /*\r\n     *   Returns if the userfield is supported in this device\r\n     */\n  isSupported: function isSupported() {\n    return true;\n  } });\n\n\n/*\r\n        *   Default implementation for user fields\r\n        */\nbizagi.rendering.tablet.basicUserField.extend(\"bizagi.rendering.tablet.defaultUserField\", {}, {\n\n  /*\r\n                                                                                                *   Template method to implement in each device to customize each render after processed\r\n                                                                                                */\n  getEditableControl: function getEditableControl() {\n    var self = this;\n    var control = self.getControl();\n    var properties = self.properties;\n    var controlName = properties.control.replace(/column/g, \"\");\n\n    self.input = $(\"<label>Userfield: \" + controlName + \" not found</label>\").appendTo(control);\n    self.input.addClass(\"ui-bizagi-render-userfield-notSupported\");\n\n    return self.input;\n  },\n\n  /*\r\n     *   Template method to implement in each device to customize each render after processed\r\n     */\n  getReadonlyControl: function getReadonlyControl() {\n    return this.getEditableControl();\n  },\n\n  /*\r\n     *  Dont send the data to the server\r\n     */\n  collectData: function collectData(renderValues) {\n  } });","/**\r\n *   Name: Bizagi Render Image Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the image render class to adjust to tablet devices\r\n */\n\n// Extends from render tablet base\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.image\", {\n  // Statics\n  BA_ACTION_PARAMETER_PREFIX: bizagi.render.services.service.BA_ACTION_PARAMETER_PREFIX,\n  BA_CONTEXT_PARAMETER_PREFIX: bizagi.render.services.service.BA_CONTEXT_PARAMETER_PREFIX,\n  BA_PAGE_CACHE: bizagi.render.services.service.BA_PAGE_CACHE },\nbizagi.rendering.image.prototype);\n\n// Extends itself\nbizagi.rendering.tablet.image.extend(\"bizagi.rendering.tablet.image\", {\n  QUALITY_PICTURE: 80,\n  EXTENSIONSIMG: [\"jpeg\", \"jpg\", \"png\"] },\n{\n\n  /**\r\n   * DOM input to handle HTML uploads\r\n   * @var $inputFile jQuery DOM\r\n   */\n  $inputFile: null,\n\n  /**\r\n                     * Whether or not is a native device 'Just a shortcut\r\n                     * @var isNative boolean\r\n                     */\n  isNative: false,\n\n  /**\r\n                    * Whether or not we are offline 'Just a shortcut\r\n                    * @var isOfflineForm boolean\r\n                    */\n  isOfflineForm: false,\n\n  /**\r\n                         * Update or init the element data\r\n                         * @param {} data\r\n                         */\n  initializeData: function initializeData(data) {\n    // Call base\n    this._super(data);\n\n    // Check if offline forms is supported\n    this.isOfflineForm = bizagi.util.isOfflineForm({ context: this });\n    this.isNative = bizagi.util.isCordovaSupported();\n\n    if (this.isOfflineForm) {\n      var maxFileSizeOfProperty = Number(this.properties.maxSize) || 1048576;\n      var maxFileSizeOfUser = typeof BIZAGI_SETTINGS !== \"undefined\" && typeof BIZAGI_SETTINGS.UploadMaxFileSize !== \"undefined\" ? Number(BIZAGI_SETTINGS.UploadMaxFileSize) : 1048576;\n      this.properties.maxSize = maxFileSizeOfProperty < maxFileSizeOfUser ? maxFileSizeOfProperty : maxFileSizeOfUser;\n    }\n  },\n\n  /**\r\n      * This method tries to get the HTML template an render the current object inside\r\n      * @return {jQuery} $.Deferred()\r\n      */\n  renderControl: function renderControl() {\n    var template = this.renderFactory.getTemplate(\"image\");\n\n    return $.fasttmpl(template, { url: \"\" });\n  },\n\n  getElementsToStylize: function getElementsToStylize(context) {\n    return $({});\n  },\n\n  /**\r\n      * There is no difference when rendering a readonly image, so...\r\n      * @return {jQuery} $.Deferred()\r\n      */\n  renderReadOnly: function renderReadOnly() {\n    var self = this;\n    var template = this.renderFactory.getTemplate(\"image-readonly\");\n\n    return self.buildItemUrl().\n    then(function (dataUrl) {\n      var url = dataUrl || \"\";\n\n      if (!self.isDisposed()) {\n        self.properties.url = url;\n        var html = $.fasttmpl(template, { url: self.properties.url });\n        return html;\n      }\n    });\n  },\n\n  /**\r\n      * After rendering element\r\n      */\n  postRender: function postRender() {\n    var $control = this.getControl();\n    this.$inputFile = $(\".bz-image__input\", $control);\n    this.$nativeFile = $(\".bz-image__native\", $control);\n\n    if (!this.isDesignMode())\n    this.showAsyncImage();\n  },\n\n  /**\r\n      * Add action handlers\r\n      */\n  configureHandlers: function configureHandlers() {\n    var self = this;\n    var $control = this.getControl();\n\n    // Attach all events\n    $control.on(\"click\", \"[data-action=upload]\", function (evt) {\n      self.choosePhoto();\n    });\n\n    if (this.isNative) {\n      self.configureNativeHandlers();\n    } else {\n      self.configureHybridHandlers();\n    }\n  },\n\n  configureNativeHandlers: function configureNativeHandlers() {\n    var self = this;\n    var $control = this.getControl();\n\n    // Upload Image Options\n    this.$nativeFile.off(\"click\").actionSheet({\n      actions: self.getUploadChoices(),\n      actionClicked: function actionClicked(action) {\n        switch (action.guid) {\n          case 1:\n            self.imageAdd();\n            break;\n          case 2:\n            self.imageAdd(true);\n            break;}\n\n      },\n      appear: function appear() {\n        self.triggerGlobalHandler(\"closeModalValidationMessage\", {});\n        self.triggerGlobalHandler(\"modalViewDidAppear\", {});\n      },\n      cancelClicked: function cancelClicked(action) {\n        self.triggerGlobalHandler(\"modalViewDidDisappear\", {});\n      } });\n\n\n    $(\".bz-image__resolution\", $control).off(\"click\").actionSheet({\n      actions: bizagi.util.media.getImageResolutionSizes(),\n      withoutCancel: true,\n      actionClicked: function actionClicked(action) {\n        bizagi.loading.start();\n        self.resolutionButtonHandler(action.guid).\n        always(function () {\n          bizagi.loading.stop();\n        });\n      },\n      appear: function appear(action) {\n        self.triggerGlobalHandler(\"closeModalValidationMessage\", {});\n        self.triggerGlobalHandler(\"modalViewDidAppear\", {});\n      },\n      cancelClicked: function cancelClicked(action) {\n        self.triggerGlobalHandler(\"modalViewDidDisappear\", {});\n      } });\n\n  },\n\n  configureHybridHandlers: function configureHybridHandlers() {\n    var self = this;\n\n    // Image change (Hybrid only)\n    this.$inputFile.off(\"change\").on(\"change\", function () {\n      self.imageAdd();\n      this.value = \"\";\n    });\n\n    // Just in case\n    this.$inputFile.off(\"click\").on(\"click\", function (evt) {\n      evt.stopPropagation();\n    });\n  },\n\n  /**\r\n      * Template method to implement in each device to customize the render's behaviour\r\n      * to add handlers when the control is readonly\r\n      */\n  configureHandlersReadOnly: function configureHandlersReadOnly() {\n    var self = this;\n    var $control = this.getControl();\n\n    $control.off(\"click\").on(\"click\", \".bz-image\", function () {\n      self.imagePreview();\n    });\n  },\n\n  /**\r\n      * Add an image\r\n      * @param useCamera boolean Whether or not to use device's camera\r\n      */\n  imageAdd: function imageAdd(useCamera) {\n    var self = this;\n\n    if (!this.isNative) {\n      self.imageAddHybrid();\n    } else {\n      self.imageAddNative(useCamera);\n    }\n  },\n\n  imageAddHybrid: function imageAddHybrid() {\n    var self = this;\n    var extensions = this.Class.EXTENSIONSIMG;\n    var dataFile = this.$inputFile[0].files[0];\n\n    dataFile.fullPath = this.$inputFile[0].value;\n    bizagi.loading.start();\n\n    if (bizagi.util.media.checkMaxSizeFile(dataFile, self.properties) && bizagi.util.media.checkFileTypes(dataFile, self.properties, extensions)) {\n      self.performUploadFile(dataFile).\n      always(function () {\n        bizagi.loading.stop();\n      });\n    } else {\n      bizagi.loading.stop();\n    }\n  },\n\n  imageAddNative: function imageAddNative(useCamera) {\n    var self = this;\n    var options = {\n      quality: self.Class.QUALITY_PICTURE,\n      targetWidth: 1280,\n      targetHeight: 960,\n      correctOrientation: true };\n\n\n    if (!useCamera) {\n      var coordinates = self.getControl()[0].getBoundingClientRect();\n\n      options = {\n        quality: self.Class.QUALITY_PICTURE,\n        sourceType: Camera.PictureSourceType.PHOTOLIBRARY,\n        popoverOptions: new CameraPopoverOptions(coordinates.left, coordinates.top - 20, 200, 100, 4),\n        destinationType: navigator.camera.DestinationType.FILE_URI,\n        correctOrientation: true };\n\n    }\n\n    navigator.camera.getPicture(\n    function (dataImage) {// on success\n      return self.imageAddNativeFromCamera(dataImage);\n    }, function () {// on fail \n      bizagi.loading.stop();\n    }, options);\n\n  },\n\n  imageAddNativeFromCamera: function imageAddNativeFromCamera(dataImage) {\n    var self = this;\n    bizagi.loading.start();\n\n    // Check max size, then get file data info and upload file\n    bizagi.util.media.checkMaxSize(dataImage, self.properties).\n    then(function () {\n      return bizagi.util.media.getFileDataInfo(dataImage);\n    }).\n    then(function (fileData) {\n      if (bizagi.util.media.checkFileTypes(fileData, self.properties, self.Class.EXTENSIONSIMG)) {\n\n        self.dataImage = dataImage;\n        self.fileProperties = fileData;\n\n        // \"new Blob\" constructor is not supported in android version 4.2.2\n        var version = bizagi.util.getAndroidVersion();\n        if (version && version <= 4.2 || self.isOfflineForm) {\n          self.performUploadFile(self.dataImage).\n          always(function () {\n            bizagi.loading.stop();\n          });\n        } else {\n\n          if (!bizagi.util.isAndroid()) {\n            return $.when(bizagi.util.media.modalResolutionUpload()).\n            then(function (buttonIndex) {\n              if (buttonIndex <= bizagi.util.media.getImageResolutionItems().length) {\n                return self.resolutionButtonHandler(buttonIndex);\n              }\n            });\n          } else {\n            // Force click to show actionsheet menu\n            $(\".bz-image__resolution\", self.getControl()).click();\n          }\n        }\n      }\n    }).\n    always(function () {\n      bizagi.loading.stop();\n    });\n  },\n\n  /**\r\n      * Remove the current image\r\n      */\n  imageDelete: function imageDelete() {\n    var self = this;\n\n    bizagi.loading.start();\n\n    return self.dataService.deleteImage({\n      url: self.properties.deleteUrl,\n      idRender: self.properties.id,\n      xpath: self.properties.xpath,\n      xpathContext: self.properties.xpathContext,\n      idPageCache: self.properties.idPageCache,\n      contexttype: self.properties.contexttype }).\n    then(function () {\n      self.properties.value = [];\n      self.uploadFileCompleted();\n    }).fail(function (msg) {\n      var message;\n      var responseText = msg.responseText;\n\n      try {\n        message = JSON.parse(responseText);\n        message = message.message || responseText;\n      } catch (e) {\n        message = responseText;\n      }\n\n      self.setValidationMessage(message);\n\n    }).always(function () {\n      bizagi.loading.stop();\n    });\n  },\n\n  /**\r\n      * Send file using HTTP\r\n      * @param dataFile\r\n      * @return {jQuery} $.Deferred()\r\n      */\n  uploadFile: function uploadFile(dataFile) {\n    var self = this;\n    self.properties.isChanged = true;\n\n    if (!this.isOfflineForm) {\n      if (this.isNative) {\n        return self.uploadFileNativeOnline(dataFile);\n      }\n      return self.uploadFileHybridOnline(dataFile);\n    }\n\n    // Offline code\n    if (bizagi.util.isEmpty(self.properties.value)) self.properties.value = [[null, null]];\n    var fileName = self.fileProperties != undefined ? self.fileProperties.name : dataFile.name;\n    self.dataService.fileService.changeOfflineImageName(self.properties.value, fileName);\n    return self.saveImageOffline(dataFile);\n  },\n\n  uploadFileNativeOnline: function uploadFileNativeOnline() {\n    var self = this;\n    var params = {};\n    var addParams = self.buildAddParams();\n    var fileName = self.fileProperties.name;\n\n    if (self.editedImageURL) {\n      params.dataFile = self.editedImageURL;\n    } else if (self.fileProperties) {\n      params.dataFile = self.fileProperties.url;\n    }\n\n    addParams.queueID = \"q_\" + bizagi.util.encodeXpath(self.getUploadXpath());\n\n    params.data = addParams;\n    params.options = new FileUploadOptions();\n    params.options.fileKey = \"file\";\n    params.options.fileName = fileName;\n    params.options.mimeType = \"image/jpeg\";\n    params.options.uploadKey = { key: addParams[\"h_xpath\"] };\n    params.options.addUrl = self.properties.addUrl;\n\n    //Cleans variables related previous uploads\n    self.editedImageURL = null;\n    self.fileProperties = null;\n\n    // Fix android 4.4 getting images from recent folder\n    params.dataFile = bizagi.util.media.getImagePath(params.dataFile);\n\n    return $.when(bizagi.util.media.uploadFile(params)).\n    then(function (result) {\n      var response = JSON.parse(decodeURIComponent(result.response));\n      if (response.type === \"error\") {\n        return $.Deferred().reject(response).promise();\n      }\n      return response;\n    });\n  },\n\n  uploadFileHybridOnline: function uploadFileHybridOnline(dataFile) {\n    var self = this;\n\n    if (bizagi.util.media.checkMaxSizeFile(dataFile, self.properties) &&\n    bizagi.util.media.checkFileTypes(dataFile, self.properties, self.Class.EXTENSIONSIMG)) {\n\n      return self.dataService.processUploadFile({\n        url: self.properties.addUrl,\n        formData: self.buildAddFileParams(dataFile) });\n\n\n    } else {\n      return $.Deferred().reject().promise();\n    }\n  },\n\n  /**\r\n      * File upload is done\r\n      */\n  uploadFileCompleted: function uploadFileCompleted() {\n    try {\n      this.showAsyncImage();\n      this.editedImageURL = null;\n    } catch (error) {\n      // TODO: Review scenario\n      this.getFormContainer().refreshForm();\n    }\n  },\n\n  /**\r\n      * Show async image\r\n      * */\n  showAsyncImage: function showAsyncImage() {\n    var self = this;\n    var $control = self.getControl();\n    var $wrapper = $(\".bz-input-icon\", $control);\n\n    self.renderUploadItem().\n    then(function (htmlImage) {\n      if (!self.isDisposed()) {\n\n        // Empty container and add new image\n        $wrapper.empty();\n        $wrapper.append(htmlImage);\n\n        var action = self.hasValue() ? \"update\" : \"upload\";\n\n        $wrapper.attr(\"data-action\", action);\n\n        // Attack events to overflow-menu\n        if (self.hasValue()) {\n          self.configureMenu();\n        }\n      }\n    });\n  },\n\n  /**\r\n      * resolutionButtonHandler\r\n      * @param ordinal\r\n      */\n  resolutionButtonHandler: function resolutionButtonHandler(ordinal) {\n    var self = this;\n    var actionSelected = ordinal || 0;\n\n    // If original, save image normally, if not, reduce quality and size\n    if (actionSelected === bizagi.util.media.ResolutionType.ORIGINAL) {\n      return self.performUploadFile(self.dataImage);\n    } else {\n\n      var resolution = bizagi.util.media.getImageResolution(actionSelected);\n\n      return $.when(bizagi.util.media.transformImageSize(self.dataImage, resolution)).\n      then(function (result) {\n\n        self.editedImageURL = result.localUrl;\n        self.properties.url = result.base64Image;\n\n        return self.performUploadFile(self.dataImage);\n      });\n    }\n  },\n\n  /**\r\n      * Render edition view\r\n      * @returns {}\r\n      */\n  imagePreview: function imagePreview() {\n    var self = this;\n    var baseParams = self.getParams();\n    var container = baseParams.navigation.createRenderContainer({\n      title: self.properties.displayName,\n      view: {\n        zoom: true,\n        useNativeScrolling: false } });\n\n\n\n    var template = self.renderFactory.getTemplate(\"image-preview\");\n    var imageData = { \"url\": self.properties.url && self.properties.url !== \"\" ? self.properties.url : \"\" };\n    var img = $.fasttmpl(template, imageData);\n\n    container.element.css(\"display\", \"none\");\n    self.inputEdition = container.element.html(img);\n    baseParams.navigation.navigate(container.id);\n\n    bizagi.loading.start();\n\n    var getFullImage = this.formCompatibilityVersion >= 2 ? function () {\n      return imageData.url;\n    } : self.buildFullItemUrl.bind(self);\n\n    $.when(getFullImage()).then(function (dataUrl) {\n      container.element.css(\"display\", \"block\");\n\n      if (dataUrl.indexOf(\"error\") < 0) {\n        var $preview = $(\".bz-image__preview-item:first\", container.element).attr(\"src\", dataUrl);\n        var originalImageWidth = $preview.css(\"width\");\n\n        originalImageWidth = Number(originalImageWidth.substring(0, originalImageWidth.length - 2));\n\n        if (self.properties.width !== -1 && self.properties.width < originalImageWidth) {\n          $preview.css(\"width\", \"100%\");\n        }\n      }\n    }).always(function () {\n      bizagi.loading.stop();\n    });\n  },\n\n  /**\r\n      * Build add params to send to the server\r\n      * @param {} dataFile\r\n      * @returns {}\r\n      */\n  buildAddFileParams: function buildAddFileParams(dataFile) {\n    var self = this;\n    var properties = self.properties;\n    var prefix = self.Class.BA_CONTEXT_PARAMETER_PREFIX;\n\n    // Get form data for POSTing\n    var formData = new FormData();\n    var form = self.getFormContainer();\n\n    // Build add params to send to the server\n    formData.append(prefix + \"xpath\", properties.xpath);\n    formData.append(prefix + \"idRender\", properties.id);\n    formData.append(prefix + \"xpathContext\", properties.xpathContext);\n    formData.append(prefix + self.Class.BA_PAGE_CACHE, properties.idPageCache);\n    formData.append(self.Class.BA_ACTION_PARAMETER_PREFIX + \"sessionId\", form.properties.sessionId);\n    formData.append(prefix + \"action\", \"savefile\");\n    formData.append(self.properties.xpath, dataFile);\n\n    if (properties.contexttype) {\n      formData.append(prefix + \"contexttype\", properties.contexttype);\n    }\n\n    try {\n      if (typeof BIZAGI_SESSION_NAME !== \"undefined\") {\n        formData.append(BIZAGI_SESSION_NAME, form.properties.sessionId);\n      } else {\n        formData.append(\"JSESSIONID\", form.properties.sessionId);\n      }\n    } catch (e) {\n      formData.append(\"JSESSIONID\", form.properties.sessionId);\n    }\n\n    return formData;\n  },\n\n  /**\r\n      * Call the form failhandler with an specific error\r\n      * @param {} error\r\n      * @returns {}\r\n      */\n  executeFormFailHandler: function executeFormFailHandler(error) {\n    var self = this;\n    var errorResponse = error.responseText ? error.responseText : bizagi.localization.getResource(\"workportal-general-error\");\n\n    self.getFormContainer().failHandler(errorResponse);\n  },\n\n  /**\r\n      * Execute upload file\r\n      * @param {} context\r\n      * @param {} dataImage\r\n      * @returns {}\r\n      */\n  performUploadFile: function performUploadFile(dataImage) {\n    var self = this;\n\n    return $.when(self.uploadFile(dataImage)).\n    then(function () {\n      if (bizagi.util.isEmpty(self.properties.value)) self.properties.value = [[0, \"uploaded\"]];\n      self.uploadFileCompleted();\n    }).fail(function (error) {\n      self.executeFormFailHandler(error);\n    });\n  },\n\n  /**\r\n      * Choose photo\r\n      */\n  choosePhoto: function choosePhoto() {\n    if (this.isNative) {\n      this.$nativeFile.click();\n    } else if (bizagi.util.media.fileAPISupported()) {\n      this.$inputFile.click();\n    }\n  },\n\n  /**\r\n      * Process an action in order to do something with the image\r\n      */\n  configureMenu: function configureMenu() {\n    var self = this;\n    var items = [];\n    var $control = this.getControl();\n    var $viewMore = $(\".bz-input-icon__input + .bz-icn\", $control);\n    var allowDelete = self.isOfflineForm ? false : self.properties.allowDelete && self.properties.editable;\n\n    items.push({\n      name: bizagi.localization.getResource(\"workportal-actionsheet-upload-image-preview\"),\n      fn: function fn() {\n        self.imagePreview();\n      } });\n\n\n    items.push({\n      name: bizagi.localization.getResource(\"workportal-actionsheet-upload-choose-photo\"),\n      fn: function fn() {\n        self.choosePhoto();\n      } });\n\n\n    if (allowDelete) {\n      items.push({\n        name: bizagi.localization.getResource(\"workportal-actionsheet-upload-remove-photo\"),\n        fn: function fn() {\n          bizagi.showConfirmationBox(self.getResource(\"render-grid-delete-confirmation\")).\n          then(function () {\n            self.imageDelete();\n          });\n        } });\n\n    }\n\n    $viewMore.overflowMenu({ items: items });\n  },\n\n  /**\r\n      * Add upload options\r\n      */\n  getUploadChoices: function getUploadChoices() {\n    return [\n    { \"guid\": 1, \"displayName\": bizagi.localization.getResource(\"workportal-actionsheet-upload-choose-photo\") },\n    { \"guid\": 2, \"displayName\": bizagi.localization.getResource(\"workportal-actionsheet-upload-take-photo\") }];\n\n  },\n\n  /**\r\n      * Builds the upload item url\r\n      * @param params\r\n      * @returns {*}\r\n      */\n  buildItemUrl: function buildItemUrl(params) {\n    var self = this;\n\n    if (self.isOfflineForm) {\n      return self.buildItemUrlOffline();\n    }\n\n    return self.buildItemUrlOnline(params);\n  },\n\n  buildItemUrlOffline: function buildItemUrlOffline() {\n    var self = this;\n    return bizagi.util.sleepUntil(function () {\n      return !self.dataService.getFileService().isLoading(self);\n    }).then(function () {\n      return bizagi.rendering.image.prototype.buildItemUrlOffline.apply(self, arguments);\n    });\n  },\n\n  buildItemUrlOnline: function buildItemUrlOnline() {\n    var self = this;\n    // Change directly properties.value in order to avoid collectData changes\n    return bizagi.rendering.image.prototype.buildItemUrl.apply(this, arguments).then(function (imageUrl) {\n      if (self.formCompatibilityVersion < 2) {\n        if (imageUrl.length > 0) {\n          self.properties.value = [[0, \"uploaded\"]];\n        } else {\n          self.properties.value = [];\n        }\n      }\n      return imageUrl;\n    });\n  },\n\n  collectData: function collectData(renderValues) {\n    var self = this;\n\n    if (self.isOfflineForm && bizagi.util.isOfflineFormsV2Supported()) {\n      if (!self.properties.isChanged) return;\n\n      var xpath = self.properties.xpath;\n      if (!bizagi.util.isEmpty(xpath)) {\n        renderValues[xpath] = {\n          offlineId: self.buildOfflineImageId(),\n          name: self.dataService.fileService.getOfflineImageName(self.getValue()) };\n\n      }\n    }\n  },\n\n  /**\r\n      * Cleans current value\r\n      */\n  cleanData: function cleanData() {\n    if (!this.hasValue()) return;\n    return $.when(this.imageDelete());\n  },\n\n  hasValue: function hasValue() {\n    var _hasValue = false;\n    var _value = this.properties.value || [];\n    if (_value.length > 0) {\n      _hasValue = true;\n    }\n    return _hasValue;\n  } });","/**\r\n *   Name: Bizagi Tablet Render Document Generator Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the document generator render class to adjust to tablet devices\r\n */\n\n// Extends from render tablet base\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.document\", bizagi.rendering.document.prototype);\n// Extends itself\nbizagi.rendering.tablet.document.extend(\"bizagi.rendering.tablet.document\", {\n  ACTION_SHOW: \"show\",\n  ACTION_DOWNLOAD: \"download\",\n  ACTION_DELETE: \"delete\" },\n{\n\n  /**\r\n   * This method tries to get the HTML template an render the current object inside\r\n   * @return {jQuery} $.Deferred()\r\n   */\n  renderControl: function renderControl() {\n    var self = this;\n    var template = this.renderFactory.getTemplate(self.getTemplate());\n    var documents = this.properties.value || [];\n\n    var data = {\n      downloadalldocuments: this.properties.downloadalldocuments,\n      allowgenerate: this.properties.allowGenerate,\n      noFiles: documents ? documents.length === 0 : true,\n      append: this.properties.append,\n      caption: this.properties.caption };\n\n\n    // Render template\n    var html = $.fasttmpl(template, data);\n\n    // Render current children\n    var items = this.renderDocumentsHtml(documents);\n    html = this.replaceFilesHtml(html, items);\n\n    // Render current children\n    var actions = this.renderActionsHtml(documents, data.noFiles, data.downloadalldocuments);\n    html = this.replaceActionsHtml(html, actions);\n\n    return html;\n  },\n\n  /**\r\n      * Method to customize each render after processed\r\n      */\n  postRender: function postRender() {\n    var $control = this.getControl();\n\n    this.$inputDocument = $(\".bz-document-template__container\", $control);\n    this.$listDocuments = $(\"[data-component=files]\", $control);\n    this.$listActions = $(\"[data-component=actions]\", $control);\n\n    this._super();\n  },\n\n  /**\r\n      * Method to render non editable values\r\n      * @returns {*|jQuery}\r\n      */\n  renderReadOnly: function renderReadOnly() {\n    var self = this;\n    var template = this.renderFactory.getTemplate(self.getTemplateReadonly());\n    var documents = this.properties.value || [];\n    var noFiles = documents ? documents.length === 0 : true;\n\n    // Render template\n    var html = $.fasttmpl(template, { noFiles: noFiles });\n\n    // Render current children\n    var items = this.renderDocumentsHtml(documents);\n    html = this.replaceFilesHtml(html, items);\n\n    return html;\n  },\n\n  /**\r\n      * Method to customize each render after processed in read-only mode\r\n      */\n  postRenderReadOnly: function postRenderReadOnly() {\n    var $control = this.getControl();\n\n    this.$listDocuments = $(\"[data-component=files]\", $control);\n  },\n\n  /**\r\n      * TMethod to customize the render's behaviour to add handlers\r\n      */\n  configureHandlers: function configureHandlers() {\n    var self = this;\n\n    // Attach handler\n    this.$inputDocument.on(\"click\", function (evt) {\n      self.properties.buttonExecuted = true;\n\n      if (self.properties.validate) {\n        // Check if the form is valid, then generate\n        if (self.validateContainer()) self.documentTemplateGenerate();\n      } else {\n        // Just generate the form\n        self.documentTemplateGenerate();\n      }\n\n      self.properties.buttonExecuted = false;\n    });\n\n    // Configure delete and preview handler\n    this.$listDocuments.on(\"click\", \"[data-action]\", function (evt) {\n      var $context = $(this);\n\n      var item = $context.parent(\".bz-document\");\n      var documentFile = item.data();\n      var action = $context.data(\"action\");\n\n      self.processAction(action, documentFile);\n    });\n\n    // Configure delete and download handler\n    self.$listActions.on(\"click\", \"[data-action]\", function (evt) {\n      var $context = $(this);\n\n      var item = $context.parent(\".bz-document__download\");\n      var documentFile = item.data();\n      var action = $context.data(\"action\");\n\n      self.processAction(action, documentFile);\n    });\n  },\n\n  /**\r\n      * Method to customize the render's behaviour to add handlers when the control is readonly\r\n      */\n  configureHandlersReadOnly: function configureHandlersReadOnly() {\n    var self = this;\n\n    // Configure delete and preview handler\n    this.$listDocuments.on(\"click\", \"[data-action]\", function (evt) {\n      var $context = $(this);\n\n      var item = $context.parent(\".bz-document\");\n      var documentFile = item.data();\n      var action = $context.data(\"action\");\n\n      self.processAction(action, documentFile);\n    });\n  },\n\n  /**\r\n      * This method must be implemented by the specific class of each device. (Virtual method)\r\n      * @param file\r\n      * @returns {*|*|*}\r\n      */\n  renderAllDocumentDownload: function renderAllDocumentDownload(file) {\n    var self = this;\n    var template = self.renderFactory.getTemplate(self.getTemplateDownload());\n    var url = self.buildAllDocumentsUrl();\n\n    // Don't render urls when not running in execution mode\n    if (!this.isExecutionMode()) url = \"javascript:void(0);\";\n\n    var html = $.fasttmpl(template, {\n      url: url,\n      filename: file.fileName,\n      joined: true });\n\n\n    return html;\n  },\n\n  /**\r\n      * Redraw documents when needed\r\n      * @param documents\r\n      * @param noFiles\r\n      * @param downloadAllDocuments\r\n      */\n  redrawDocuments: function redrawDocuments(documents, noFiles, downloadAllDocuments) {\n    var self = this;\n    var $control = self.getControl();\n    var $documentContainer = $(\"[data-component='files']\", $control);\n    var $actionContainer = $(\"[data-component='actions']\", $control);\n\n    // Clear current links\n    $documentContainer.empty();\n    $actionContainer.empty();\n\n    // Draw links again\n    var items = this.renderDocumentsHtml(documents);\n    $documentContainer.append(items);\n\n    // Check if there are documents and the flag to download all are available to show the link.\n    var actions = this.renderActionsHtml(documents, noFiles, downloadAllDocuments);\n    $actionContainer.append(actions);\n\n    //Set value\n    self.setValue(documents);\n  },\n\n  /**\r\n      * Method to customize each render after processed (Virtual method)\r\n      * @param url\r\n      * @param filename\r\n      */\n  showDocumentPreview: function showDocumentPreview(url, filename) {\n    var self = this;\n    bizagi.loading.start();\n\n    $.when(bizagi.util.media.downloadFile(url, filename)).\n    fail(function (error) {\n      if (error.responseText) {\n        self.getFormContainer().failHandler(error.responseText);\n      }\n    }).always(function () {\n      bizagi.loading.stop();\n    });\n  },\n\n  /**\r\n      * Process request of DocumentTemplateGenerate action\r\n      * @param documents\r\n      * @param noFiles\r\n      * @param downloadAllDocuments\r\n      */\n  resolveDocumentTemplateGenerate: function resolveDocumentTemplateGenerate(documents, noFiles, downloadAllDocuments) {\n    // Redraw documents\n    this.redrawDocuments(documents, noFiles, downloadAllDocuments);\n    this.value = documents;\n  },\n\n  /**\r\n      * Process request of DocumentTemplateGenerate action\r\n      * @param documents\r\n      * @param noFiles\r\n      * @param downloadAllDocuments\r\n      */\n  resolveDeleteDocumentTemplate: function resolveDeleteDocumentTemplate(documents, noFiles, downloadAllDocuments) {\n    // Redraw documents\n    this.redrawDocuments(documents, noFiles, downloadAllDocuments);\n    this.value = documents;\n  },\n\n  processAction: function processAction(action, documentFile) {\n    if (action === this.Class.ACTION_DELETE) {\n      this.deleteDocumentTemplate(documentFile.filename);\n    } else if (action === this.Class.ACTION_SHOW) {\n      this.showDocumentPreview(documentFile.url, documentFile.filename);\n    } else if (action === this.Class.ACTION_DOWNLOAD) {\n      this.showDocumentPreview(documentFile.url, documentFile.filename);\n    }\n  } });","/*\r\n*   Name: Bizagi Render Geolocation control\r\n*   Author: UI Forms Team\r\n*   Comments:\r\n*   -   This script will redefine the geolocation render class to adjust to tablet devices\r\n*/\n\n// Extends from render tablet base\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.geolocation\", bizagi.rendering.geolocation.prototype);\n// Extends itself\nbizagi.rendering.tablet.geolocation.extend(\"bizagi.rendering.tablet.geolocation\", {\n  ALLOW_UPDATE: \"update\" },\n{\n\n\n  /**\r\n   * Template method to implement in each device to customize each render after processed\r\n   */\n  postRender: function postRender() {\n    var $control = this.getControl();\n    this.coordinate = $control.find(\"input\");\n\n    // Call base\n    this._super();\n  },\n\n  /**\r\n      * Method to render non editable values\r\n      * @returns {*|jQuery}\r\n      */\n  renderReadOnly: function renderReadOnly() {\n    var template = this.renderFactory.getTemplate(\"readonly\");\n\n    return $.fasttmpl(template, { value: this.getDisplayValue() });\n  },\n\n  /**\r\n      * Method to customize each render after processed in read-only mode\r\n      */\n  postRenderReadOnly: function postRenderReadOnly() {\n    var $control = this.getControl();\n    this.coordinate = $control.find(\"input\");\n\n    // Call base\n    this._super();\n  },\n\n  /**\r\n      * Template method to implement in each device to customize the render's behaviour to add handlers\r\n      * @returns {}\r\n      */\n  configureHandlers: function configureHandlers() {\n    var self = this;\n    var $control = self.getControl();\n\n    // If the control doesn't have a value set the position\n    if (self.value == null) {\n      self.updateDisplayValue();\n    }\n\n    $control.on(\"click\", \"[data-action=\" + self.Class.ALLOW_UPDATE + \"]\", self.processAction.bind(self));\n\n  },\n\n  /**\r\n      * Sets the value in the rendered control\r\n      * @param {} value\r\n      * @returns {}\r\n      */\n  setDisplayValue: function setDisplayValue(value) {\n    var self = this;\n    var def = new $.Deferred();\n\n    if (value != null && value !== \"\") {\n      if (self.coordinate)\n      self.coordinate.val(self.performPrecision(value));\n\n      // Set internal value\n      self.setValue(value, false);\n      def.resolve();\n    } else {\n      var onSuccess = function onSuccess(position) {\n        var coordinates = position.coords.latitude + \" \" + position.coords.longitude;\n\n        self.coordinate.val(self.performPrecision(coordinates));\n\n        // Set internal value\n        self.setValue(coordinates, false);\n        def.resolve();\n      };\n\n      var onFail = function onFail(message) {\n        def.reject(message);\n      };\n\n      if (bizagi.util.isCordovaSupported() && bizagi.util.isiOSDevice()) {\n        navigator.geolocation.getCurrentPosition(onSuccess, onFail);\n      } else {\n        self.getCurrentPosition(onSuccess, onFail);\n      }\n    }\n\n    return def.promise();\n  },\n\n\n  updateDisplayValue: function updateDisplayValue() {\n    var self = this;\n\n    self.setDisplayValue().then(function () {\n      self.setValidationMessage(\"\");\n    }).fail(function (message) {\n      self.coordinate.val(\"\");\n      self.setValidationMessage(message);\n    });\n  },\n\n  /**\r\n      * Process an action in order to do something with the geolocation\r\n      */\n  processAction: function processAction() {\n    this.coordinate.empty();\n    this.updateDisplayValue();\n  },\n\n  getElementsToStylize: function getElementsToStylize($context) {\n    return this.properties.editable ? $(\"input\", $context) : $(\".readonly-control\", $context);\n  } });","/**\r\n * Tablet definition of Action Launcher\r\n *\r\n * @author: Ricardo Pérez\r\n */\n\n// Extends from render tablet base\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.actionLauncher\", bizagi.rendering.actionLauncher.prototype);\n// Extends itself\nbizagi.rendering.tablet.actionLauncher.extend(\"bizagi.rendering.tablet.actionLauncher\", {}, {\n  /**\r\n                                                                                                  * Render a specific implementation for Desktop device\r\n                                                                                                  */\n  postRender: function postRender() {\n    if (this.getMode() == \"design\") {\n      return;\n    }\n\n    var self = this;\n    var properties = self.properties;\n    var control = self.getControl();\n    self.actions = [];\n    self.startLoading();\n    // Define params to get list of actions        \n    $.when(self.dataService.multiaction().getActions(self.processPropertyValueArgs)).\n    then(function (response) {\n      response = self.getPropertiesActionLaucher(response);\n      self.actions = response;\n      self.deferredActions.resolve(response);\n\n      if (self.actions.length > 0) {\n        $(\"[data-element='actions-add-btn']\", control).show();\n      } else\n      {\n        $(\"[data-element='actions-add-btn']\", control).hide();\n      }\n\n      if (properties.isHorizontal) {\n        if (properties.templatetype != \"none\") {\n          return self.dataService.multiaction().getPropertyData(self.processPropertyValueDataTmplArgs).\n          then(function (templateData) {\n            return self.engine.render($.extend(templateData, {\n              isDefaultTemplate: properties.templatetype === \"default\",\n              sessionId: self.properties.sessionId }),\n            self.processPropertyValueDataTmplArgs);\n          }).then(function (tmpl) {\n            template = self.renderFactory.getTemplate(\"render-actionLauncher-horizontal\");\n            var html = $($.fasttmpl(template, {\n              template: true }));\n\n\n            $(\".bz-template\", html.wrap(\"<div>\").parent()).append(tmpl);\n            return html;\n          });\n        }\n      } else\n      {\n        template = self.renderFactory.getTemplate(\"render-actionLauncher-horizontal\");\n        return $.fasttmpl(template, {\n          template: false });\n\n      }\n    }).done(function (html) {\n      $(\"[data-element='template-container']\", control).append(html);\n      self.configureActionsHandlers();\n      self.configureTemplateHandlers();\n    }).always(function () {\n      self.endLoading();\n    });\n  },\n\n\n  /**\r\n      * Validates if the action launcher control contains a valid value\r\n      * @returns {boolean}\r\n      */\n  hasValue: function hasValue() {\n    var value = this.getValue();\n    return typeof value !== \"undefined\" && value !== null && value.length > 0;\n  },\n\n  /**\r\n      * Add binding to html elements\r\n      */\n  configureActionsHandlers: function configureActionsHandlers() {\n    var self = this;\n    var control = self.getControl();\n    var actionLauncherControls = $(\".action-launcher-control\", control);\n\n    //Binding for click action on buttons\n    actionLauncherControls.on(\"click\", function () {\n      var item = self.actions[parseInt($(this).data(\"index\"))];\n      var action = {\n        guidProcess: item[0],\n        guidAction: item[4],\n        displayName: item[1],\n        actionType: item[3],\n        xpathContext: typeof item[5] !== \"undefined\" && item[5] === \"true\",\n        readOnlyForm: item[6] || false,\n        guidEntity: self.properties.guidEntity,\n        xpathActions: self.properties.xpathActions || \"\" };\n\n\n      self.processAction(action);\n    });\n\n    var actions = [];\n    for (var i = 0, length = self.actions.length; i < length; i++) {\n      actions.push({\n        guid: self.actions[i][0],\n        displayName: self.actions[i][1] });\n\n    }\n\n\n    //Binding for click action sheet\n    $(\"[data-element='actions-add-btn']\", control).actionSheet({\n      actions: actions,\n      actionClicked: function actionClicked(action) {\n        var item = self.actions.find(function (element) {\n          return element[0] == action.guid;\n        });\n\n        self.processAction({\n          guidProcess: item[0],\n          guidAction: item[4],\n          displayName: item[1],\n          actionType: item[3],\n          xpathContext: typeof item[5] !== \"undefined\" && item[5] === \"true\",\n          readOnlyForm: item[6] || false,\n          xpathActions: self.properties.xpathActions || \"\" });\n\n      } });\n\n\n    //Catch the typed text in the search field and filter the action list\n    $.expr[\":\"].FilterAction = function (entity, i, array) {\n      var search = array[3];\n      if (!search) {\n        return false;\n      }\n      return new RegExp(search, \"i\").test($(entity).text());\n    };\n    $(\"input#ui-bizagi-render-action-launcher-filter-input\", control).keyup(function () {\n      var search = $(this).val();\n      $(\".action-launcher-control\", control).show();\n      if (search) {\n        $(\".action-launcher-control\", control).\n        not(\":FilterAction(\" + search + \")\").hide();\n      }\n    });\n  },\n  /**\r\n      *\r\n      */\n  configureTemplateHandlers: function configureTemplateHandlers() {\n    var self = this;\n    var control = self.getControl();\n\n    //Catch the event from the layout link\n    self.engine.subscribe(\"onLoadDataNavigation\", function (ev, params) {\n      params.filters = [];\n      self.triggerGlobalHandler(\"dataNavigation\", params);\n    });\n\n    $(\".bz-template-more-or-less\", control).bind(\"click\", function () {\n      $(\".bz-template\", control).toggleClass(\"bz-template--collapsed\");\n    });\n  },\n  /**\r\n      *\r\n      * @param action\r\n      */\n  processAction: function processAction(action) {\n    var self = this;\n    var control = self.getControl();\n    var properties = self.properties;\n    var multipleSelection = typeof properties.multipleSelection == \"undefined\" ? true : properties.multipleSelection;\n\n    if (multipleSelection) {\n      // If this is a form and has been queued, so open it\n      if (action.actionType == \"Form\" && self.countSameActions(action) >= 1 && !action.xpathContext) {\n        //Open action\n        $(\".action-to-execute-control[data-guidaction='\" + action.guidAction + \"'] label\", control).click();\n      } else {\n        $.when(self.actionManager(action)).done(function (act) {\n          self.executeAction(act);\n        });\n      }\n    } else if (self.getValue().length > 0) {\n      self.showConfirmationDialog(action);\n    } else {\n      $.when(self.actionManager(action)).done(function (act) {\n        self.executeAction(act);\n      });\n    }\n  },\n\n  /**\r\n      *\r\n      * @param data\r\n      * @param action\r\n      */\n  notifyExecution: function notifyExecution(data, action) {\n    var self = this;\n\n    if (data.response == \"success\") {\n      $.notifier.add({\n        class_name: \"success\",\n        title: action.displayName,\n        text: self.getResource(\"render-action-launcher-success-excecution\").replace('%s', action.displayName),\n        sticky: false });\n\n    } else {\n      $.notifier.add({\n        class_name: \"error\",\n        title: action.displayName,\n        text: self.getResource(\"render-action-launcher-failed-excecution\").replace('%s', action.displayName),\n        sticky: false });\n\n    }\n  },\n  /**\r\n      *\r\n      * @param action\r\n      * @returns {*}\r\n      */\n  processActionForm: function processActionForm(action) {\n    var self = this;\n    var properties = self.properties;\n    var formParams = self.getParams();\n\n    var additionalXpaths = self.properties.additionalXpath.join(\",\");\n    var xpathContext = action.xpathContext ? self.properties.xpathActions + \".\" + action.xpathContext : self.properties.xpathActions;\n    var def = new $.Deferred();\n\n    // Show dialog with new form after that\n    var slideForm = new bizagi.rendering.tablet.slide.form(self.dataService, self.renderFactory, {\n      title: properties.detailLabel || bizagi.localization.getResource(\"render-grid-details-form\"),\n      navigation: formParams.navigation,\n      showSaveButton: true,\n      cancelButtonLabel: bizagi.localization.getResource(\"render-form-dialog-box-close\"),\n      onSave: function onSave(data) {\n        // Submit the form\n        return self.dataService.multiaction().submitData({\n          action: \"SAVE\",\n          data: data,\n          xpathContext: slideForm.form.properties.xpathContext,\n          idPageCache: data.idPageCache,\n          isOfflineForm: false,\n          isActionStartForm: true }).\n        done(function (savedData) {\n          if (!action.editMode && self.countSameActions(action) === 0) {\n            action.idStartScope = savedData.IdScope;\n          }\n          def.resolve(savedData.IdScope);\n        });\n      },\n      onCancel: function onCancel(data) {\n\n      } });\n\n\n    var renderParams = {\n      \"idForm\": action.guidProcess,\n      \"contextType\": \"start\",\n      \"idCase\": self.properties.caseId,\n      \"idWorkitem\": self.typeForm != \"SummaryForm\" ? formParams.idWorkitem : undefined,\n      \"additionalXpaths\": additionalXpaths,\n      \"xpathContext\": xpathContext,\n      \"idStartScope\": action.idStartScope,\n      \"surrogateKey\": self.properties.surrogatedKey,\n      \"readOnlyForm\": action.readOnlyForm,\n      \"recordXpath\": action.recordXpath };\n\n\n    if (action.actionType === \"Form\") {\n      renderParams.contextType = \"entitytemplate\";\n      renderParams.xpathContext = undefined;\n      renderParams.guidEntity = action.guidEntity;\n      renderParams.rewriteContextType = true;\n    }\n\n    slideForm.render(renderParams);\n\n    return def.promise();\n  },\n  /**\r\n      *\r\n      * @param action\r\n      * @returns {*}\r\n      */\n  processActionFormCollection: function processActionFormCollection(action) {\n    var self = this;\n    var properties = self.properties;\n    var form = self.getFormContainer();\n    var additionalXpaths = self.properties.additionalXpath.join(\",\");\n    var def = new $.Deferred();\n    var xpathContext = action.xpathContext ? self.properties.xpathActions + \".\" + action.xpathContext : self.properties.xpathActions;\n    var xpathPattern = \"%s[id=%s]\";\n    var xpathPatternWithoutkey = \"%s[]\";\n    var xpathContextWithKey = xpathContext !== \"\" ? printf(xpathPattern, xpathContext, action.idEntity) : xpathContext;\n    var xpathContextWithoutKey = xpathContext !== \"\" ? printf(xpathPatternWithoutkey, xpathContext) : xpathContext;\n    var formParams = form.getParams();\n\n    var slideForm = new bizagi.rendering.tablet.slide.form(self.dataService, self.renderFactory, {\n      title: properties.detailLabel || bizagi.localization.getResource(\"render-grid-details-form\"),\n      navigation: formParams.navigation,\n      showSaveButton: true,\n      cancelButtonLabel: bizagi.localization.getResource(\"render-form-dialog-box-close\"),\n      onSave: function onSave(data) {\n        if (action.editMode) {\n          return self.dataService.multiaction().submitData({\n            action: \"SAVE\",\n            data: data,\n            xpathContext: xpathContextWithKey,\n            idPageCache: data.idPageCache,\n            isOfflineForm: false,\n            isActionStartForm: true }).\n          done(function (savedData) {\n            def.resolve(savedData.IdScope);\n          });\n        } else {\n          return self.dataService.addGridRecordData({\n            idRender: properties.id,\n            //xpath: properties.xpath,\n            xpathContext: xpathContext,\n            contexttype: \"start\",\n            idPageCache: data.idPageCache,\n            submitData: data }).\n          done(function (savedData) {\n            action.idStartScope = savedData.IdScope;\n            action.idEntity = savedData.IdEntity;\n            self.addActionToQueue(action);\n            def.resolve(savedData.IdScope);\n          });\n        }\n      },\n      onCancel: function onCancel(data) {\n\n      } });\n\n\n    slideForm.render({\n      \"idForm\": action.guidProcess,\n      \"contextType\": \"start\",\n      \"idCase\": formParams.idCase,\n      \"additionalXpaths\": additionalXpaths,\n      \"xpathContext\": action.editMode ? xpathContextWithKey : xpathContextWithoutKey,\n      \"idStartScope\": action.idStartScope,\n      \"surrogateKey\": self.properties.surrogatedKey,\n      \"readOnlyForm\": action.readOnlyForm,\n      \"recordXpath\": action.recordXpath });\n\n\n    return def.promise();\n  },\n  /**\r\n      * Process a start form\r\n      * @param args\r\n      * @return {*}\r\n      */\n  processStartForm: function processStartForm(args) {\n    var self = this;\n    var def = new $.Deferred();\n    args = args || {};\n    var formParams = self.getFormContainer().getParams();\n\n    // Show dialog\n    var slideForm = new bizagi.rendering.tablet.startForm(self.dataService, self.renderFactory, {\n      title: args.title || \"\",\n      navigation: formParams.navigation,\n      saveButtonLabel: self.typeForm == \"GlobalForm\" || self.typeForm == \"SummaryForm\" ?\n      bizagi.localization.getResource(\"render-form-button-create\") :\n      bizagi.localization.getResource(\"render-form-dialog-box-save\"),\n      onSave: function onSave(data) {\n        // Submit the form\n        return self.dataService.multiaction().submitData({\n          action: \"SAVE\",\n          data: data,\n          xpathContext: self.properties.xpathContext,\n          idPageCache: data.idPageCache,\n          isOfflineForm: false,\n          isActionStartForm: true }).\n        done(function (savedData) {\n          def.resolve(savedData.IdScope);\n        });\n      } });\n\n    // Render the search form\n    slideForm.render({\n      guidprocess: args.guidprocess,\n      idStartScope: args.idStartScope,\n      idCase: self.properties.caseId,\n      idWorkitem: self.typeForm != \"SummaryForm\" ? formParams.idWorkitem : undefined,\n      additionalXpaths: self.properties.additionalXpath.join(\",\"),\n      surrogatedKey: self.properties.surrogatedKey,\n      recordXpath: args.recordXpath,\n      mappingstakeholders: true });\n\n\n    return def.promise();\n  },\n  /**\r\n      *\r\n      * @param action\r\n      */\n  executeAction: function executeAction(action) {\n    var self = this;\n\n    if (self.typeForm == \"GlobalForm\" || self.typeForm == \"SummaryForm\") {\n      var message = bizagi.localization.getResource(\"render-action-launcher-immediatly-action-confirmation\");\n\n      $.when(bizagi.showConfirmationBox(message, \"Bizagi\", \"info\")).\n      done(function () {\n        self.executeActionImmediately(action);\n      });\n    } else {\n      self.addActionToQueue(action);\n    }\n  },\n\n  /**\r\n      * Show the confirmation dialog\r\n      * bizagi.createOkCancelPopup\r\n      * @param action\r\n      * */\n  showConfirmationDialog: function showConfirmationDialog(action) {\n    var self = this;\n    var message = bizagi.localization.getResource(\"render-action-launcher-single-action-confirmation\");\n\n    $.when(bizagi.showConfirmationBox(message, \"Bizagi\", \"info\")).\n    done(function () {\n      self.setValue([]);\n\n      $.when(self.actionManager(action)).done(function (act) {\n        self.executeAction(act);\n      });\n    });\n  },\n\n  /**\r\n      * Render actual value of control and set events\r\n      * @param data\r\n      */\n  setDisplayValue: function setDisplayValue(data) {\n    var self = this;\n    var control = self.getControl();\n    var actionsToExecuteContainer = $(\"[data-element='actions-container']\", control);\n    var template = self.renderFactory.getTemplate(\"render-actionLauncher-actions-to-execute\");\n\n    self.configureQueueVisibility();\n\n    $.when(self.deferredActions).done(function (listOfActions) {\n      var getMappingAction = function getMappingAction(guidAction) {\n        var mapping = [];\n        $.each(listOfActions, function (key, value) {\n          if (value[4] == guidAction) {\n            mapping = value;\n          }\n        });\n\n        return mapping;\n\n      };\n\n      $.each(data, function (key, value) {\n        var mapping = getMappingAction(value.guidAction);\n        data[key].displayName = mapping[1];\n        data[key].guidProcess = mapping[0];\n        data[key].actionType = mapping[3];\n        data[key].xpathContext = mapping[5];\n        data[key].readOnlyForm = mapping[6];\n\n        if (data[key].params && data[key].params.idStartScope) {\n          data[key].idStartScope = data[key].params.idStartScope;\n        }\n        if (data[key].params && data[key].params.idPageCache) {\n          data[key].idPageCache = data[key].params.idPageCache;\n        }\n        if (data[key].params && data[key].params.idEntity) {\n          data[key].idEntity = data[key].params.idEntity;\n        }\n      });\n\n      if (data.length > 0) {\n        $.when($.fasttmpl(template, { actions: data })).done(function (html) {\n          actionsToExecuteContainer.empty();\n          actionsToExecuteContainer.append(html);\n\n          var removeActionSelector = $(\".bz-actions-to-execute .bz-btn-icn\", actionsToExecuteContainer);\n          var openActionSelector = $(\"label\", actionsToExecuteContainer);\n\n          removeActionSelector.on(\"click\", function () {\n            var index = $(this).parent().data(\"index\");\n            self.removeActionToQueue(index);\n          });\n\n          openActionSelector.on(\"click\", function () {\n            var target = $(this).parent();\n            var type = target.data(\"actiontype\");\n            var guidprocess = target.data(\"guidprocess\");\n            var idStartScope = target.data(\"idstartscope\");\n            var title = target.data(\"title\");\n            // When undefined return string \"undefined\" instead of type \"undefined\"\n            var xpathContext = target.data(\"xpathcontext\");\n            var readOnlyForm = target.data(\"readonlyform\") || false;\n            var idEntity = target.data(\"identity\") || \"\";\n            var guidAction = target.data(\"guidaction\");\n            var recordXpath = xpathContext || self.properties.xpathContext;\n            switch (type) {\n              case \"Process\":\n                if (idStartScope) {\n                  self.processStartForm({\n                    guidprocess: guidprocess,\n                    idStartScope: idStartScope,\n                    title: title,\n                    xpathContext: xpathContext,\n                    recordXpath: recordXpath });\n\n                }\n                break;\n              case \"Form\":\n                var action = {\n                  guidProcess: guidprocess,\n                  idStartScope: idStartScope,\n                  editMode: true,\n                  xpathContext: xpathContext,\n                  readOnlyForm: readOnlyForm,\n                  idEntity: idEntity,\n                  recordXpath: recordXpath };\n\n\n                if (action.xpathContext) {\n                  self.processActionFormCollection(action);\n                } else {\n                  // Convert string \"undefined\" into type \"undefined\"\n                  action.xpathContext = undefined;\n\n                  // Add parameters if action form\n                  var extraParams = {};\n                  var dataAction = self.value.filter(function (item) {\n                    return item.guidAction == guidAction;\n                  });\n\n                  if (dataAction.length > 0) {\n                    extraParams = {\n                      actionType: \"Form\",\n                      contextType: \"entitytemplate\",\n                      guidEntity: self.properties.guidEntity || dataAction[0].guidEntity };\n\n                  }\n\n                  self.processActionForm($.extend(action, extraParams));\n                }\n                break;\n              case \"Rule\":\n                // Rules dont have forms or something like that\n                break;}\n\n          });\n        });\n      } else {\n        actionsToExecuteContainer.empty();\n      }\n\n    });\n  },\n  /**\r\n      * Show container if it has actions\r\n      */\n  configureQueueVisibility: function configureQueueVisibility() {\n    var self = this;\n    var control = self.getControl();\n    var actionsToExecuteContainer = $(\".bz-action-launcher-actions-to-execute-container\", control);\n    var actionsToExecuteTitle = $(\".action-to-execute-label\", control);\n\n    if (self.getValue().length > 0) {\n      actionsToExecuteContainer.show();\n      actionsToExecuteTitle.show();\n    } else {\n      actionsToExecuteContainer.hide();\n      actionsToExecuteTitle.hide();\n    }\n  } });","/**\r\n * Tablet definition of entity template\r\n *\r\n * @author: Ricardo Pérez\r\n */\n\nbizagi.rendering.tablet.actionLauncher.extend(\"bizagi.rendering.tablet.entityTemplate\", {}, {\n  /**\r\n                                                                                                  * Render a specific implementation for tablet device\r\n                                                                                                  */\n  postRender: function postRender() {\n    if (this.getMode() == \"design\") {\n      return;\n    }\n\n    var self = this;\n    var properties = self.properties;\n    var control = self.getControl();\n    self.actions = [];\n    self.configureQueueVisibility();\n    self.startLoading();\n\n    // Define params to get template               \n    self.dataService.multiaction().getPropertyData(self.processPropertyValueDataTmplArgs).\n    then(function (templateData) {\n      return self.engine.render(templateData, $.extend(self.processPropertyValueDataTmplArgs, { formParams: self.getFormParams() })).\n      then(function (tmpl) {\n        var template = self.renderFactory.getTemplate(\"render-actionLauncher-horizontal\");\n        var html = $($.fasttmpl(template, { template: true }));\n        $(\".bz-template\", html.wrap(\"<div>\").parent()).append(tmpl);\n\n        if (properties.allowactions) {\n          return self.dataService.multiaction().getActions(self.processPropertyValueArgs).\n          then(function (response) {\n            self.deferredActions.resolve(response);\n            self.actions = response;\n\n            if (self.actions.length > 0) {\n              $(\"[data-element='actions-add-btn']\", control).show();\n            } else\n            {\n              $(\"[data-element='actions-add-btn']\", control).hide();\n            }\n            return html;\n          });\n        } else\n        {\n          return html;\n        }\n      });\n\n    }).done(function (html) {\n      $(\"[data-element='template-container']\", control).append(html);\n      self.configureActionsHandlers();\n      self.configureTemplateHandlers();\n    }).always(function () {\n      self.endLoading();\n    });\n  },\n\n  /**\r\n      * Add binding to html elements\r\n      */\n  configureActionsHandlers: function configureActionsHandlers() {\n    var self = this;\n    var control = self.getControl();\n    var entityTemplateControls = $(\".action-launcher-control\", control);\n\n    /**\r\n                                                                          * Binding for click action on buttons\r\n                                                                          */\n    entityTemplateControls.on(\"click\", function () {\n      var item = self.actions[parseInt($(this).data(\"index\"))];\n      var action = {\n        guidProcess: item[0],\n        guidAction: item[4],\n        displayName: item[1],\n        actionType: item[3],\n        xpathContext: typeof item[5] !== \"undefined\" && item[5] === \"true\",\n        xpathActions: self.properties.xpathActions || \"\" };\n\n\n      if (action.actionType === \"Form\") {\n        action.xpathContext = undefined;\n        action.contextType = \"entitytemplate\";\n        action.guidEntity = self.properties.guidEntity;\n      }\n\n      self.processAction(action);\n    });\n\n    var actions = [];\n    for (var i = 0, len = self.actions.length; i < len; i++) {\n      actions.push({\n        guid: self.actions[i][0],\n        displayName: self.actions[i][1] });\n\n    }\n\n    /**\r\n       * Binding for click action sheet\r\n       */\n    $(\"[data-element='actions-add-btn']\", control).actionSheet({\n      actions: actions,\n      actionClicked: function actionClicked(action) {\n        var item = self.actions.find(function (e) {\n          return e[0] == action.guid;\n        });\n        self.processAction({\n          guidProcess: item[0],\n          guidAction: item[4],\n          displayName: item[1],\n          actionType: item[3],\n          xpathContext: typeof item[5] !== \"undefined\" && item[5] === \"true\" });\n\n      } });\n\n\n  },\n\n  configureTemplateHandlers: function configureTemplateHandlers() {\n    var self = this;\n    var control = self.getControl();\n    /**\r\n                                      * Catch the event from the layout link\r\n                                      */\n    self.engine.subscribe(\"onLoadDataNavigation\", function (ev, params) {\n      params.filters = [];\n      params.calculateFilters = params.calculateFilters || true;\n\n      self.triggerGlobalHandler(\"dataNavigation\", params);\n    });\n\n    $(\".bz-template-more-or-less\", control).bind(\"click\", function () {\n      $(\".bz-template\", control).toggleClass(\"bz-template--collapsed\");\n    });\n  } });","/**\r\n * Device definition of Polymorphic launcher\r\n *\r\n * @author: Ricardo Perez\r\n */\n\n// Extends from render tablet base\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.polymorphicLauncher\", bizagi.rendering.polymorphicLauncher.prototype);\n// Extends itself\nbizagi.rendering.tablet.polymorphicLauncher.extend(\"bizagi.rendering.tablet.polymorphicLauncher\", {}, {\n  /**\r\n                                                                                                            * Render a specific implementation for Tablet device\r\n                                                                                                            */\n  postRender: function postRender() {\n    var self = this;\n    var properties = self.properties;\n    var mode = self.getMode();\n    var html, template;\n\n    if (mode == \"design\" || !self.properties.surrogatedKey) {\n      return \"\";\n    }\n\n    self.configureQueueVisibility();\n\n    /**\r\n                                      * Define params to get list of actions\r\n                                      */\n    return $.when(self.dataService.multiaction().getPolymorphicActions(self.processPropertyValueArgs)).done(function (response) {\n      // Convert default response to tree data structure\n      response = self.dataService.serializePolymorphicActions(response);\n      self.totalActions = bizagi.clone(response);\n      var actions = bizagi.clone(response);\n      self.lessActions = bizagi.clone(actions);\n\n      // NOTE: Code extracted\n      var templateArguments = {\n        actions: actions,\n        allowSearch: properties.allowSearch,\n        treeActionsList: self.getTreeItems(actions) };\n\n      template = self.renderFactory.getTemplate(\"render-polymorphicLauncher-vertical-tree\");\n\n      var control = self.getControl();\n      var actionsContainer = $(\".bz-polymorphic-launcher__constructors\", control);\n      actionsContainer.append($.fasttmpl(template, templateArguments));\n      self.bindHandlers();\n    });\n  },\n\n  /**\r\n      * Get rendered html of each node of constructors\r\n      * @param actions\r\n      * @param level\r\n      * @return {string}\r\n      */\n  getTreeItems: function getTreeItems(actions, level) {\n    var self = this;\n    var item = \"<ul>\";\n    var templateTreeItem = self.renderFactory.getTemplate(\"render-polymorphicLauncher-vertical-tree-item\");\n    actions = actions || {};\n    level = level || 1;\n\n    $.each(actions, function (key, value) {\n      item += $.fasttmpl(templateTreeItem, value);\n\n      if (value.children) {\n        item += self.getTreeItems(value.children, level + 1);\n      }\n    });\n    item += \"</ul>\";\n    return item;\n  },\n\n  /**\r\n      * Add binding to html elements\r\n      */\n  bindHandlers: function bindHandlers() {\n    var self = this;\n    var control = self.getControl();\n    var actionLauncherControls = $(\".bz-polymorphic-launcher__constructors li span\", control);\n\n    //Binding for click action on buttons\n    actionLauncherControls.on(\"click\", function () {\n      var $targetData = $(this).parent();\n      var action = {\n        guidEntity: $targetData.data(\"guidentity\"),\n        guidObject: $targetData.data(\"guidobject\"),\n        guidConstructor: $targetData.data(\"guidconstructor\"),\n        displayName: $targetData.data(\"display-name\"),\n        actionType: $targetData.data(\"action-type\"),\n        xpathContext: $targetData.data(\"xpathcontext\") };\n\n      self.onActionClicked(action);\n    });\n    //Catch the typed text in the search field and filter the action list\n    $.expr[\":\"].FilterAction = function (entity, i, array) {\n      var search = array[3];\n      if (!search) {\n        return false;\n      }\n      return new RegExp(search, \"i\").test($(entity).text());\n    };\n    $(\"input[data-action=search]\", control).keyup(function () {\n      var search = $(this).val();\n      $(\".bz-polymorphic-launcher__constructors li\", control).show();\n      if (search) {\n        $(\".bz-polymorphic-launcher__constructors li\", control).not(\":FilterAction(\" + search + \")\").hide();\n      }\n    });\n\n  },\n  /**\r\n      * Execute an Action\r\n      * @param action\r\n      */\n  onActionClicked: function onActionClicked(action) {\n    var self = this;\n\n    $.when(self.actionManager(action)).done(function (act) {\n      self.executeAction(act);\n    });\n  },\n  /**\r\n      * Show a message when action has been executed\r\n      * @param status\r\n      * @param action\r\n      */\n  notifyExecution: function notifyExecution(status, action) {\n    var self = this;\n    if (status == \"success\") {\n      $.notifier.add({\n        class_name: \"success\",\n        title: action.displayName,\n        text: self.getResource(\"render-action-launcher-success-excecution\").replace('%s', action.displayName),\n        sticky: false });\n\n\n    } else {\n      $.notifier.add({\n        class_name: \"error\",\n        title: action.displayName,\n        text: self.getResource(\"render-action-launcher-failed-excecution\").replace('%s', action.displayName),\n        sticky: false });\n\n    }\n  },\n  /**\r\n      * Show a dialog with a form\r\n      * @param action\r\n      * @return {*}\r\n      */\n  processActionForm: function processActionForm(action) {\n    var self = this;\n    var properties = self.properties;\n    var form = self.getFormContainer();\n    var additionalXpaths = self.properties.additionalXpath.join(\",\");\n    var def = new $.Deferred();\n    var xpathContext = action.xpathContext || \"\";\n    var formParams = form.getParams();\n\n    var recordXpath = self.properties.recordXpath;\n\n    // Show dialog with new form after that\n    var slideForm = new bizagi.rendering.tablet.slide.form(self.dataService, self.renderFactory, {\n      title: properties.detailLabel || bizagi.localization.getResource(\"render-grid-details-form\"),\n      navigation: formParams.navigation,\n      showSaveButton: true,\n      cancelButtonLabel: bizagi.localization.getResource(\"render-form-dialog-box-close\"),\n      onSave: function onSave(data) {\n        var pageCache = data.idPageCache;\n        data.idPageCache = null;\n        // Submit the form\n        return self.dataService.multiaction().submitData({\n          action: \"SAVE\",\n          data: data,\n          xpathContext: slideForm.form.properties.xpathContext, //self.properties.xpathContext,\n          idPageCache: pageCache,\n          isOfflineForm: false,\n          isActionStartForm: true }).\n        done(function (savedData) {\n          if (!action.editMode && self.countSameActions(action) == 0) {\n            action.idStartScope = savedData.IdScope;\n          }\n          def.resolve(savedData.IdScope);\n        });\n      },\n      onCancel: function onCancel(data) {\n\n      } });\n\n\n    slideForm.render({\n      \"idForm\": action.guidObject,\n      \"contextType\": \"entity\",\n      \"guidEntity\": action.guidEntity,\n      \"idCase\": self.properties.caseId,\n      \"idWorkitem\": self.typeForm != \"SummaryForm\" ? formParams.idWorkitem : undefined,\n      \"additionalXpaths\": additionalXpaths,\n      //\"xpathContext\": xpathContext,\n      \"idStartScope\": action.idStartScope,\n      \"surrogateKey\": self.properties.surrogatedKey,\n      \"recordXpath\": recordXpath });\n\n\n    return def.promise();\n  },\n\n  /**\r\n      * Process a start form\r\n      * @param args\r\n      * @return {*}\r\n      */\n  processStartForm: function processStartForm(args) {\n    var self = this;\n    var properties = self.properties;\n    var form = self.getFormContainer();\n    var def = new $.Deferred();\n    var formParams = form.getParams();\n    args = args || {};\n\n\n    var slideForm = new bizagi.rendering.tablet.startForm(self.dataService, self.renderFactory, {\n      //showSaveButton: properties.editable,\n      maximized: properties.maximized,\n      title: args.title || \"\",\n      navigation: formParams.navigation,\n      saveButtonLabel: self.typeForm == \"GlobalForm\" || this.typeForm == \"SummaryForm\" ? bizagi.localization.getResource(\"render-form-button-create\") : bizagi.localization.getResource(\"render-form-dialog-box-save\"),\n      onSave: function onSave(data) {\n        form.startLoading();\n\n        // Submit the form\n        return self.dataService.multiaction().submitData({\n          action: \"SAVE\",\n          data: data,\n          xpathContext: self.properties.xpathContext,\n          idPageCache: data.idPageCache,\n          isOfflineForm: false,\n          isActionStartForm: true }).\n        done(function (savedData) {\n          form.endLoading();\n          def.resolve(savedData.IdScope);\n        });\n      } });\n\n\n    slideForm.render({\n      guidprocess: args.guidprocess,\n      idStartScope: args.idStartScope,\n      idCase: self.properties.caseId,\n      idWorkitem: self.typeForm != \"SummaryForm\" ? formParams.idWorkitem : undefined,\n      additionalXpaths: self.properties.additionalXpath.join(\",\"),\n      surrogatedKey: self.properties.surrogatedKey,\n      recordXpath: args.recordXpath,\n      mappingstakeholders: true });\n\n\n    return def.promise();\n  },\n  /**\r\n      * Execute and action if a form is global form or summary, or send to queue\r\n      * @param action\r\n      */\n  executeAction: function executeAction(action) {\n    var self = this;\n\n    if (self.typeForm == \"GlobalForm\" || self.typeForm == \"SummaryForm\") {\n      var message = bizagi.localization.getResource(\"render-action-launcher-immediatly-action-confirmation\");\n\n      $.when(bizagi.showConfirmationBox(message, \"Bizagi\", \"info\")).\n      done(function () {\n        self.executeActionImmediately(action);\n      });\n    } else {\n      self.addActionToQueue(action);\n    }\n  },\n\n  /**\r\n      * Show confirmation dialog\r\n      * @param action\r\n      */\n  showConfirmationDialog: function showConfirmationDialog(action) {\n    var self = this;\n    var message = bizagi.localization.getResource(\"render-action-launcher-single-action-confirmation\");\n\n    $.when(bizagi.showConfirmationBox(message, \"Bizagi\", \"info\")).\n    done(function () {\n      self.setValue([]);\n\n      $.when(self.actionManager(action)).\n      done(function (act) {\n        self.executeAction(act);\n      });\n    });\n  },\n\n  /**\r\n      * Render actual value of control and set events\r\n      * @param data\r\n      */\n  setDisplayValue: function setDisplayValue(data) {\n    var self = this;\n    var control = self.getControl();\n    var actionsToExecuteContainer = $(\".bz-polymorphic-launcher-constructors-to-execute-container\", control);\n    var template = self.renderFactory.getTemplate(\"render-polymorphicLauncher-actions-to-execute\");\n    self.configureQueueVisibility();\n\n    $.when($.fasttmpl(template, { actions: data })).done(function (html) {\n      actionsToExecuteContainer.empty();\n      actionsToExecuteContainer.append(html);\n      var removeActionSelector = $(\".bz-pill .bz-btn-icn\", actionsToExecuteContainer);\n      var openActionSelector = $(\".bz-pill__label\", actionsToExecuteContainer);\n      removeActionSelector.on(\"click\", function () {\n        var index = $(this).parent().data(\"index\");\n        self.removeActionToQueue(index);\n      });\n      openActionSelector.bind(\"click\", function () {\n        var $target = $(this).parent();\n        var type = $target.data(\"actiontype\");\n        var guidprocess = $target.data(\"guidprocess\");\n        var idStartScope = $target.data(\"idstartscope\");\n        var title = $target.data(\"title\");\n        var xpathContext = $target.data(\"xpathcontext\");\n        var idEntity = $target.data(\"identity\") || \"\";\n        var guidEntity = $target.data(\"guidentity\");\n        var recordXpath = xpathContext || self.properties.xpathContext;\n\n        switch (type) {\n          case \"Process\":\n            if (idStartScope) {\n              self.processStartForm({\n                guidprocess: guidprocess,\n                idStartScope: idStartScope,\n                title: title,\n                xpathContext: xpathContext,\n                recordXpath: recordXpath });\n\n            }\n            break;\n          case \"Form\":\n            var action = {\n              guidProcess: guidprocess,\n              idStartScope: idStartScope,\n              editMode: true,\n              xpathContext: xpathContext,\n              idEntity: idEntity,\n              guidEntity: guidEntity,\n              guidObject: guidprocess };\n\n\n            self.processActionForm(action);\n            break;\n          case \"Rule\":\n            // Rules dont have forms or something like that\n            break;}\n\n      });\n    });\n  },\n  /**\r\n      * Show container if it has actions\r\n      */\n  configureQueueVisibility: function configureQueueVisibility() {\n    var self = this;\n    var control = self.getControl();\n    var actionsToExecuteContainer = $(\".bz-polymorphic-launcher-constructors-to-execute-container\", control);\n    var actionsToExecuteTitle = $(\".bz-polymorphic-launcher__title\", control);\n    if (self.getValue().length > 0) {\n      actionsToExecuteContainer.show();\n      actionsToExecuteTitle.show();\n    } else {\n      actionsToExecuteContainer.hide();\n      actionsToExecuteTitle.hide();\n    }\n  } });","/*  \r\n *   Name: BizAgi Tablet Render list Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the list render class to adjust to desktop devices\r\n */\n\n// Extends from render tablet base\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.checkList\", bizagi.rendering.checkList.prototype);\n// Extends itself\nbizagi.rendering.tablet.checkList.extend(\"bizagi.rendering.tablet.checkList\", {}, {\n  /**\r\n                                                                                         *   Template method to implement in each device to customize each render after processed\r\n                                                                                         */\n  postRender: function postRender() {\n    this._super();\n    this.properties.unique = Math.ceil(Math.random() * 1000);\n    this.properties.required = true;\n  },\n\n  /**\r\n      *   Template method to implement in each device to customize the render's behaviour to add handlers\r\n      */\n  configureHandlers: function configureHandlers() {\n    var self = this;\n    // Call base\n    self._super();\n    $(\"input[type=checkbox]\", self.getControl()).bind(\"change\", function () {\n      var itemId = $(this).data(\"item-guid\");\n      self.onCheckListGroupChange(itemId, this.checked);\n    });\n  },\n\n  onCheckListGroupChange: function onCheckListGroupChange(itemId, checked) {\n    var self = this;\n    var item;\n    var items = $.grep(self.properties.items, function (element, index) {\n      return element.guid === itemId;\n    });\n    if (items && items.length > 0) {\n      item = items[0];\n    }\n    item.checked = checked;\n  },\n\n  /**\r\n      *   Sets the value in the rendered control\r\n      */\n  clearDisplayValue: function clearDisplayValue() {\n    $(\"input[type=checkbox]\", this.getControl()).removeAttr(\"checked\");\n  },\n\n  setDisplayValue: function setDisplayValue(value) {\n    var self = this;\n  } });","/*  \r\n *   Name: BizAgi Desktop Render list Extension\r\n *   Author: Iván Ricardo Taimal Narváez\r\n *   Comments:\r\n *   -   This script will redefine the list render class to adjust to desktop devices\r\n */\n\n// Extends from base list\nbizagi.rendering.tablet.checkList.extend(\"bizagi.rendering.tablet.activityCheckList\", {}, {\n  /**\r\n                                                                                              * Update or init the element data\r\n                                                                                              * @param data\r\n                                                                                              */\n  initializeData: function initializeData(data) {\n    // Call base\n    this._super(data);\n    var goal = this.properties.activityDescription && this.properties.activityDescription !== \"\" ?\n    bizagi.localization.getResource(\"workportal-project-plan-activity-goal\") + \": \" + this.properties.activityDescription : \"\";\n    this.properties.displayName = goal !== \"\" ? goal : bizagi.localization.getResource(\"workportal-project-plan-activity-work-title\");\n    this.properties.displayType = \"vertical\";\n  },\n  /*\r\n      *   Template method to implement in each device to customize each render after processed\r\n      */\n  postRender: function postRender() {\n    var self = this;\n    var $control = self.getControl();\n    // Call base\n    this._super();\n\n    self.newItemName = $(\".bz-checkList__input\", $control);\n    self.addEditButton = $(\".add-edit-item-button-checklist\", $control);\n    self.cancelEditButton = $(\".cancel-edit-item-button-checklist\", $control);\n\n    self.additionalElements();\n    self.notifyLoadItems();\n  },\n\n  notifyLoadItems: function notifyLoadItems() {\n    var self = this;\n    setTimeout(function () {\n      var resolvedItems = self.properties.items.filter(function (i) {\n        return i.resolved;\n      }).length;\n      bizagi.util.setItemLocalStorage(\"newChanges\", JSON.stringify({\n        'hasChanges': true,\n        'idActivity': self.properties.idActivity,\n        'itemsResolved': resolvedItems,\n        'items': self.properties.items,\n        'progress': self.properties.activityWork }));\n\n\n      bizagi.webpart.publish(\"onLoadDataItemsFromFormActivityPlan\", { \"items\": self.properties.items, \"activityWork\": self.properties.activityWork });\n    }, 100);\n  },\n\n  additionalElements: function additionalElements() {\n    var self = this;\n\n    if (self.addEditButton && self.addEditButton.length > 0) {\n      self.addEditButton.hide();\n    }\n    if (self.cancelEditButton && self.cancelEditButton.length > 0) {\n      self.cancelEditButton.hide();\n    }\n    //control.parent().addClass(\"render-activity-check\");\n  },\n\n  configureHandlers: function configureHandlers() {\n    var self = this;\n    var control = self.getControl();\n    this._super();\n    $(\"[data-action=add]\", control).unbind(\"click\").click(function () {\n      var itemSelected = $(\".bz-checkList__item.bz-checkList__item--selected\", self.control);\n      if (itemSelected.length <= 0) {\n        self.prepareNewItem();\n      } else {\n        $(\".bz-checkList__input\", itemSelected).focus();\n      }\n    });\n\n    $(\"[data-action=delete]\", self.control).bind(\"click\", function () {\n      var that = this;\n      var message = bizagi.localization.getResource(\"workportal-widget-reports-confirm\");\n      var contentHolder = $(this).closest(\".bz-checkList__item\");\n\n      contentHolder.addClass(\"ui-bizagi-to-remove\");\n\n      $.when(bizagi.showConfirmationBox(message, \"Bizagi\", \"info\")).\n      done(function () {\n\n        var itemId = $(that).closest(\".bz-checkList__item\").data(\"item-guid\");\n\n        self.deleteItem(itemId);\n      }).fail(function () {\n        contentHolder.removeClass(\"ui-bizagi-to-remove\");\n      });\n    });\n\n    $(\"label[data-action=edit-item]\", self.control).bind(\"click\", function () {\n      var element = $(this).closest(\".bz-checkList__item\");\n      var itemId = element.data(\"item-guid\");\n      var itemPosition = element.data(\"item-position\");\n\n      self.selectItem(itemId, itemPosition);\n    });\n  },\n\n  selectItem: function selectItem(itemId) {\n    var self = this;\n\n    for (var i = 0, length = self.properties.items.length; i < length; i++) {\n      if (self.properties.items[i].guid === itemId) {\n        self.properties.items[i].selected = true;\n      } else {\n        self.properties.items[i].selected = false;\n      }\n    }\n\n    self.repaintControl();\n\n    var itemSelected = $(\".bz-checkList__item.bz-checkList__item--selected\", self.getControl());\n    var itemSelectedName = $(\".bz-checkList__input\", itemSelected);\n    var itemContent = itemSelectedName.val();\n\n    itemSelectedName.focus();\n    itemSelectedName[0].setSelectionRange(itemContent.length, itemContent.length);\n\n    self.addSelectedHandlers();\n  },\n\n  deleteItem: function deleteItem(itemId) {\n    var self = this;\n\n    for (var i = 0, length = self.properties.items.length; i < length; i++) {\n      if (self.properties.items[i].guid === itemId) {\n        self.properties.items.splice(i, 1);\n        break;\n      }\n    }\n\n    self.setValue(self.properties.items);\n    self.repaintControl();\n    self.addSelectedHandlers();\n  },\n\n  prepareNewItem: function prepareNewItem() {\n    var self = this;\n    var newItem = {\n      guid: Math.guid(),\n      resolved: false,\n      name: \"\",\n      selected: true };\n\n\n    self.properties.items.push(newItem);\n    self.repaintControl();\n    self.newItemName.focus();\n\n    self.newItemName.blur(function () {\n      var itemSelected = $(\".bz-checkList__item.bz-checkList__item--selected\", self.control);\n      var itemSelectedName = $(\".bz-checkList__input\", itemSelected);\n      var valueInput = itemSelectedName.val();\n\n      if (valueInput === \"\" && self.properties.items && self.properties.items.length >= 1 &&\n      self.properties.items.slice(-1)[0].name === \"\") {\n        self.properties.items.pop();\n      }\n    });\n    self.addSelectedHandlers();\n    self.newItemName.keypress(function (event) {\n      if (event.which == 13) {\n        event.preventDefault();\n        self.addItem();\n        self.prepareNewItem();\n      }\n    });\n  },\n\n  addSelectedHandlers: function addSelectedHandlers() {\n    var self = this;\n    var itemSelected = $(\".bz-checkList__item.bz-checkList__item--selected\", self.control);\n    var itemSelectedName = $(\".bz-checkList__input\", itemSelected);\n    itemSelectedName.focus();\n    $(\"[data-action=accept-edit]\", itemSelected).bind(\"click\", function () {\n      var newItemName = itemSelectedName.val();\n      if (newItemName && newItemName !== \"\") {\n        self.addItem();\n      }\n    });\n\n\n    $(\"[data-action=cancel-edit]\", itemSelected).bind(\"click\", function (e) {\n      var newItemName = itemSelectedName.val();\n      var element = $(this).closest(\".bz-checkList__item\");\n      var itemPosition = element.data(\"item-position\");\n      var guidItem = element.data(\"item-guid\");\n\n      if (newItemName && newItemName !== \"\" && self.properties.items[itemPosition].name !== \"\") {\n        self.properties.items[itemPosition].selected = false;\n      }\n      if (newItemName === \"\" || self.properties.items[itemPosition].name === \"\") {\n        self.deleteItem(guidItem);\n      }\n      //self.addButton.show();\n      self.repaintControl();\n    });\n  },\n\n  addItem: function addItem() {\n    var self = this;\n    var $control = self.getControl();\n\n    var itemSelected = $(\".bz-checkList__item.bz-checkList__item--selected\", $control);\n    var itemSelectedName = $(\".bz-checkList__input\", itemSelected);\n    var newItemName = itemSelectedName.val();\n\n    $.each(self.properties.items, function (index, item) {\n      if (item.selected) {\n        item.name = newItemName;\n        item.selected = false;\n      }\n    });\n    self.updateOriginalValue();\n    self.setValue(self.properties.items);\n    self.repaintControl();\n  },\n\n  repaintControl: function repaintControl() {\n    var self = this;\n    var checkListHtml = self.renderControl();\n    $(\"[data-component=checkList]\", self.control).replaceWith(checkListHtml);\n    self.postRender();\n    self.configureHandlers();\n  },\n\n  onCheckListGroupChange: function onCheckListGroupChange(itemId, checked) {\n    var self = this;\n    var item;\n    var items = $.grep(self.properties.items, function (element, index) {\n      return element.guid === itemId;\n    });\n    if (items && items.length > 0) {\n      item = items[0];\n    }\n    item.resolved = checked;\n    self.setValue(self.properties.items);\n    self.refreshValue(self.properties.items);\n  },\n\n  refreshValue: function refreshValue(items) {\n    var self = this,\n    length = items.length,\n    completed = 0;\n\n    for (var i = 0; i < length; i++) {\n      if (items[i].resolved) {\n        completed += 1;\n      }\n    }\n\n    if (length > 0) {\n      self.properties.activityWork = Math.floor(100 * completed / length);\n    } else\n    {\n      self.properties.activityWork = 100;\n    }\n\n    self.notifyLoadItems();\n  },\n\n  getValue: function getValue() {\n    var self = this;\n    return self.value || [];\n  },\n\n  controlValueIsChanged: function controlValueIsChanged() {\n    var self = this;\n    var originalValue = JSON.stringify(self.properties.originalValue);\n    var newValue = JSON.stringify(self.value);\n    return originalValue !== newValue;\n  },\n\n  /*\r\n      *   Updates original value for some comparisons\r\n      */\n  updateOriginalValue: function updateOriginalValue() {\n    var self = this;\n    self.properties.originalValue = bizagi.clone(self.value);\n  },\n\n  /*\r\n      *   Add the render data to the given collection in order to send data to the server\r\n      */\n  collectData: function collectData(renderValues) {\n    var self = this;\n    var properties = self.properties;\n\n    // Add the render value\n    var xpath = properties.xpath;\n    var value = self.getValue();\n    var idActivity = self.properties.idActivity;\n\n    if (self.controlValueIsChanged()) {\n      // Filter by valid xpaths and valid values\n      if (!bizagi.util.isEmpty(xpath) && !bizagi.util.isEmpty(idActivity)) {\n        if (Array.isArray(value)) {\n          renderValues[properties.xpath] = {\n            idActivity: idActivity,\n            items: value };\n\n        } else if (value === \"\") {\n          renderValues[properties.xpath] = \"\";\n        }\n      }\n    } else {\n      bizagi.util.setItemLocalStorage(\"newChanges\", JSON.stringify({\n        'hasChanges': false }));\n\n    }\n  },\n\n  isValid: function isValid(invalidElements) {\n    var self = this,\n    properties = self.properties,\n    message;\n    var items = self.getValue();\n    message = self.getResource(\"render-activity-check-list-validation\");\n    for (var i = 0; i < items.length; i += 1) {\n      var item = items[i];\n      if (!item.resolved) {\n        invalidElements.push({\n          xpath: properties.xpath,\n          message: message });\n\n        break;\n      }\n    }\n  } });","/*  \r\n *   Name: Bizagi Tablet Range Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the range render class to adjust to tablet devices\r\n */\n\n// Extends from render Tablet base\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.range\", bizagi.rendering.range.prototype);\n// Extends itself\nbizagi.rendering.tablet.range.extend(\"bizagi.rendering.tablet.range\", {}, {\n\n  /**\r\n                                                                             * Render a specific implementation for tablet device\r\n                                                                             */\n  postRender: function postRender() {\n    var properties = this.properties;\n  },\n  /**\r\n      * Render actual value of control and set events\r\n      * @param data\r\n      */\n  setDisplayValue: function setDisplayValue(data) {\n    var control = this.getControl();\n  } });","/*  \r\n *   Name: Bizagi Tablet Range Date Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the range date render class to adjust to tablet devices\r\n */\n\n// Extends from range tablet base\nbizagi.rendering.tablet.range.extend(\"bizagi.rendering.tablet.rangeDate\", bizagi.rendering.rangeDate.prototype);\n// Extends itself\nbizagi.rendering.tablet.rangeDate.extend(\"bizagi.rendering.tablet.rangeDate\", {}, {\n\n  /**\r\n                                                                                     * Render actual value of control and set events\r\n                                                                                     * @param data\r\n                                                                                     */\n  setDisplayValue: function setDisplayValue(data) {\n    var control = this.getControl();\n  } });","/*  \r\n *   Name: Bizagi Tablet Range Date Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the range date render class to adjust to tablet devices\r\n */\n\n// Extends from range tablet base\nbizagi.rendering.tablet.range.extend(\"bizagi.rendering.tablet.rangeMoney\", bizagi.rendering.rangeMoney.prototype);\n// Extends itself\nbizagi.rendering.tablet.rangeMoney.extend(\"bizagi.rendering.tablet.rangeMoney\", {}, {\n\n  /**\r\n                                                                                       * Render a specific implementation for Desktop device\r\n                                                                                       */\n  postRender: function postRender() {\n    var minControl = new bizagi.rendering.money(this.getRenderProperties(\"min\"));\n    var maxControl = new bizagi.rendering.money(this.getRenderProperties(\"max\"));\n\n    this.setRanageControls(minControl, maxControl);\n  },\n\n  getRenderProperties: function getRenderProperties(typeRangeControl) {\n    var self = this;\n    var form = self.getFormContainer();\n    var properties = self.properties;\n\n    var renderProperties = {\n      data: {\n        properties: {\n          \"id\": properties.id,\n          \"xpath\": properties.xpath } },\n\n\n      mode: \"execute\",\n      parent: form,\n      renderFactory: self.renderFactory,\n      resources: bizagi.localization,\n      dataService: self.dataService };\n\n\n    if (typeRangeControl === \"min\") {\n      renderProperties.data.properties.displayName = \"From\";\n    } else {\n      renderProperties.data.properties.displayName = \"To\";\n    }\n\n    return renderProperties;\n  },\n\n  /**\r\n      * Render actual value of control and set events\r\n      * @param data\r\n      */\n  setDisplayValue: function setDisplayValue(data) {\n    var self = this;\n    var control = self.getControl();\n  } });","/*  \r\n *   Name: Bizagi Tablet Range Date Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the range date render class to adjust to tablet devices\r\n */\n\n// Extends from range tablet base\nbizagi.rendering.tablet.range.extend(\"bizagi.rendering.tablet.rangeNumber\", bizagi.rendering.rangeNumber.prototype);\n// Extends itself\nbizagi.rendering.tablet.rangeNumber.extend(\"bizagi.rendering.tablet.rangeNumber\", {}, {\n\n  /**\r\n                                                                                         * Render a specific implementation for Desktop device\r\n                                                                                         */\n  postRender: function postRender() {\n    var self = this;\n\n    var minControl = new bizagi.rendering.number(self.getRenderProperties(\"min\"));\n    var maxControl = new bizagi.rendering.number(self.getRenderProperties(\"max\"));\n\n    self.setRanageControls(minControl, maxControl);\n  },\n\n  getRenderProperties: function getRenderProperties(typeRangeControl) {\n    var self = this;\n    var form = self.getFormContainer();\n    var properties = self.properties;\n\n    var renderProperties = {\n      data: {\n        properties: {\n          \"id\": properties.id,\n          \"xpath\": properties.xpath } },\n\n\n      mode: \"execute\",\n      parent: form,\n      renderFactory: self.renderFactory,\n      resources: bizagi.localization,\n      dataService: self.dataService };\n\n\n    if (typeRangeControl === \"min\") {\n      renderProperties.data.properties.displayName = \"From\";\n    } else {\n      renderProperties.data.properties.displayName = \"To\";\n    }\n\n    return renderProperties;\n  },\n\n  /**\r\n      * Render actual value of control and set events\r\n      * @param data\r\n      */\n  setDisplayValue: function setDisplayValue(data) {\n    var self = this;\n    var control = self.getControl();\n  } });","/*\r\n*   Name: BizAgi Tablet Column Decorator Extension\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will redefine the column decorator class to adjust to tablet devices\r\n*/\n\n// Extends itself\nbizagi.rendering.columns.column.extend(\"bizagi.rendering.tablet.columns.column\", {}, {\n\n  /*\r\n                                                                                       *   Apply custom overrides to each decorated instance\r\n                                                                                       */\n  applyOverrides: function applyOverrides(decorated) {\n    // Hacks the getControl method in the decorated render to add features\n    if (decorated && decorated.getControl) {\n      this.originalGetControl = decorated.getControl;\n      decorated.getControl = this.getControl;\n    }\n  },\n\n  /*\r\n     *   Template method to get the control element\r\n     *   This code runs under the decorated element context\r\n     */\n  getControl: function getControl() {\n    var self = this;\n    var result = this._super();\n\n    if (!result || result.length == 0) {\n      result = $(self.element || self.observableElement);\n    }\n\n    return result;\n  },\n\n  /*\r\n     *   Returns the in-memory processed element \r\n     *   so the caller could append it to any place\r\n     */\n  render: function render(surrogateKey, value, tableCell) {\n    var result = this._super(surrogateKey, value, tableCell);\n    var decorated = this.getDecorated(surrogateKey);\n    if (decorated.element) {\n      // Clean all display types\n      decorated.element.removeClass(\"ui-bizagi-render-display-normal ui-bizagi-render-display-vertical ui-bizagi-render-display-reversed\").\n      removeClass(\"ui-bizagi-render-display-vertical-reversed ui-bizagi-render-display-label ui-bizagi-render-display-value\");\n    }\n\n    return result;\n  },\n\n  /*\r\n     *   Returns the cell html to be inserted in the table\r\n     */\n  /* renderReadOnly: function (surrogateKey, value, tableCell) {\r\n             var self = this;\r\n             var decorated = this.getDecorated(surrogateKey);\r\n             var cell = this._super(surrogateKey, value, tableCell);\r\n               // Just draw render if the cell layout has been filled\r\n             if (cell && cell.length > 0) {\r\n                   // Add display value\r\n                 $(\".ui-bizagi-cell-readonly\", cell).html(decorated.getDisplayValue());\r\n                   // Apply styles to cell\r\n                 self.applyColumnStyles(cell);\r\n                   // Return just content\r\n                 return cell;\r\n             }\r\n               return \"\";\r\n         },*/\n\n\n\n\n\n\n  postRenderReadOnly: function postRenderReadOnly(surrogateKey, cell) {\n\n    var self = this;\n    var decorated = self.getDecorated(surrogateKey);\n    var editable = self.properties.editable;\n    decorated.properties.editable = false;\n\n    if (decorated.grid == undefined) {\n      decorated.grid = self.grid;\n    }\n    if (self.properties.singleInstance) {\n      decorated.element = cell;\n    }\n    decorated.postRenderElement(cell);\n    decorated.properties.editable = editable;\n\n    /*var self = this;\r\n                                              var properties = self.properties;\r\n                                                // Call base\r\n                                                // var decorated = this.getDecorated(surrogateKey);\r\n                                              this._super(key, cell);\r\n                                                // Just draw render if the cell layout has been filled\r\n                                              if (cell && cell.length > 0) {\r\n                                              var cellIcon = $(\".ui-bizagi-cell-icon\", cell);\r\n                                              if (!properties.editable) cellIcon.detach();\r\n                                                // Apply styles to cell\r\n                                              self.applyColumnStyles(cell);\r\n                                                if (properties.align == \"left\") {\r\n                                              cellIcon.addClass(\"ui-bizagi-cell-icon-right\");\r\n                                              }\r\n                                              }*/\n\n\n\n\n\n  },\n\n  /*\r\n     *   Apply column styles to a specified element\r\n     */\n  applyColumnStyles: function applyColumnStyles(element) {\n    var self = this;\n    var properties = self.properties;\n    element = $(element);\n    // Set cell alignment\n    element.css(\"-webkit-box-pack\", properties.align);\n\n    // Set cell back color\n    if (properties.textFormat.background) {\n      element.css(\"background-color\", properties.textFormat.background);\n      element.css(\"background-image\", \"none\");\n    }\n  },\n\n  isValueValid: function isValueValid(surrogateKey, value, messages, propertyOverrides) {\n    var isValid = this._super(surrogateKey, value, messages, propertyOverrides);\n    var decorated = this.getDecorated(surrogateKey);\n\n    if (decorated && decorated.element) {\n      if (!isValid) {\n        decorated.element.addClass(\"bz-form-item--error\");\n      } else {\n        decorated.element.removeClass(\"bz-form-item--error\");\n      }\n    }\n\n    return isValid;\n  } });","/**\r\n *   Name: Bizagi Tablet Render Document Generator Extension\r\n *   Author: Bizagi UI Forms\r\n *   Comments:\r\n *   -   This script will redefine the document generator render class to adjust to tablet devices\r\n */\n\n// Extends itself\nbizagi.rendering.tablet.columns.column.extend(\"bizagi.rendering.tablet.columns.document\", {}, {\n\n  /**\r\n                                                                                                 * Apply custom overrides to each decorated instance\r\n                                                                                                 * @param decorated\r\n                                                                                                 */\n  applyOverrides: function applyOverrides(decorated) {\n    var self = this;\n    var mode = self.getMode();\n\n    self._super(decorated);\n\n    if (mode !== \"design\") {\n      self.surrogateKey = decorated.surrogateKey;\n\n      decorated.getXpath = this.getXpath;\n      decorated.getDocumentXpath = this.getDocumentXpath;\n      decorated.getContextXpath = this.getContextXpath;\n      decorated.documentTemplateGenerate = this.documentTemplateGenerate;\n      decorated.preRenderControl = this.preRenderControl;\n      decorated.deleteDocumentTemplate = this.deleteDocumentTemplate;\n      decorated.properties.xpathContext = self.getContextXpath();\n    }\n  },\n\n  /**\r\n      * This method tries to get the HTML template an render the current object inside\r\n      * @return {jQuery} $.Deferred()\r\n      */\n  renderControl: function renderControl() {\n    this.preRenderControl();\n\n    return this._super();\n  },\n\n  /**\r\n      * Creates the event of generation of templates.\r\n      */\n  documentTemplateGenerate: function documentTemplateGenerate() {\n    var self = this;\n    var properties = self.properties;\n\n    self.startLoading();\n\n    //Get the context xPath\n    properties.xpathcontext = self.getContextXpath();\n    properties.xpath = self.getDocumentXpath(properties.xpath);\n\n    var grid = self.parent;\n    var form = self.getFormContainer();\n\n    $.when(form.submitData()).done(function () {\n      $.when(self.dataService.generateDocumentTemplate(properties)).done(function (response) {\n        $.when(grid.refresh()).done(function () {\n          self.autoOpenDocuments();\n        });\n\n        self.endLoading();\n      }).fail(function () {\n        self.showErrorMessage();\n        self.endLoading();\n      });\n    }).fail(function (message) {\n      // Add error messages\n      self.getFormContainer().addErrorMessage(message);\n      self.endLoading();\n    });\n  },\n\n  /**\r\n      * Apply custom overrides to each decorated instance\r\n      * @param xpath\r\n      * @returns {string}\r\n      */\n  getXpath: function getXpath(xpath) {\n    var xpathPath = xpath;\n    var index = xpathPath.indexOf(this.grid.properties.xpath);\n\n    if (index !== -1) {\n      xpathPath = xpathPath.substr(index + this.grid.properties.xpath.length + 1);\n    }\n\n    return this.grid.properties.xpath + \"[id=\" + this.surrogateKey + \"].\" + xpathPath;\n  },\n\n  /**\r\n      * Returns the xpath to be used\r\n      * @param xpath\r\n      * @returns {*|string}\r\n      */\n  getDocumentXpath: function getDocumentXpath(xpath) {\n    var xpathPath = xpath;\n    var index = xpathPath.indexOf(this.grid.properties.xpath);\n\n    if (index !== -1) {\n      xpathPath = xpathPath.substr(index + this.grid.properties.xpath.length + 1);\n    }\n\n    return xpathPath;\n  },\n\n  /**\r\n      * Post process the element after it has been rendered\r\n      * @param surrogateKey\r\n      * @param cell\r\n      * @param tableCell\r\n      */\n  postRenderReadOnly: function postRenderReadOnly(surrogateKey, cell, tableCell) {\n    // Call base\n    this._super(surrogateKey, cell, tableCell);\n  },\n\n  /**\r\n      * Returns the xpath to be used\r\n      * @returns {string}\r\n      */\n  getContextXpath: function getContextXpath() {\n    var self = this;\n    var form = self.getFormContainer();\n    var xpathContext = form.properties.xpathContext ? form.properties.xpathContext + \".\" : \"\";\n    return xpathContext + this.grid.properties.xpath + \"[id=\" + this.surrogateKey + \"]\";\n  },\n\n  /**\r\n      * Template method to implement in each children to customize each control\r\n      */\n  preRenderControl: function preRenderControl() {\n    if (this.value != undefined && this.properties.value != undefined) {\n      this.properties.value = this.value;\n    }\n  },\n\n  /**\r\n      * Creates the event of generation of templates.\r\n      * @param filename\r\n      */\n  deleteDocumentTemplate: function deleteDocumentTemplate(filename) {\n    var self = this;\n    var grid = self.parent;\n    var params = {};\n\n    params.xpath = self.properties.xpath + \"[fileName='\" + filename + \"']\";\n    params.idRender = self.properties.id;\n    params.xpathContext = self.getContextXpath();\n    params.idPageCache = self.properties.idPageCache;\n\n    $.when(self.dataService.deleteUploadFile(params)).done(function () {\n      grid.refresh();\n    });\n  } });","/*\r\n*   Name: BizAgi Desktop Date Column Decorator Extension\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will redefine the date column decorator class to adjust to desktop devices\r\n*/\n\n// Extends itself\nbizagi.rendering.tablet.columns.column.extend(\"bizagi.rendering.tablet.columns.date\", {}, {\n  /*\r\n                                                                                            *   Apply custom overrides to each decorated instance\r\n                                                                                            */\n  applyOverrides: function applyOverrides(decorated) {\n    this._super(decorated);\n  } });","/*\r\n*   Name: BizAgi Tablet Text Column Decorator Extension\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will redefine the text column decorator class to adjust to tablet devices\r\n*/\n\n// Extends from column\nbizagi.rendering.tablet.columns.column.extend(\"bizagi.rendering.tablet.columns.text\", {}, {});","/*\r\n*   Name: BizAgi Tablet Number Column Decorator Extension\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will redefine the number column decorator class to adjust to tablet devices\r\n*/\n\n// Extends from column\nbizagi.rendering.tablet.columns.column.extend(\"bizagi.rendering.tablet.columns.number\", {}, {});","\n/*\r\n *   Name: Bizagi Column Rendering Tablet numberScientificNotation\r\n *   Author: Luis Cabarique - LuisCE\r\n *   Comments:\r\n *   -   This script will define a base class to define the Column Scientific number notation\r\n */\n\nbizagi.rendering.tablet.columns.column.extend(\"bizagi.rendering.tablet.columns.numberScientificNotation\", {}, {\n  /*\r\n                                                                                                                 *   Post process the element after it has been rendered\r\n                                                                                                                 */\n  postRender: function postRender(surrogateKey, cell) {\n    // Call base\n    this._super(surrogateKey, cell);\n    // Apply styles to input\n    var input = $(\"input\", cell);\n    this.applyColumnStyles(input);\n  },\n\n  renderSummary: function renderSummary(key, value) {\n    var self = this;\n    return self.renderReadOnly(key, value);\n  },\n\n  postRenderSummary: function postRenderSummary(key, value) {\n    var self = this;\n    self.postRenderReadOnly(key, value);\n    return true;\n  } });","/**\r\n *   Name: Bizagi Tablet Column Decorator Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the column decorator class to adjust to tablet devices\r\n */\n\n// Extends itself\nbizagi.rendering.tablet.columns.column.extend(\"bizagi.rendering.tablet.columns.image\", {}, {\n\n  applyOverrides: function applyOverrides(decorated) {\n    var self = this;\n    var properties = self.properties;\n    this._super(decorated);\n\n    // decorated.getUploadXpath = this.getUploadXpath;\n    decorated.properties.xpathContext = properties.xpathContext.length > 0 ?\n    properties.xpathContext + \".\" + self.grid.properties.xpath + \"[id=\" + decorated.surrogateKey + \"]\" :\n    self.grid.properties.xpath + \"[id=\" + decorated.surrogateKey + \"]\";\n  }\n\n  /*\r\n    *   Returns the xpath to be used  \r\n    */\n  /*getUploadXpath: function () {\r\n           return (this.grid.properties.xpath || this.properties.xpath ) + \"[id=\" + this.surrogateKey + \"].\" + this.properties.xpath;\r\n       }*/ });","/*\r\n*   Name: BizAgi Tablet Text Column Decorator Extension\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will redefine the text column decorator class to adjust to tablet devices\r\n*/\n\n// Extends from column\nbizagi.rendering.tablet.columns.column.extend(\"bizagi.rendering.tablet.columns.upload\", {}, {\n\n  applyOverrides: function applyOverrides(decorated) {\n    this._super(decorated);\n\n    decorated.getUploadXpath = this.getUploadXpath;\n    // hack apply upload plugin method in order to execute it only when the control is inserted in the DOM\n    var originalMethod = decorated.applyUploadPlugin;\n\n    decorated.getXpathContext = function () {\n      var surrogateKey = this.surrogateKey || \"\";\n      var self = this;\n      var properties = self.properties;\n      return properties.xpathContext.length > 0 ? properties.xpathContext + \".\" + self.grid.properties.xpath + \"[id=\" + self.surrogateKey + \"]\" : self.grid.properties.xpath + \"[id=\" + self.surrogateKey + \"]\";\n    };\n\n    decorated.buildItemUrl = function (file) {\n      var self = this;\n      var properties = self.properties;\n\n      var form = self.getFormContainer();\n      var xpathContext = self.getXpathContext();\n      var contextXpath = \"\";\n\n      return self.dataService.getUploadFileUrl({\n        idRender: properties.id,\n        xpath: properties.xpath,\n        xpathContext: xpathContext,\n        idPageCache: properties.idPageCache,\n        fileId: file.id,\n        sessionId: form.properties.sessionId,\n        contexttype: properties.contexttype });\n\n    };\n  },\n\n  getUploadXpath: function getUploadXpath() {\n    return this.grid.properties.xpath + \"[id=\" + this.surrogateKey + \"].\" + this.properties.xpath;\n  } });","/**\r\n *   Name: Bizagi Tablet Link Column Decorator Extension\r\n *   Author: Bizagi UI Forms\r\n *   Comments:\r\n *   -   This script will redefine the link column decorator class to adjust to tablet devices\r\n */\n\n// Extends from column\nbizagi.rendering.tablet.columns.column.extend(\"bizagi.rendering.tablet.columns.link\", {}, {\n\n  applyOverrides: function applyOverrides(decorated) {\n    var self = this;\n    var mode = self.getMode();\n\n    self._super(decorated);\n\n    if (mode !== \"design\" && mode !== \"layout\") {\n      self.surrogateKey = decorated.surrogateKey;\n\n      decorated.getXpath = self.getXpath;\n      decorated.properties.xpathContext = self.grid.properties.xpath + \"[id=\" + self.surrogateKey + \"]\";\n\n      if (self.grid.properties.xpathContext && decorated.properties.xpathContext.indexOf(self.grid.properties.xpathContext) === -1)\n      decorated.properties.xpathContext = self.grid.properties.xpathContext + \".\" + decorated.properties.xpathContext;\n    }\n\n    if (decorated.properties.type === \"columnFormLink\") {\n      decorated.getFormLinkXpath = this.getFormLinkXpath;\n    }\n  },\n\n  /**\r\n      * Apply custom overrides to each decorated instance\r\n      * @param xpath\r\n      * @returns {string}\r\n      */\n  getXpath: function getXpath(xpath) {\n    var self = this;\n    var xpathPath = xpath;\n    var index = xpathPath.indexOf(self.grid.properties.xpath);\n\n    if (index !== -1) {\n      xpathPath = xpathPath.substr(index + self.grid.properties.xpath.length + 1);\n    }\n\n    return self.grid.properties.xpath + \"[id=\" + self.surrogateKey + \"].\" + xpathPath;\n  },\n\n  /**\r\n      * Returns the xpath to be used\r\n      * @returns {string}\r\n      */\n  getContextXpath: function getContextXpath() {\n    return this.grid.properties.xpath + \"[id=\" + this.surrogateKey + \"]\";\n  },\n\n  /**\r\n      * Get Form Link xpath to use\r\n      * @returns {*}\r\n      */\n  getFormLinkXpath: function getFormLinkXpath() {\n    // Calculate layout properties to maximized property\n    this.properties.maximized = bizagi.util.parseBoolean(this.properties.maximized) != null ? bizagi.util.parseBoolean(this.properties.maximized) : false;\n    this.calculateInitialLayoutProperties();\n\n    if (!this.properties.xpath) return;\n    return this.properties.xpath;\n  } });","/*\r\n*   Name: BizAgi Desktop Text Column Decorator Extension\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will redefine the text column decorator class to adjust to desktop devices\r\n*/\n\n// Extends from column\nbizagi.rendering.tablet.columns.column.extend(\"bizagi.rendering.tablet.columns.uploadecm\", {}, {\n  /*\r\n                                                                                                 *   Apply custom overrides to each decorated instance\r\n                                                                                                 */\n  applyOverrides: function applyOverrides(decorated) {\n    var self = this;\n    self._super(decorated);\n\n    if (decorated && decorated.getControl) {\n      self.originalGetControl = decorated.getControl;\n      decorated.getControl = self.getControl;\n    }\n\n    decorated.getUploadXpath = this.getUploadXpath;\n\n    decorated.buildItemUrl = function (file) {\n      var self = this;\n      var properties = self.properties;\n\n      var form = self.getFormContainer();\n\n      var columnXpath = self.getUploadXpath(self.surrogateKey);\n      columnXpath = columnXpath.split(\".\");\n      var nameFile = columnXpath[columnXpath.length - 1];\n      var xpathContext = self.getXpathContext(self.surrogateKey);\n\n      return self.dataService.getUploadFileUrl({\n        idRender: properties.id,\n        xpath: nameFile,\n        xpathContext: xpathContext,\n        idPageCache: properties.idPageCache,\n        fileId: file.idFileUpload,\n        sessionId: form.properties.sessionId,\n        contexttype: properties.contexttype });\n\n    };\n\n    decorated.buildAddParams = function () {\n      var self = this;\n      var properties = self.properties;\n      var form = self.getFormContainer();\n      var columnXpath = self.getUploadXpath(self.surrogateKey);\n\n      columnXpath = columnXpath.split(\".\");\n      var nameFile = columnXpath[columnXpath.length - 1];\n      var xpathContext = self.getXpathContext(self.surrogateKey);\n\n      var data = {\n        url: properties.addUrl,\n        xpath: properties.xpath,\n        idAttrib: properties.idAttrib,\n        xpathContext: xpathContext,\n        metaValues: [],\n        idSession: form.properties.sessionId,\n        contexttype: \"entity\",\n        validExtensions: properties.validExtensions,\n        maxSize: properties.maxSize };\n\n\n      data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = properties.idPageCache;\n\n      return data;\n    };\n\n    decorated.getXpathContext = function () {\n      var self = this;\n      var properties = self.properties;\n      return properties.xpathContext.length > 0 ?\n      properties.xpathContext + \".\" + self.grid.properties.xpath + \"[id=\" + self.surrogateKey + \"]\" :\n      self.grid.properties.xpath + \"[id=\" + self.surrogateKey + \"]\";\n    };\n  },\n  /*\r\n     *   Returns the in-memory processed element when the element is read-only\r\n     */\n  renderReadOnly: function renderReadOnly(surrogateKey, value) {\n    var self = this;\n    var cell = \"<div></div>\";\n\n    var decorated = this.getDecorated(surrogateKey);\n    decorated.setValue(value);\n    self.setValue(surrogateKey, value);\n    self.setSurrogateKey(surrogateKey);\n\n    self.applyOverrides(decorated);\n    // Set grid and id references to the control in order to render the content\n    decorated.grid = this.grid;\n    decorated.column = this;\n    decorated.surrogateKey = surrogateKey;\n\n    // Set ready deferred\n    self.readyDeferred = new $.Deferred();\n\n    // We need to render the inner control as read-only\n    if (decorated.files.length > 0) {\n      // Changes editable to false to render read-only\n      var editable = this.properties.editable;\n      decorated.properties.editable = false;\n      cell = decorated.render(\"cell.upload\");\n    }\n    return cell;\n  },\n\n  /*\r\n     *   Post process the element after it has been rendered\r\n     */\n  getUploadXpath: function getUploadXpath(surrogateKey) {\n    surrogateKey = this.surrogateKey || surrogateKey || \"\";\n    return this.grid.properties.xpath + \"[id=\" + surrogateKey + \"].\" + this.properties.xpath;\n  },\n\n  getControl: function getControl() {\n    var self = this;\n    var result = self._super();\n    //TODO: Tablet validar si esto es realmente necesario asi como esta\n    if (!result || result.length == 0) {\n      return $(\".ui-bizagi-cell-readonly\", self.element || self.observableElement);\n    } else {\n      return $(\".bz-form-item\", self.element || self.observableElement);\n    }\n  } });","/**\r\n* Grid control Column Button\r\n*\r\n* @author Ricardo Pérez\r\n*/\nbizagi.rendering.tablet.columns.column.extend(\"bizagi.rendering.tablet.columns.button\", {}, {});","/**\r\n *   Name: Bizagi Tablet Radio Column Decorator Extension\r\n *   Author: Bizagi UI Forms\r\n *   Comments:\r\n *   -   This script will redefine the text column decorator class to adjust to tablet devices\r\n */\n\n// Extends from column\nbizagi.rendering.tablet.columns.combo.extend(\"bizagi.rendering.tablet.columns.radio\", {}, {});","/**\r\n *   Name: Bizagi Tablet Readonly Column Decorator Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the readonly column decorator class to adjust to tablet devices\r\n */\n\n// Extends from column\nbizagi.rendering.tablet.columns.column.extend(\"bizagi.rendering.tablet.columns.readonly\", bizagi.rendering.columns.readonly.prototype);\n// Extends itself\nbizagi.rendering.tablet.columns.readonly.extend(\"bizagi.rendering.tablet.columns.readonly\", {}, {});","/**\r\n *   Name: Bizagi Tablet Column Decorator Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the column decorator class to adjust to tablet devices\r\n */\n\n// Extends itself\nbizagi.rendering.tablet.columns.column.extend(\"bizagi.rendering.tablet.columns.search\", {}, bizagi.rendering.columns.search.prototype);\n// Extends itself\nbizagi.rendering.tablet.columns.search.extend(\n\"bizagi.rendering.tablet.columns.search\",\n{},\n{\n  renderReadOnly: function renderReadOnly(surrogateKey, value) {\n    if (value && value.length > 0) {\n      value = [].concat(value[0]);\n      return this._super(surrogateKey, {\n        id: value[0],\n        label: value[1],\n        additionallabel: value[2] || undefined });\n\n    } else {\n      return this._super(surrogateKey, value);\n    }\n  },\n\n  render: function render(surrogateKey, value) {\n    var self = this;\n    if (value && value.length > 0) {\n      value = [].concat(value[0]);\n      return self._super(surrogateKey, {\n        id: value[0],\n        label: value[1],\n        additionallabel: value[2] || undefined });\n\n    } else {\n      return self._super(surrogateKey, value);\n    }\n  },\n\n  /*\r\n      *   Post process the element after it has been rendered\r\n      */\n  postRender: function postRender(surrogateKey, cell) {\n    // Call base\n    this._super(surrogateKey, cell);\n\n    var decorated = this.getDecorated(surrogateKey);\n    decorated.refreshControl = this.refreshControl;\n  },\n\n  refreshControl: function refreshControl() {\n    this.grid.refreshCell({\n      key: this.surrogateKey,\n      column: this.properties.xpath,\n      xpathContext: this.getFormContainer().properties.xpathContext });\n\n  } });","/*\r\n*   Name: BizAgi Tablet Column Decorator Extension\r\n*   Author: RicharU\r\n*   Comments:\r\n*   -   This script will redefine the column decorator class to adjust to tablet devices\r\n*/\n\n// Extends itself\nbizagi.rendering.tablet.columns.combo.extend(\"bizagi.rendering.tablet.columns.list\", {}, {});","/*\r\n*   Name: BizAgi tablet exclusiveCheck Column Decorator Extension\r\n*   Author: RicharU\r\n*   Comments:\r\n*   -   This script will redefine the check column to adjust to tablet devices\r\n*/\n\n// Extends from column\nbizagi.rendering.tablet.columns.column.extend(\"bizagi.rendering.tablet.columns.exclusiveCheck\", {}, {\n  /*\r\n                                                                                                       *   Returns the in-memory processed element\r\n                                                                                                       *   so the caller could append it to any place\r\n                                                                                                       */\n  render: function render(surrogateKey, value) {\n\n    var self = this;\n    // Set flag to check when a render has changed\n    self.changed = false;\n    var properties = self.properties;\n    var form = self.getFormContainer();\n    var gridChanges = self.grid.changes;\n    // Set grid and id references to the control in order to render the content\n    var decorated = self.getDecorated(surrogateKey);\n    decorated.grid = self.grid;\n    decorated.column = this;\n    decorated.surrogateKey = surrogateKey;\n\n    // Set cell value                       \n    if (self.getMode() == \"execution\") {\n      self.setValue(surrogateKey, value || false);\n      var tmpCheck = self.grid.enabledChecks[self.properties.xpath].find(function (el) {\n        return el.id == surrogateKey;\n      });\n      if (typeof tmpCheck == \"undefined\") {\n        self.grid.enabledChecks[self.properties.xpath].push({\n          id: surrogateKey,\n          value: value || false,\n          originalValue: value || false,\n          changed: false });\n\n      }\n    }\n\n\n    if (value == null) {\n      self.changed = true;\n      var obj = {};\n      obj[self.properties.xpath] = self.getValue(surrogateKey);\n      if (bizagi.util.isEmpty(gridChanges[surrogateKey])) gridChanges[surrogateKey] = {};\n      gridChanges[surrogateKey] = $.extend({}, gridChanges[surrogateKey], obj);\n    }\n\n    // Override render properties\n    self.overrideDecoratedRenderProperties(surrogateKey);\n\n\n    // If the render is not editable return the readonly version of the column\n    if (!properties.editable)\n    return self.renderReadOnly.apply(self, arguments);\n\n    // Returns the decorated render inside a custom layout for columns\n    self.readyDeferred = new $.Deferred();\n    var cell = decorated.render(\"cell\");\n\n    // If the render changes set the flag on\n    decorated.bind(\"renderchange\", function () {\n      self.changed = true;\n      var checkList = self.grid.enabledChecks[self.properties.xpath];\n\n      checkList.forEach(function (el) {\n        if (el.id == surrogateKey) {\n          el.value = decorated.value;\n          el.changed = true;\n        } else\n        if (decorated.value && el.value) {\n          var tmpDecorated = self.getDecorated(el.id);\n          tmpDecorated.setDisplayValue(false);\n          self.setValue(el.id, false);\n          el.value = false;\n          el.changed = true;\n          if (form.isOfflineForm) {\n            self.handleOfflineChange(tmpDecorated, el);\n          }\n        }\n      });\n\n      var simpleXpathArray = self.properties.xpath.split(\".\");\n      self.grid.exclusiveChanges[self.properties.xpath] = {\n        xpath: self.properties.xpath,\n        simpleXpath: simpleXpathArray[simpleXpathArray.length - 1],\n        value: self.getValue(surrogateKey),\n        key: surrogateKey };\n\n    });\n\n    self.bind(\"rendered\", function () {\n      self.readyDeferred.resolve();\n    });\n\n\n    return cell;\n  },\n\n  /*\r\n      *   Post process the element after it has been rendered\r\n      */\n  postRender: function postRender(surrogateKey, cell) {\n    // Call base\n    this._super(surrogateKey, cell);\n\n    var self = this;\n    var mode = self.getMode();\n\n    this.setSurrogateKey(surrogateKey);\n    if (mode == \"execution\") {\n\n      var decorated = this.getDecorated(surrogateKey);\n      var control = decorated.getControl();\n\n      // Check if its new row\n      if (control.parents(\"tr\").data(\"new-row\")) {\n        //Set the column with this attribute, so when the control is evaluated in isValid(), validated\n        //also if it is required, and belongs from a new row\n        self.isNewRow = true;\n      } else {\n        self.isNewRow = false;\n      }\n    }\n  },\n\n  isValueValid: function isValueValid(surrogateKey, value, invalidElements, propertyOverrides) {\n    var self = this;\n    self.grid.enabledChecks = self.grid.enabledChecks || {};\n    var checkedValues = (self.grid.enabledChecks[self.properties.xpath] || []).filter(function (el) {\n      return el.value;\n    });\n\n    if (checkedValues.length > 1) {\n      var message = self.getResource(\"render-exclusive-column-check-error\").replaceAll(\"#label#\", self.properties.displayName);\n      /* var messageData = {xpath: self.properties.xpath, message: message}; */\n      invalidElements.push(message);\n      return false;\n    } else {\n      return true;\n    }\n\n  },\n  /**\r\n     * Add change in grid changes and update grid data rows\r\n     * @param {*} decorated \r\n     * @param {*} element \r\n     */\n  handleOfflineChange: function handleOfflineChange(decorated, element) {\n    var self = this;\n    var gridChanges = self.grid.changes;\n    var newChange = {};\n    newChange[decorated.properties.xpath] = element.value;\n    if (bizagi.util.isEmpty(gridChanges[element.id])) gridChanges[element.id] = {};\n    gridChanges[element.id] = $.extend({}, gridChanges[element.id], newChange);\n    //Update grid data (grid.properties.data)\n    self.grid.onCellChange(self, null, element.id);\n  } });","/**\r\n *   Name: Bizagi Render Hidden Column Decorator Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the hidden render class to adjust to tablet devices\r\n */\n\n// Extends from columns tablet base\nbizagi.rendering.tablet.columns.column.extend(\"bizagi.rendering.tablet.columns.hidden\", bizagi.rendering.columns.hidden.prototype);\n// Extends itself\nbizagi.rendering.tablet.columns.hidden.extend(\"bizagi.rendering.tablet.columns.hidden\", {}, {});","/**\r\n *   Name: Bizagi Tablet Render Factory\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define a render factory to create tablet versions of each render type\r\n */\n\nbizagi.rendering.base.factory.extend(\"bizagi.rendering.tablet.factory\", {}, {\n\n  /**\r\n                                                                               * Load all the templates used for rendering     \r\n                                                                               */\n  loadTemplates: function loadTemplates() {\n    var self = this;\n    var defer = new $.Deferred();\n\n    $.when(\n\n    // Icons\n    self.loadTemplate(\"icons\", self.getFileTemplate(\"common.bizagi.rendering.icons\")),\n\n    // Common\n    self.loadTemplate(\"form-error\", self.getFileTemplate(\"bizagi.rendering.tablet.form-error\")),\n    self.loadTemplate(\"form-waiting\", self.getFileTemplate(\"bizagi.rendering.tablet.form-waiting\")),\n\n    // Containers\n    self.loadTemplate(\"form\", self.getFileTemplate(\"bizagi.rendering.tablet.form\") + \"#bz-form-container\"),\n    self.loadTemplate(\"complexgateway\", self.getFileTemplate(\"bizagi.rendering.tablet.form\") + \"#bz-form-complex-gateway\"),\n\n    self.loadTemplate(\"panel\", self.getFileTemplate(\"bizagi.rendering.tablet.panel\")),\n    self.loadTemplate(\"tab\", self.getFileTemplate(\"bizagi.rendering.tablet.tab\")),\n    self.loadTemplate(\"tabItem\", self.getFileTemplate(\"bizagi.rendering.tablet.tabItem\")),\n    self.loadTemplate(\"horizontal\", self.getFileTemplate(\"bizagi.rendering.tablet.horizontal\")),\n    self.loadTemplate(\"accordion\", self.getFileTemplate(\"bizagi.rendering.tablet.accordion\")),\n    self.loadTemplate(\"accordionItem\", self.getFileTemplate(\"bizagi.rendering.tablet.accordionItem\")),\n    self.loadTemplate(\"group\", self.getFileTemplate(\"bizagi.rendering.tablet.group\")),\n    self.loadTemplate(\"section\", self.getFileTemplate(\"bizagi.rendering.tablet.section\")),\n    self.loadTemplate(\"searchForm\", self.getFileTemplate(\"bizagi.rendering.tablet.searchForm\")),\n    self.loadTemplate(\"contentPanel\", self.getFileTemplate(\"bizagi.rendering.tablet.contentPanel\")),\n\n    // Renders\n    self.loadTemplate(\"render\", self.getFileTemplate(\"bizagi.rendering.tablet.render\")),\n    self.loadTemplate(\"readonly\", self.getFileTemplate(\"bizagi.rendering.tablet.readonly\")),\n    self.loadTemplate(\"readonly-value\", self.getFileTemplate(\"bizagi.rendering.tablet.readonly\")),\n    self.loadTemplate(\"text\", self.getFileTemplate(\"bizagi.rendering.tablet.text\") + \"#bz-render-text\"),\n    self.loadTemplate(\"text-readOnly\", self.getFileTemplate(\"bizagi.rendering.tablet.text\") + \"#bz-render-text-readonly\"),\n    self.loadTemplate(\"extendedText\", self.getFileTemplate(\"bizagi.rendering.tablet.extendedText\") + \"#bz-render-extended-text\"),\n    self.loadTemplate(\"extendedText-readOnly\", self.getFileTemplate(\"bizagi.rendering.tablet.extendedText\") + \"#bz-render-extended-text-readonly\"),\n\n    self.loadTemplate(\"number\", self.getFileTemplate(\"bizagi.rendering.tablet.number\")),\n    self.loadTemplate(\"numberScientificNotation\", self.getFileTemplate(\"bizagi.rendering.tablet.numberScientificNotation\")),\n    self.loadTemplate(\"date\", self.getFileTemplate(\"bizagi.rendering.tablet.date\")),\n    self.loadTemplate(\"yesno\", self.getFileTemplate(\"bizagi.rendering.tablet.yesno\")),\n    self.loadTemplate(\"check\", self.getFileTemplate(\"bizagi.rendering.tablet.check\")),\n    self.loadTemplate(\"checkList\", self.getFileTemplate(\"bizagi.rendering.tablet.checkList\")),\n\n    self.loadTemplate(\"combo\", self.getFileTemplate(\"bizagi.rendering.tablet.combo\") + \"#bz-combo-control\"),\n    self.loadTemplate(\"combo-readonly\", self.getFileTemplate(\"bizagi.rendering.tablet.combo\") + \"#bz-combo-control-readonly\"),\n    self.loadTemplate(\"combo-list\", self.getFileTemplate(\"bizagi.rendering.tablet.combo\") + \"#bz-combo-control-list\"),\n\n    self.loadTemplate(\"modal-header-search\", self.getFileTemplate(\"bizagi.rendering.tablet.modal\") + \"#bz-modal-view-header-search\"),\n    self.loadTemplate(\"modal-footer-done\", self.getFileTemplate(\"bizagi.rendering.tablet.modal\") + \"#bz-modal-view-footer-done\"),\n\n    self.loadTemplate(\"list\", self.getFileTemplate(\"bizagi.rendering.tablet.list\") + \"#bz-render-list\"),\n    self.loadTemplate(\"list-items\", self.getFileTemplate(\"bizagi.rendering.tablet.list\") + \"#bz-render-list-items\"),\n\n    self.loadTemplate(\"radio\", self.getFileTemplate(\"bizagi.rendering.tablet.radio\")),\n\n    self.loadTemplate(\"image\", self.getFileTemplate(\"bizagi.rendering.tablet.image\") + \"#bz-render-image\"),\n    self.loadTemplate(\"image-item\", self.getFileTemplate(\"bizagi.rendering.tablet.image\") + \"#bz-render-image-item\"),\n    self.loadTemplate(\"image-preview\", self.getFileTemplate(\"bizagi.rendering.tablet.image\") + \"#bz-render-image-preview\"),\n    self.loadTemplate(\"image-readonly\", self.getFileTemplate(\"bizagi.rendering.tablet.image\") + \"#bz-render-image-readonly\"),\n\n    self.loadTemplate(\"uploadSlide\", self.getFileTemplate(\"bizagi.rendering.tablet.slide.upload\")),\n\n    self.loadTemplate(\"upload\", self.getFileTemplate(\"bizagi.rendering.tablet.upload\") + \"#bz-render-upload\"),\n    self.loadTemplate(\"upload-item\", self.getFileTemplate(\"bizagi.rendering.tablet.upload\") + \"#bz-render-upload-item\"),\n    self.loadTemplate(\"upload-readonly\", self.getFileTemplate(\"bizagi.rendering.tablet.upload\") + \"#bz-render-upload-readonly\"),\n\n    self.loadTemplate(\"grid\", self.getFileTemplate(\"bizagi.rendering.tablet.grid\")),\n    self.loadTemplate(\"cell\", self.getFileTemplate(\"bizagi.rendering.tablet.cell\")),\n    self.loadTemplate(\"cell.readonly\", self.getFileTemplate(\"bizagi.rendering.tablet.cell.readonly\")),\n    self.loadTemplate(\"cell.upload\", self.getFileTemplate(\"bizagi.rendering.tablet.cell.upload\")),\n\n    self.loadTemplate(\"search\", self.getFileTemplate(\"bizagi.rendering.tablet.search\") + \"#bz-render-search\"),\n    self.loadTemplate(\"search.item\", self.getFileTemplate(\"bizagi.rendering.tablet.search\") + \"#bz-render-search-item\"),\n    self.loadTemplate(\"search.items\", self.getFileTemplate(\"bizagi.rendering.tablet.search\") + \"#bz-render-search-items\"),\n\n    self.loadTemplate(\"searchItem\", self.getFileTemplate(\"bizagi.rendering.tablet.searchItem\")),\n\n    self.loadTemplate('searchList', self.getFileTemplate('bizagi.rendering.tablet.searchList') + \"#bz-render-search-list\"),\n    self.loadTemplate(\"searchList.item\", self.getFileTemplate(\"bizagi.rendering.tablet.searchList\") + \"#bz-render-search-list-item\"),\n    self.loadTemplate(\"searchList.items\", self.getFileTemplate(\"bizagi.rendering.tablet.searchList\") + \"#bz-render-search-list-items\"),\n    self.loadTemplate(\"searchList.actions\", self.getFileTemplate(\"bizagi.rendering.tablet.searchList\") + \"#bz-render-search-list-actions\"),\n    self.loadTemplate(\"searchList.tag\", self.getFileTemplate(\"bizagi.rendering.tablet.searchList\") + \"#bz-render-search-list-tag\"),\n    self.loadTemplate(\"searchList.readonly\", self.getFileTemplate(\"bizagi.rendering.tablet.searchList\") + \"#bz-render-search-list-readonly\"),\n    self.loadTemplate(\"searchList-modal-header\", self.getFileTemplate(\"bizagi.rendering.tablet.searchList\") + \"#bz-render-search-list-modal-header\"),\n\n    self.loadTemplate(\"letter\", self.getFileTemplate(\"bizagi.rendering.tablet.letter\")),\n    self.loadTemplate(\"letter.readonly\", self.getFileTemplate(\"bizagi.rendering.tablet.letter.readonly\")),\n    self.loadTemplate(\"letter.dialog\", self.getFileTemplate(\"bizagi.rendering.tablet.dialog-letter\")),\n    self.loadTemplate(\"button\", self.getFileTemplate(\"bizagi.rendering.tablet.button\")),\n    self.loadTemplate(\"link\", self.getFileTemplate(\"bizagi.rendering.tablet.link\")),\n    self.loadTemplate(\"formLink\", self.getFileTemplate(\"bizagi.rendering.tablet.formLink\")),\n    self.loadTemplate(\"geolocation\", self.getFileTemplate(\"bizagi.rendering.tablet.geolocation\")),\n    self.loadTemplate('association', self.getFileTemplate('bizagi.rendering.tablet.association')),\n\n    self.loadTemplate(\"ecm\", self.getFileTemplate(\"bizagi.rendering.tablet.ecm\") + \"#bz-render-ecm\"),\n    self.loadTemplate(\"ecm-item\", self.getFileTemplate(\"bizagi.rendering.tablet.ecm\") + \"#bz-render-ecm-item\"),\n    self.loadTemplate(\"ecm-readonly\", self.getFileTemplate(\"bizagi.rendering.tablet.ecm\") + \"#bz-render-ecm-readonly\"),\n\n    self.loadTemplate(\"list-multiselect\", self.getFileTemplate(\"bizagi.rendering.tablet.multiSelect\") + \"#bz-multiselect\"),\n    self.loadTemplate(\"multiselect-list\", self.getFileTemplate(\"bizagi.rendering.tablet.multiSelect\") + \"#bz-multiselect-list\"),\n\n    self.loadTemplate(\"document\", self.getFileTemplate(\"bizagi.rendering.tablet.document\") + \"#bz-document-generator\"),\n    self.loadTemplate(\"document-item\", self.getFileTemplate(\"bizagi.rendering.tablet.document\") + \"#bz-document-generator-item\"),\n    self.loadTemplate(\"document-readonly\", self.getFileTemplate(\"bizagi.rendering.tablet.document\") + \"#bz-document-generator-readonly\"),\n    self.loadTemplate(\"document-download\", self.getFileTemplate(\"bizagi.rendering.tablet.document\") + \"#bz-document-generator-download\"),\n\n    // Hand Signature\n    self.loadTemplate(\"hand-signature\", self.getFileTemplate(\"bizagi.rendering.tablet.handSignature\") + \"#bz-signature\"),\n    self.loadTemplate(\"hand-signature-readonly\", self.getFileTemplate(\"bizagi.rendering.tablet.handSignature\") + \"#bz-signature-readonly\"),\n\n    // Action launcher\n    self.loadTemplate(\"render-actionLauncher\", self.getFileTemplate(\"bizagi.rendering.tablet.actionLauncher\") + \"#bz-rendering-actionLauncher\"),\n    self.loadTemplate(\"render-actionLauncher-horizontal\", self.getFileTemplate(\"bizagi.rendering.tablet.actionLauncher\") + \"#bz-rendering-actionLauncher-horizontal\"),\n    self.loadTemplate(\"render-actionLauncher-vertical\", self.getFileTemplate(\"bizagi.rendering.tablet.actionLauncher\") + \"#bz-rendering-actionLauncher-vertical\"),\n    self.loadTemplate(\"render-actionLauncher-actions-to-execute\", self.getFileTemplate(\"bizagi.rendering.tablet.actionLauncher\") + \"#bz-rendering-actionLauncher-actions-to-execute\"),\n    self.loadTemplate(\"render-actionLauncher-design\", self.getFileTemplate(\"bizagi.rendering.tablet.actionLauncher\") + \"#bz-rendering-actionLauncher-design\"),\n\n    // Polymorphic launcher\n    self.loadTemplate(\"render-polymorphicLauncher\", self.getFileTemplate(\"bizagi.rendering.tablet.polymorphicLauncher\") + \"#bz-rendering-polymorphicLauncher\"),\n    self.loadTemplate(\"render-polymorphicLauncher-vertical-tree\", self.getFileTemplate(\"bizagi.rendering.tablet.polymorphicLauncher\") + \"#bz-rendering-polymorphicLauncher-vertical-tree\"),\n    self.loadTemplate(\"render-polymorphicLauncher-vertical-tree-item\", self.getFileTemplate(\"bizagi.rendering.tablet.polymorphicLauncher\") + \"#bz-rendering-polymorphicLauncher-vertical-tree-item\"),\n    self.loadTemplate(\"render-polymorphicLauncher-actions-to-execute\", self.getFileTemplate(\"bizagi.rendering.tablet.polymorphicLauncher\") + \"#bz-rendering-polymorphicLauncher-actions-to-execute\"),\n    self.loadTemplate(\"render-polymorphicLauncher-confirm\", self.getFileTemplate(\"bizagi.rendering.tablet.polymorphicLauncher\") + \"#bz-rendering-polymorphicLauncher-confirm\"),\n    self.loadTemplate(\"render-polymorphicLauncher-design\", self.getFileTemplate(\"bizagi.rendering.tablet.polymorphicLauncher\") + \"#bz-rendering-polymorphicLauncher-design\"),\n\n    //Renders Layouts\n    self.loadTemplate(\"render-layout\", self.getFileTemplate(\"bizagi.rendering.tablet.layout.render\")),\n    self.loadTemplate(\"layout-image\", self.getFileTemplate(\"bizagi.rendering.tablet.layout.image\") + \"#ui-bizagi-render-layout-image\"),\n    self.loadTemplate(\"layout-image64\", self.getFileTemplate(\"bizagi.rendering.tablet.layout.image\") + \"#ui-bizagi-render-layout-image64\"),\n    self.loadTemplate(\"layout-label\", self.getFileTemplate(\"bizagi.rendering.tablet.layout.label\")),\n    self.loadTemplate(\"layout-link\", self.getFileTemplate(\"bizagi.rendering.tablet.layout.link\")),\n    self.loadTemplate(\"layout-text\", self.getFileTemplate(\"bizagi.rendering.tablet.layout.text\")),\n    self.loadTemplate(\"layout-date-time\", self.getFileTemplate(\"bizagi.rendering.tablet.layout.dateTime\")),\n    self.loadTemplate(\"layout-money\", self.getFileTemplate(\"bizagi.rendering.tablet.layout.money\")),\n    self.loadTemplate(\"layout-number\", self.getFileTemplate(\"bizagi.rendering.tablet.layout.number\")),\n    self.loadTemplate(\"layout-upload\", self.getFileTemplate(\"bizagi.rendering.tablet.layout.upload\")),\n\n    // Grid plugin stuff\n    self.loadTemplate(\"bizagi.grid.grid\", self.getFileTemplate(\"bizagi.rendering.tablet.grid.component\") + \"#ui-bizagi-grid\"),\n    self.loadTemplate(\"bizagi.grid.waiting\", self.getFileTemplate(\"bizagi.rendering.tablet.grid.component\") + \"#ui-bizagi-grid-waiting\"),\n    self.loadTemplate(\"bizagi.grid.table\", self.getFileTemplate(\"bizagi.rendering.tablet.grid.component\") + \"#ui-bizagi-grid-table\"),\n    self.loadTemplate(\"bizagi.grid.table.empty\", self.getFileTemplate(\"bizagi.rendering.tablet.grid.component\") + \"#ui-bizagi-grid-table-empty\"),\n    self.loadTemplate(\"bizagi.grid.column\", self.getFileTemplate(\"bizagi.rendering.tablet.grid.component\") + \"#ui-bizagi-grid-column\"),\n    self.loadTemplate(\"bizagi.grid.column.special\", self.getFileTemplate(\"bizagi.rendering.tablet.grid.component\") + \"#ui-bizagi-grid-column-special\"),\n    self.loadTemplate(\"bizagi.grid.row\", self.getFileTemplate(\"bizagi.rendering.tablet.grid.component\") + \"#ui-bizagi-grid-row\"),\n    self.loadTemplate(\"bizagi.grid.row.buttons\", self.getFileTemplate(\"bizagi.rendering.tablet.grid.component\") + \"#ui-bizagi-grid-row-buttons\"),\n    self.loadTemplate(\"bizagi.grid.cell\", self.getFileTemplate(\"bizagi.rendering.tablet.grid.component\") + \"#ui-bizagi-grid-cell\"),\n    self.loadTemplate(\"bizagi.grid.cell.special\", self.getFileTemplate(\"bizagi.rendering.tablet.grid.component\") + \"#ui-bizagi-grid-cell-special\"),\n    self.loadTemplate(\"bizagi.grid.pager\", self.getFileTemplate(\"bizagi.rendering.tablet.grid.component\") + \"#ui-bizagi-grid-pager\"),\n    self.loadTemplate(\"bizagi.grid.buttons\", self.getFileTemplate(\"bizagi.rendering.tablet.grid.component\") + \"#ui-bizagi-grid-buttons\"),\n    self.loadTemplate(\"bizagi.grid.dynamicpager\", self.getFileTemplate(\"bizagi.rendering.tablet.grid.component\") + \"#ui-bizagi-grid-dynamic-pager\"),\n    self.loadTemplate(\"bizagi.grid.totalizer\", self.getFileTemplate(\"bizagi.rendering.tablet.grid.component\") + \"#ui-bizagi-grid-totalizer\"),\n\n    // Grid Offline\n    self.loadTemplate(\"bizagi.grid.offline.buttons\", self.getFileTemplate(\"bizagi.rendering.tablet.grid.component\") + \"#bz-grid-offline-buttons\"),\n    self.loadTemplate(\"bizagi.grid.offline.row.buttons\", self.getFileTemplate(\"bizagi.rendering.tablet.grid.component\") + \"#bz-grid-offline-row-buttons\"),\n    self.loadTemplate(\"bizagi.grid.offline.cell.special\", self.getFileTemplate(\"bizagi.rendering.tablet.grid.component\") + \"#bz-grid-offline-cell-special\")).\n\n    done(function () {\n      var tmplIcons = $.fasttmpl(self.getTemplate(\"icons\"));\n      var svgStoreCounter = $(\"head\").find('#genome-forms-icons').length;\n\n      if (svgStoreCounter === 0)\n      $(\"head\").append(tmplIcons);\n\n      // Resolve when all templates are loaded\n      defer.resolve();\n    });\n\n    return defer.promise();\n  },\n\n  getFileTemplate: function getFileTemplate(src, onDemand) {\n    var device = bizagi.detectDevice();\n    return bizagi.getTemplate(src, onDemand, device == \"desktop\" ? \"tablet_ios\" : device);\n  },\n  /**\r\n      * Returns the appropiate container based on the container type    \r\n      */\n  getContainer: function getContainer(params) {\n    var self = this;\n    var type = params.type;\n    var containerParams = $.extend(params, {\n      renderFactory: this,\n      dataService: params.dataService || this.dataService });\n\n\n    type = type.replace(/tablet/, '');\n\n    if (type == \"form\")\n    return new bizagi.rendering.tablet.form(containerParams);\n\n    if (type == \"template\")\n    return new bizagi.rendering.tablet.formTemplate(containerParams);\n\n    if (type == \"queryForm\")\n    return new bizagi.rendering.tablet.queryForm(containerParams);\n\n    if (type == \"layout\")\n    return new bizagi.rendering.tablet.layout(containerParams);\n\n    if (type == \"usersForm\")\n    return new bizagi.rendering.tablet.usersForm(containerParams);\n\n    if (type == \"panel\")\n    return new bizagi.rendering.tablet.panel(containerParams);\n\n    if (/^contentpanel$/i.test(type))\n    return new bizagi.rendering.tablet.contentPanel(containerParams);\n\n    if (/^nestedform$/i.test(type))\n    return new bizagi.rendering.tablet.nestedForm(containerParams);\n\n    if (type == \"tab\")\n    return new bizagi.rendering.tablet.tab(containerParams);\n\n    if (/^tabitem$/i.test(type))\n    return new bizagi.rendering.tablet.tabItem(containerParams);\n\n    if (type == \"horizontal\")\n    return new bizagi.rendering.tablet.horizontal(containerParams);\n\n    if (type == \"accordion\")\n    return new bizagi.rendering.tablet.accordion(containerParams);\n\n    if (type == \"accordionItem\")\n    return new bizagi.rendering.tablet.accordionItem(containerParams);\n\n    if (type == \"group\")\n    return new bizagi.rendering.tablet.group(containerParams);\n\n    if (type == \"section\")\n    return new bizagi.rendering.tablet.section(containerParams);\n\n    if (type == \"searchForm\") {\n      containerParams.context = \"search\";\n      containerParams.contexttype = \"metadata\";\n      return new bizagi.rendering.tablet.searchForm(containerParams);\n    }\n\n    if (type == \"mobileform\")\n    return new bizagi.rendering.mobileform(containerParams);\n\n    if (type == \"mobilegroup\")\n    return new bizagi.rendering.mobilegroup(containerParams);\n\n    // No type supported\n    bizagi.log(type + \" not supported in render factory\", params.data, \"error\");\n\n    return null;\n  },\n\n  /**\r\n      * Returns the appropriate column based on the render type\r\n      */\n  getColumn: function getColumn(params) {\n    var type = params.type;\n    var data = params.data;\n    var properties = data.properties;\n    var columnParams = $.extend(params, {\n      renderFactory: this,\n      dataService: params.dataService || this.dataService,\n      singleInstance: bizagi.util.isEmpty(params.singleInstance) ? true : params.singleInstance });\n\n    var isOfflineForm = bizagi.util.isOfflineForm({ container: params.parent });\n\n    type = type.replace(/tablet/, '');\n\n    if (type == \"columnText\") {\n      var isExtended = bizagi.util.parseBoolean(data.properties.isExtended) || false;\n\n      if (isExtended) {\n        // Creates one extended render\n        columnParams.decorated = bizagi.rendering.tablet.extendedText;\n      } else {\n        // Creates one normal text render\n        columnParams.decorated = bizagi.rendering.tablet.text;\n      }\n\n      return new bizagi.rendering.tablet.columns.text(columnParams);\n    }\n\n    if (type == \"columnSearchList\") {\n      columnParams.decorated = bizagi.rendering.tablet.searchList;\n      return new bizagi.rendering.tablet.columns.searchList(columnParams);\n    }\n\n    if (type == \"columnNumber\") {\n      columnParams.decorated = bizagi.rendering.tablet.number;\n      return new bizagi.rendering.tablet.columns.number(columnParams);\n    }\n\n    if (type == \"columnMoney\") {\n      columnParams.decorated = bizagi.rendering.tablet.money;\n      return new bizagi.rendering.tablet.columns.number(columnParams);\n    }\n\n    if (type == \"columnDate\") {\n      columnParams.decorated = bizagi.rendering.tablet.date;\n      return new bizagi.rendering.tablet.columns.date(columnParams);\n    }\n\n    if (type == \"columnBoolean\") {\n      var display = data.properties.display || \"option\";\n\n      if (display == \"check\") {\n        // Creates one check render\n        columnParams.decorated = bizagi.rendering.tablet.check;\n        if (params.data.properties.isExclusive) {\n          return new bizagi.rendering.tablet.columns.exclusiveCheck(columnParams);\n        }\n      } else {\n        // Creates one yes-no render\n        columnParams.decorated = bizagi.rendering.tablet.yesno;\n      }\n      return new bizagi.rendering.tablet.columns.column(columnParams);\n    }\n\n    if (type == \"columnCombo\") {\n      columnParams.decorated = bizagi.rendering.tablet.combo;\n      return new bizagi.rendering.tablet.columns.combo(columnParams);\n    }\n\n    if (type == \"columnRadio\") {\n      columnParams.decorated = bizagi.rendering.tablet.radio;\n      return new bizagi.rendering.tablet.columns.radio(columnParams);\n    }\n\n    if (type == \"columnList\") {\n      columnParams.decorated = bizagi.rendering.tablet.list;\n      return new bizagi.rendering.tablet.columns.list(columnParams);\n    }\n\n    if (type == \"columnHidden\") {\n      if (!bizagi.override.hiddenControlsWithDataType) {\n        delete properties.dataType;\n      }\n      columnParams.decorated = bizagi.rendering.tablet.hidden;\n      return new bizagi.rendering.tablet.columns.hidden(columnParams);\n    }\n\n    if (type == \"columnUpload\") {\n      if (isOfflineForm && bizagi.util.isOfflineFormsV2Supported()) {\n        columnParams.decorated = bizagi.rendering.tablet.upload.offline;\n      } else\n      {\n        columnParams.decorated = bizagi.rendering.tablet.upload;\n      }\n      return new bizagi.rendering.tablet.columns.upload(columnParams);\n    }\n\n    if (type == \"columnImage\") {\n      columnParams.decorated = bizagi.rendering.tablet.image;\n      return new bizagi.rendering.tablet.columns.image(columnParams);\n    }\n\n    if (type == \"columnUploadEcm\") {\n      columnParams.decorated = bizagi.rendering.tablet.ecm;\n      return new bizagi.rendering.tablet.columns.uploadecm(columnParams);\n    }\n\n    if (type == \"columnLink\") {\n      columnParams.decorated = bizagi.rendering.tablet.link;\n      return new bizagi.rendering.tablet.columns.link(columnParams);\n    }\n\n    if (type == \"columnFormLink\") {\n      columnParams.decorated = bizagi.rendering.tablet.formLink;\n      return new bizagi.rendering.tablet.columns.link(columnParams);\n    }\n\n    if (type == \"columnUserfield\") {\n      columnParams.decorated = bizagi.rendering.tablet.userfieldWrapper;\n      return new bizagi.rendering.tablet.columns.column(columnParams);\n    }\n\n    if (type == \"columnSearch\") {\n      columnParams.decorated = bizagi.rendering.tablet.search;\n      return new bizagi.rendering.tablet.columns.search(columnParams);\n    }\n\n    if (type == \"columnLabel\") {\n      if (!bizagi.override.hiddenControlsWithDataType) {\n        delete properties.dataType;\n      }\n      columnParams.decorated = bizagi.rendering.tablet.label;\n      return new bizagi.rendering.tablet.columns.column(columnParams);\n    }\n\n    if (type == \"columnReadonly\") {\n      columnParams.decorated = bizagi.rendering.tablet.readonly;\n      return new bizagi.rendering.tablet.columns.readonly(columnParams);\n    }\n\n    if (type == \"columnDocument\") {\n      columnParams.decorated = bizagi.rendering.tablet.document;\n      return new bizagi.rendering.tablet.columns.document(columnParams);\n    }\n\n    /*\r\n      Not supported\r\n       if (type == \"columnLetter\") {\r\n          columnParams.decorated = bizagi.rendering.letter;\r\n          return new bizagi.rendering.columns.letter(columnParams);\r\n      } */\n\n    if (type == \"columnButton\") {\n      columnParams.decorated = bizagi.rendering.tablet.button;\n      return new bizagi.rendering.tablet.columns.button(columnParams);\n    }\n\n    // No type supported\n    bizagi.log(type + \" not supported in render factory\", data, \"error\");\n    return null;\n  },\n\n  getRender: function getRender(params) {\n    var self = this;\n    var type = params.type;\n    var data = params.data;\n    var properties = data.properties;\n    var renderParams = $.extend(params, {\n      renderFactory: this,\n      dataService: params.dataService || this.dataService });\n\n\n    // Check is offline form        \n    var isOfflineForm = bizagi.util.isOfflineForm({ container: params.parent });\n\n    if (!type)\n    type = \"label\";\n\n    type = type.replace(/tablet/, '');\n\n    if (type == \"text\") {\n      var isExtended = bizagi.util.parseBoolean(data.properties.isExtended) || false;\n\n      // Creates one extended render\n      if (isExtended) {\n        return new bizagi.rendering.tablet.extendedText(renderParams);\n      }\n\n      // Creates one normal text render\n      return new bizagi.rendering.tablet.text(renderParams);\n    }\n\n    if (type == \"association\") {\n      return new bizagi.rendering.tablet.association(renderParams);\n    }\n\n    if (type == \"label\") {\n      if (!bizagi.override.hiddenControlsWithDataType) {\n        delete properties.dataType;\n      }\n      return new bizagi.rendering.tablet.label(renderParams);\n    }\n\n    if (type == \"hidden\") {\n      if (!bizagi.override.hiddenControlsWithDataType) {\n        delete properties.dataType;\n      }\n      return new bizagi.rendering.tablet.hidden(renderParams);\n    }\n\n    if (type == \"number\") {\n      // Number Scientific Notation\n      if (properties && properties.dataType === 29) {\n        return new bizagi.rendering.tablet.numberScientificNotation(renderParams);\n      }\n\n      return new bizagi.rendering.tablet.number(renderParams);\n    }\n\n    if (type == \"money\") {\n      return new bizagi.rendering.tablet.money(renderParams);\n    }\n\n    if (type == \"date\") {\n      return new bizagi.rendering.tablet.date(renderParams);\n    }\n\n    if (type == \"boolean\") {\n      var display = data.properties.display || \"option\";\n\n      // Creates one check render\n      if (display == \"check\") {\n        return new bizagi.rendering.tablet.check(renderParams);\n      }\n\n      // Creates one yes-no render\n      return new bizagi.rendering.tablet.yesno(renderParams);\n    }\n\n    if (type == \"combo\") {\n      return new bizagi.rendering.tablet.combo(renderParams);\n    }\n\n    if (/^cascadingcombo$/i.test(type)) {\n      return new bizagi.rendering.tablet.cascadingCombo(renderParams);\n    }\n\n    if (type == \"list\") {\n      return new bizagi.rendering.tablet.list(renderParams);\n    }\n\n    if (type == \"radio\") {\n      return new bizagi.rendering.tablet.radio(renderParams);\n    }\n\n    if (type == \"image\") {\n      if (isOfflineForm && !bizagi.util.isOfflineFormsV2Supported()) {\n        return new bizagi.rendering.tablet.image.old(renderParams);\n      } else\n      {\n        return new bizagi.rendering.tablet.image(renderParams);\n      }\n\n    }\n\n    if (type == \"uploadecm\") {\n      return new bizagi.rendering.tablet.ecm(renderParams);\n    }\n\n    if (type == \"upload\") {\n      // Review the offline status or context              \n      if (isOfflineForm) {\n        if (!bizagi.util.isOfflineFormsV2Supported()) {\n          return new bizagi.rendering.tablet.upload.offline.old(renderParams);\n        } else\n        {\n          return new bizagi.rendering.tablet.upload.offline(renderParams);\n        }\n      } else {\n        return new bizagi.rendering.tablet.upload(renderParams);\n      }\n    }\n\n    if (type == \"grid\") {\n      // Review the offline status or context             \n      if (isOfflineForm) {\n        if (!bizagi.util.isOfflineFormsV2Supported()) {\n          return new bizagi.rendering.tablet.grid.offline.old(renderParams);\n        } else\n        {\n          return new bizagi.rendering.tablet.grid.offline(renderParams);\n        }\n      } else {\n        return new bizagi.rendering.tablet.grid(renderParams);\n      }\n    }\n\n    if (type == \"groupedgrid\") {\n      // return new bizagi.rendering.tablet.grid.grouped(renderParams);\n      return new bizagi.rendering.tablet.grid(renderParams); // Not supported. Nonetheless, all entries are shown.\n    }\n\n    if (type == \"search\") {\n      return new bizagi.rendering.tablet.search(renderParams);\n    }\n\n    if (type == \"suggest\") {\n      renderParams.data.properties.enableQuerySuggestBehavior = true;\n      return new bizagi.rendering.tablet.search(renderParams);\n    }\n\n    if (type == \"searchList\") {\n      return new bizagi.rendering.tablet.searchList(renderParams);\n    }\n\n    if (type == \"multiSelect\") {\n      return new bizagi.rendering.tablet.multiSelect(renderParams);\n    }\n\n    if (type == \"button\") {\n      return new bizagi.rendering.tablet.button(renderParams);\n    }\n\n    if (type == \"formLink\") {\n      return new bizagi.rendering.tablet.formLink(renderParams);\n    }\n\n    if (type == \"link\") {\n      return new bizagi.rendering.tablet.link(renderParams);\n    }\n\n    if (type == \"actionLauncher\") {\n      return new bizagi.rendering.tablet.actionLauncher(renderParams);\n    }\n\n    if (type == \"entityTemplate\") {\n      return new bizagi.rendering.tablet.entityTemplate(renderParams);\n    }\n\n    if (type == \"polymorphicLauncher\") {\n      return new bizagi.rendering.tablet.polymorphicLauncher(renderParams);\n    }\n\n    if (type == \"userfield\") {\n      return new bizagi.rendering.tablet.userfieldWrapper(renderParams);\n    }\n\n    // Check query renders (starts with \"query\")\n    //if (type.indexOf(\"query\") == 0) {\n    //    return this.getQueryRender(params);\n    //}\n\n    // Check search renders (starts with \"search\")\n    if (type.indexOf(\"search\") == 0) {\n      return this.getSearchRender(params);\n    }\n\n    if (type == \"document\") {\n      return new bizagi.rendering.tablet.document(renderParams);\n    }\n\n    if (type == \"image\") {\n      return new bizagi.rendering.tablet.image(renderParams);\n    }\n\n    if (type == \"fileprint\") {\n      return new bizagi.rendering.tablet.fileprint(renderParams);\n    }\n\n    if (type == \"geolocation\") {\n      return new bizagi.rendering.tablet.geolocation(renderParams);\n    }\n\n    if (type == \"collectionnavigator\") {\n      return new bizagi.rendering.tablet.collectionnavigator(renderParams);\n    }\n\n    // Check layout renders (starts with \"layout\")\n    if (type.indexOf(\"layout\") === 0) {\n      return self.getLayoutRender(params);\n    }\n\n    // Check range renders (starts with \"range\")\n    if (type.indexOf(\"range\") === 0) {\n      return self.getRangeRender(params);\n    }\n\n    //if (type == \"getUser\") {\n    //    return new bizagi.rendering.tablet.getUser(renderParams);\n    //}\n\n    if (type == \"activityCheckList\") {\n      return new bizagi.rendering.tablet.activityCheckList(renderParams);\n    }\n\n    if (type == \"mobiletext\")\n    return new bizagi.rendering.mobiletext(renderParams);\n\n    // Deprecated control\n    if (type == \"letter\")\n    return new bizagi.rendering.tablet.letter(renderParams);\n\n    if (/^signature$/i.test(type)) {\n      return new bizagi.rendering.tablet.handSignature(renderParams);\n    }\n\n    if (/^readonly$/i.test(type)) {\n      return new bizagi.rendering.tablet.readonly(renderParams);\n    }\n\n    // No type supported\n    //bizagi.log(type + \" not supported in render factory\", data, \"error\");\n    //return null;\n    return this._super(params);\n  },\n\n  /**\r\n     * Returns the appropiatelayout render based on the type   \r\n     */\n  getLayoutRender: function getLayoutRender(params) {\n    var type = params.type;\n    var data = params.data;\n    var properties = data.properties;\n    var renderParams = $.extend(params, {\n      renderFactory: this,\n      dataService: params.dataService || this.dataService });\n\n\n    if (type == \"layoutImage\")\n    return new bizagi.rendering.tablet.layoutImage(renderParams);\n\n    if (type == \"layoutLink\")\n    return new bizagi.rendering.tablet.layoutLink(renderParams);\n\n    if (type == \"layoutLabel\") {\n      if (!bizagi.override.hiddenControlsWithDataType) {\n        delete properties.dataType;\n      }\n      return new bizagi.rendering.tablet.layoutLabel(renderParams);\n    }\n\n    if (type == \"layoutText\")\n    return new bizagi.rendering.tablet.layoutText(renderParams);\n\n    if (type == \"layoutDateTime\")\n    return new bizagi.rendering.tablet.layoutDateTime(renderParams);\n\n    if (type == \"layoutNumber\")\n    return new bizagi.rendering.tablet.layoutNumber(renderParams);\n\n    if (type == \"layoutMoney\")\n    return new bizagi.rendering.tablet.layoutMoney(renderParams);\n\n    if (type == \"layoutPlaceholder\")\n    return new bizagi.rendering.tablet.layoutPlaceholder(renderParams);\n\n    if (type == \"layoutBoolean\")\n    return new bizagi.rendering.tablet.layoutBoolean(renderParams);\n\n    if (type == \"layoutUpload\")\n    return new bizagi.rendering.tablet.layoutUpload(renderParams);\n\n    return this._super(params);\n  },\n\n  /**\r\n      * Returns the appropiate search render based on the type     \r\n      */\n  getRangeRender: function getRangeRender(params) {\n    var type = params.type;\n    var renderParams = $.extend(params, {\n      renderFactory: this,\n      dataService: params.dataService || this.dataService });\n\n\n    if (type === \"rangeDate\")\n    return new bizagi.rendering.tablet.rangeDate(renderParams);\n\n    if (type === \"rangeMoney\")\n    return new bizagi.rendering.tablet.rangeMoney(renderParams);\n\n    if (type === \"rangeNumber\")\n    return new bizagi.rendering.tablet.rangeNumber(renderParams);\n\n    // No type supported\n    bizagi.log(type + \" not supported in render factory\", params.data, \"error\");\n    return null;\n  },\n\n  /**\r\n      * Returns the appropiate search render based on the type         \r\n      */\n  getSearchRender: function getSearchRender(params) {\n    var type = params.type;\n    var data = params.data;\n    var properties = data.properties;\n    var searchParams = $.extend(params, {\n      renderFactory: this,\n      dataService: params.dataService || this.dataService });\n\n\n    type = type.replace(/tablet/, '');\n\n    if (type == \"searchText\") {\n      var isExtended = bizagi.util.parseBoolean(data.properties.isExtended) || false;\n\n      // Creates one extended render\n      if (isExtended)\n      return new bizagi.rendering.tablet.extendedText(searchParams);\n\n      // Creates one normal text render\n      return new bizagi.rendering.tablet.text(searchParams);\n    }\n\n    if (type == \"searchBoolean\") {\n      var display = data.properties.display || \"option\";\n\n      // Creates one check render\n      if (display == \"check\")\n      return new bizagi.rendering.tablet.check(searchParams);\n\n      // Creates one yes-no render\n      return new bizagi.rendering.tablet.yesno(searchParams);\n    }\n\n    if (type == \"searchNumber\") {\n      // Creates a Scientific Notation render\n      if (data.properties.dataType == 29)\n      return new bizagi.rendering.tablet.numberScientificNotation(searchParams);\n\n      return new bizagi.rendering.tablet.number(searchParams);\n    }\n\n    if (type == \"searchMoney\")\n    return new bizagi.rendering.tablet.money(searchParams);\n\n    if (type == \"searchDate\")\n    return new bizagi.rendering.tablet.date(searchParams);\n\n    if (type == \"searchCombo\")\n    return new bizagi.rendering.tablet.combo(searchParams);\n\n    if (type == \"searchSuggest\")\n    return new bizagi.rendering.tablet.search(searchParams);\n\n    if (type == \"searchLabel\") {\n      if (!bizagi.override.hiddenControlsWithDataType) {\n        delete properties.dataType;\n      }\n      return new bizagi.rendering.tablet.label(searchParams);\n    }\n\n    // No type supported\n    bizagi.log(type + \" not supported in render factory\", data, \"error\");\n    return null;\n  } });","/**\r\n *   Name: Bizagi tablet queryForm Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the container class to adjust to tablet devices\r\n *   -   Will apply a desktop form template\r\n */\n\n// Extends from form tablet base\nbizagi.rendering.tablet.form.extend(\"bizagi.rendering.tablet.queryForm\", {}, {});","/**\r\n *   Name: Bizagi tablet FormTemplate Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the form template class to adjust to tablet devices\r\n */\n\n// Extends from form tablet base\nbizagi.rendering.tablet.form.extend(\"bizagi.rendering.tablet.formTemplate\", bizagi.rendering.formTemplate.prototype);\n// Extends itself\nbizagi.rendering.tablet.formTemplate.extend(\"bizagi.rendering.tablet.formTemplate\", {}, {});","/**\r\n *   Name: Bizagi Rendering Users Form\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script override rendering.form to create and update users\r\n */\n\n// Extends from form tablet base\nbizagi.rendering.tablet.form.extend(\"bizagi.rendering.tablet.usersForm\", {}, {});"]}